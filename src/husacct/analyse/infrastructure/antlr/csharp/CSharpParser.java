package husacct.analyse.infrastructure.antlr.csharp;


import java.util.HashMap;

import org.antlr.runtime.BaseRecognizer;
import org.antlr.runtime.BitSet;
import org.antlr.runtime.DFA;
import org.antlr.runtime.EarlyExitException;
import org.antlr.runtime.IntStream;
import org.antlr.runtime.MismatchedSetException;
import org.antlr.runtime.NoViableAltException;
import org.antlr.runtime.Parser;
import org.antlr.runtime.ParserRuleReturnScope;
import org.antlr.runtime.RecognitionException;
import org.antlr.runtime.RecognizerSharedState;
import org.antlr.runtime.Token;
import org.antlr.runtime.TokenStream;
import org.antlr.runtime.tree.CommonTreeAdaptor;
import org.antlr.runtime.tree.TreeAdaptor;

public class CSharpParser extends Parser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "IDENTIFIER", "Real_literal", "NUMBER", "Hex_number", "Character_literal", "STRINGLITERAL", "Verbatim_string_literal", "TRUE", "FALSE", "NULL", "DOT", "PTR", "MINUS", "GT", "USING", "ENUM", "IF", "ELIF", "ENDIF", "DEFINE", "UNDEF", "SEMI", "RPAREN", "WS", "TS", "DOC_LINE_COMMENT", "LINE_COMMENT", "COMMENT", "EscapeSequence", "Verbatim_string_literal_character", "Decimal_digits", "INTEGER_TYPE_SUFFIX", "Decimal_integer_literal", "GooBallIdentifier", "GooBall", "IdentifierStart", "IdentifierPart", "Exponent_part", "Real_type_suffix", "Pragma", "PP_CONDITIONAL", "PREPROCESSOR_DIRECTIVE", "IF_TOKEN", "DEFINE_TOKEN", "ELSE_TOKEN", "ENDIF_TOKEN", "UNDEF_TOKEN", "PP_EXPRESSION", "PP_OR_EXPRESSION", "PP_AND_EXPRESSION", "PP_EQUALITY_EXPRESSION", "PP_UNARY_EXPRESSION", "PP_PRIMARY_EXPRESSION", "HEX_DIGIT", "HEX_DIGITS", "DECIMAL_DIGIT", "Sign", "'namespace'", "'{'", "'}'", "'extern'", "'alias'", "'='", "'partial'", "'new'", "'public'", "'protected'", "'private'", "'internal'", "'unsafe'", "'abstract'", "'sealed'", "'static'", "'readonly'", "'volatile'", "'virtual'", "'override'", "'const'", "'void'", "'this'", "'::'", "'base'", "'['", "']'", "'('", "','", "':'", "'out'", "'ref'", "'sizeof'", "'checked'", "'unchecked'", "'default'", "'delegate'", "'typeof'", "'<'", "'*'", "'?'", "'++'", "'--'", "'+'", "'!'", "'~'", "'+='", "'-='", "'*='", "'/='", "'%='", "'&='", "'|='", "'^='", "'<<='", "'>='", "'&'", "'/'", "'%'", "'<<'", "'<='", "'is'", "'as'", "'=='", "'!='", "'^'", "'|'", "'&&'", "'||'", "'??'", "'=>'", "'into'", "'from'", "'in'", "'join'", "'on'", "'equals'", "'let'", "'orderby'", "'ascending'", "'descending'", "'select'", "'group'", "'by'", "'where'", "'assembly'", "'module'", "'field'", "'event'", "'method'", "'param'", "'property'", "'return'", "'type'", "'class'", "'get'", "'set'", "'add'", "'remove'", "'sbyte'", "'byte'", "'short'", "'ushort'", "'int'", "'uint'", "'long'", "'ulong'", "'char'", "'struct'", "'__arglist'", "'params'", "'interface'", "'operator'", "'implicit'", "'explicit'", "'fixed'", "'var'", "'dynamic'", "'stackalloc'", "'else'", "'switch'", "'case'", "'while'", "'do'", "'for'", "'foreach'", "'break'", "'continue'", "'goto'", "'throw'", "'try'", "'catch'", "'finally'", "'lock'", "'yield'", "'bool'", "'decimal'", "'double'", "'float'", "'object'", "'string'", "'pragma'"
    };
    public static final int DECIMAL_DIGIT=59;
    public static final int T__159=159;
    public static final int T__158=158;
    public static final int Character_literal=8;
    public static final int T__160=160;
    public static final int T__167=167;
    public static final int EOF=-1;
    public static final int T__168=168;
    public static final int T__165=165;
    public static final int T__166=166;
    public static final int T__163=163;
    public static final int T__164=164;
    public static final int T__161=161;
    public static final int T__162=162;
    public static final int ELSE_TOKEN=48;
    public static final int T__93=93;
    public static final int T__94=94;
    public static final int T__91=91;
    public static final int RPAREN=26;
    public static final int T__92=92;
    public static final int T__148=148;
    public static final int T__147=147;
    public static final int T__90=90;
    public static final int T__149=149;
    public static final int USING=18;
    public static final int PP_AND_EXPRESSION=53;
    public static final int Sign=60;
    public static final int T__154=154;
    public static final int T__155=155;
    public static final int T__156=156;
    public static final int T__99=99;
    public static final int T__157=157;
    public static final int T__98=98;
    public static final int T__150=150;
    public static final int T__97=97;
    public static final int T__151=151;
    public static final int T__96=96;
    public static final int T__152=152;
    public static final int T__95=95;
    public static final int T__153=153;
    public static final int T__139=139;
    public static final int T__138=138;
    public static final int T__137=137;
    public static final int T__136=136;
    public static final int T__80=80;
    public static final int T__81=81;
    public static final int T__82=82;
    public static final int T__83=83;
    public static final int NUMBER=6;
    public static final int Decimal_integer_literal=36;
    public static final int DEFINE_TOKEN=47;
    public static final int T__141=141;
    public static final int T__85=85;
    public static final int T__142=142;
    public static final int T__84=84;
    public static final int T__87=87;
    public static final int T__140=140;
    public static final int T__86=86;
    public static final int T__145=145;
    public static final int T__89=89;
    public static final int T__146=146;
    public static final int T__88=88;
    public static final int UNDEF_TOKEN=50;
    public static final int T__143=143;
    public static final int T__144=144;
    public static final int T__126=126;
    public static final int ENDIF_TOKEN=49;
    public static final int T__125=125;
    public static final int T__128=128;
    public static final int T__127=127;
    public static final int T__71=71;
    public static final int WS=27;
    public static final int T__129=129;
    public static final int T__72=72;
    public static final int PP_PRIMARY_EXPRESSION=56;
    public static final int T__70=70;
    public static final int GT=17;
    public static final int PP_EQUALITY_EXPRESSION=54;
    public static final int T__76=76;
    public static final int T__75=75;
    public static final int T__130=130;
    public static final int T__74=74;
    public static final int T__131=131;
    public static final int T__73=73;
    public static final int T__132=132;
    public static final int T__133=133;
    public static final int T__79=79;
    public static final int T__134=134;
    public static final int T__78=78;
    public static final int T__135=135;
    public static final int T__77=77;
    public static final int T__118=118;
    public static final int T__119=119;
    public static final int T__116=116;
    public static final int T__117=117;
    public static final int T__114=114;
    public static final int T__115=115;
    public static final int T__124=124;
    public static final int T__123=123;
    public static final int T__122=122;
    public static final int T__121=121;
    public static final int T__120=120;
    public static final int T__202=202;
    public static final int T__107=107;
    public static final int T__108=108;
    public static final int T__109=109;
    public static final int PREPROCESSOR_DIRECTIVE=45;
    public static final int T__103=103;
    public static final int T__104=104;
    public static final int T__105=105;
    public static final int T__106=106;
    public static final int T__111=111;
    public static final int T__110=110;
    public static final int T__113=113;
    public static final int T__112=112;
    public static final int TS=28;
    public static final int HEX_DIGIT=57;
    public static final int T__102=102;
    public static final int T__101=101;
    public static final int T__100=100;
    public static final int MINUS=16;
    public static final int SEMI=25;
    public static final int Hex_number=7;
    public static final int ENUM=19;
    public static final int STRINGLITERAL=9;
    public static final int PP_UNARY_EXPRESSION=55;
    public static final int PP_OR_EXPRESSION=52;
    public static final int ENDIF=22;
    public static final int COMMENT=31;
    public static final int LINE_COMMENT=30;
    public static final int NULL=13;
    public static final int IdentifierStart=39;
    public static final int Verbatim_string_literal=10;
    public static final int IF_TOKEN=46;
    public static final int ELIF=21;
    public static final int T__200=200;
    public static final int T__201=201;
    public static final int PP_CONDITIONAL=44;
    public static final int FALSE=12;
    public static final int EscapeSequence=32;
    public static final int INTEGER_TYPE_SUFFIX=35;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__66=66;
    public static final int T__67=67;
    public static final int T__64=64;
    public static final int T__65=65;
    public static final int T__62=62;
    public static final int Real_literal=5;
    public static final int T__63=63;
    public static final int PP_EXPRESSION=51;
    public static final int GooBall=38;
    public static final int T__61=61;
    public static final int DEFINE=23;
    public static final int IF=20;
    public static final int Exponent_part=41;
    public static final int T__199=199;
    public static final int T__198=198;
    public static final int T__197=197;
    public static final int T__196=196;
    public static final int T__195=195;
    public static final int T__194=194;
    public static final int T__193=193;
    public static final int T__192=192;
    public static final int T__191=191;
    public static final int T__190=190;
    public static final int IDENTIFIER=4;
    public static final int UNDEF=24;
    public static final int DOT=14;
    public static final int IdentifierPart=40;
    public static final int T__184=184;
    public static final int T__183=183;
    public static final int T__186=186;
    public static final int T__185=185;
    public static final int T__188=188;
    public static final int T__187=187;
    public static final int DOC_LINE_COMMENT=29;
    public static final int T__189=189;
    public static final int GooBallIdentifier=37;
    public static final int T__180=180;
    public static final int T__182=182;
    public static final int T__181=181;
    public static final int Pragma=43;
    public static final int Verbatim_string_literal_character=33;
    public static final int TRUE=11;
    public static final int PTR=15;
    public static final int T__175=175;
    public static final int T__174=174;
    public static final int T__173=173;
    public static final int T__172=172;
    public static final int T__179=179;
    public static final int T__178=178;
    public static final int T__177=177;
    public static final int Decimal_digits=34;
    public static final int T__176=176;
    public static final int T__171=171;
    public static final int T__170=170;
    public static final int Real_type_suffix=42;
    public static final int HEX_DIGITS=58;
    public static final int T__169=169;

    // delegates
    // delegators


        public CSharpParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public CSharpParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
            this.state.ruleMemo = new HashMap[356+1];
             
             
        }
        
    protected TreeAdaptor adaptor = new CommonTreeAdaptor();

    public void setTreeAdaptor(TreeAdaptor adaptor) {
        this.adaptor = adaptor;
    }
    public TreeAdaptor getTreeAdaptor() {
        return adaptor;
    }

    public String[] getTokenNames() { return CSharpParser.tokenNames; }
    public String getGrammarFileName() { return "C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g"; }


      protected boolean is_class_modifier() 
      {
        return false;
      }


    public static class compilation_unit_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "compilation_unit"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:32:1: compilation_unit : namespace_body[true] ;
    public final CSharpParser.compilation_unit_return compilation_unit() throws RecognitionException {
        CSharpParser.compilation_unit_return retval = new CSharpParser.compilation_unit_return();
        retval.start = input.LT(1);
        int compilation_unit_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.namespace_body_return namespace_body1 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 1) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:32:17: ( namespace_body[true] )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:33:3: namespace_body[true]
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_namespace_body_in_compilation_unit76);
            namespace_body1=namespace_body(true);

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, namespace_body1.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 1, compilation_unit_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "compilation_unit"

    public static class namespace_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "namespace_declaration"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:35:1: namespace_declaration : 'namespace' qualified_identifier namespace_block ( ';' )? ;
    public final CSharpParser.namespace_declaration_return namespace_declaration() throws RecognitionException {
        CSharpParser.namespace_declaration_return retval = new CSharpParser.namespace_declaration_return();
        retval.start = input.LT(1);
        int namespace_declaration_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal2=null;
        Token char_literal5=null;
        CSharpParser.qualified_identifier_return qualified_identifier3 = null;

        CSharpParser.namespace_block_return namespace_block4 = null;


        Object string_literal2_tree=null;
        Object char_literal5_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 2) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:35:22: ( 'namespace' qualified_identifier namespace_block ( ';' )? )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:36:3: 'namespace' qualified_identifier namespace_block ( ';' )?
            {
            root_0 = (Object)adaptor.nil();

            string_literal2=(Token)match(input,61,FOLLOW_61_in_namespace_declaration86); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal2_tree = (Object)adaptor.create(string_literal2);
            adaptor.addChild(root_0, string_literal2_tree);
            }
            pushFollow(FOLLOW_qualified_identifier_in_namespace_declaration90);
            qualified_identifier3=qualified_identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, qualified_identifier3.getTree());
            pushFollow(FOLLOW_namespace_block_in_namespace_declaration94);
            namespace_block4=namespace_block();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, namespace_block4.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:36:58: ( ';' )?
            int alt1=2;
            int LA1_0 = input.LA(1);

            if ( (LA1_0==SEMI) ) {
                alt1=1;
            }
            switch (alt1) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:36:58: ';'
                    {
                    char_literal5=(Token)match(input,SEMI,FOLLOW_SEMI_in_namespace_declaration98); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal5_tree = (Object)adaptor.create(char_literal5);
                    adaptor.addChild(root_0, char_literal5_tree);
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 2, namespace_declaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "namespace_declaration"

    public static class namespace_block_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "namespace_block"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:37:1: namespace_block : '{' namespace_body[false] '}' ;
    public final CSharpParser.namespace_block_return namespace_block() throws RecognitionException {
        CSharpParser.namespace_block_return retval = new CSharpParser.namespace_block_return();
        retval.start = input.LT(1);
        int namespace_block_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal6=null;
        Token char_literal8=null;
        CSharpParser.namespace_body_return namespace_body7 = null;


        Object char_literal6_tree=null;
        Object char_literal8_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 3) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:37:16: ( '{' namespace_body[false] '}' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:38:3: '{' namespace_body[false] '}'
            {
            root_0 = (Object)adaptor.nil();

            char_literal6=(Token)match(input,62,FOLLOW_62_in_namespace_block108); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal6_tree = (Object)adaptor.create(char_literal6);
            adaptor.addChild(root_0, char_literal6_tree);
            }
            pushFollow(FOLLOW_namespace_body_in_namespace_block112);
            namespace_body7=namespace_body(false);

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, namespace_body7.getTree());
            char_literal8=(Token)match(input,63,FOLLOW_63_in_namespace_block117); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal8_tree = (Object)adaptor.create(char_literal8);
            adaptor.addChild(root_0, char_literal8_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 3, namespace_block_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "namespace_block"

    public static class namespace_body_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "namespace_body"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:39:1: namespace_body[bool bGlobal] : ( extern_alias_directives )? ( using_directives )? ( global_attributes )? ( namespace_member_declarations )? ;
    public final CSharpParser.namespace_body_return namespace_body(boolean bGlobal) throws RecognitionException {
        CSharpParser.namespace_body_return retval = new CSharpParser.namespace_body_return();
        retval.start = input.LT(1);
        int namespace_body_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.extern_alias_directives_return extern_alias_directives9 = null;

        CSharpParser.using_directives_return using_directives10 = null;

        CSharpParser.global_attributes_return global_attributes11 = null;

        CSharpParser.namespace_member_declarations_return namespace_member_declarations12 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 4) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:39:29: ( ( extern_alias_directives )? ( using_directives )? ( global_attributes )? ( namespace_member_declarations )? )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:40:3: ( extern_alias_directives )? ( using_directives )? ( global_attributes )? ( namespace_member_declarations )?
            {
            root_0 = (Object)adaptor.nil();

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:40:3: ( extern_alias_directives )?
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( (LA2_0==64) ) {
                int LA2_1 = input.LA(2);

                if ( (LA2_1==65) ) {
                    alt2=1;
                }
            }
            switch (alt2) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:40:3: extern_alias_directives
                    {
                    pushFollow(FOLLOW_extern_alias_directives_in_namespace_body127);
                    extern_alias_directives9=extern_alias_directives();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, extern_alias_directives9.getTree());

                    }
                    break;

            }

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:40:30: ( using_directives )?
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==USING) ) {
                alt3=1;
            }
            switch (alt3) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:40:30: using_directives
                    {
                    pushFollow(FOLLOW_using_directives_in_namespace_body132);
                    using_directives10=using_directives();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, using_directives10.getTree());

                    }
                    break;

            }

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:40:50: ( global_attributes )?
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==86) ) {
                int LA4_1 = input.LA(2);

                if ( ((LA4_1>=146 && LA4_1<=147)) ) {
                    int LA4_3 = input.LA(3);

                    if ( (LA4_3==90) ) {
                        alt4=1;
                    }
                }
            }
            switch (alt4) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:40:50: global_attributes
                    {
                    pushFollow(FOLLOW_global_attributes_in_namespace_body137);
                    global_attributes11=global_attributes();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, global_attributes11.getTree());

                    }
                    break;

            }

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:40:71: ( namespace_member_declarations )?
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==ENUM||LA5_0==61||LA5_0==64||(LA5_0>=67 && LA5_0<=80)||LA5_0==86||LA5_0==97||LA5_0==155||LA5_0==169||LA5_0==172) ) {
                alt5=1;
            }
            switch (alt5) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:40:71: namespace_member_declarations
                    {
                    pushFollow(FOLLOW_namespace_member_declarations_in_namespace_body142);
                    namespace_member_declarations12=namespace_member_declarations();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, namespace_member_declarations12.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 4, namespace_body_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "namespace_body"

    public static class extern_alias_directives_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "extern_alias_directives"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:41:1: extern_alias_directives : ( extern_alias_directive )+ ;
    public final CSharpParser.extern_alias_directives_return extern_alias_directives() throws RecognitionException {
        CSharpParser.extern_alias_directives_return retval = new CSharpParser.extern_alias_directives_return();
        retval.start = input.LT(1);
        int extern_alias_directives_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.extern_alias_directive_return extern_alias_directive13 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 5) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:41:24: ( ( extern_alias_directive )+ )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:42:3: ( extern_alias_directive )+
            {
            root_0 = (Object)adaptor.nil();

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:42:3: ( extern_alias_directive )+
            int cnt6=0;
            loop6:
            do {
                int alt6=2;
                int LA6_0 = input.LA(1);

                if ( (LA6_0==64) ) {
                    int LA6_2 = input.LA(2);

                    if ( (LA6_2==65) ) {
                        alt6=1;
                    }


                }


                switch (alt6) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:42:3: extern_alias_directive
            	    {
            	    pushFollow(FOLLOW_extern_alias_directive_in_extern_alias_directives152);
            	    extern_alias_directive13=extern_alias_directive();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, extern_alias_directive13.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt6 >= 1 ) break loop6;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(6, input);
                        throw eee;
                }
                cnt6++;
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 5, extern_alias_directives_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "extern_alias_directives"

    public static class extern_alias_directive_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "extern_alias_directive"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:43:1: extern_alias_directive : 'extern' 'alias' identifier ';' ;
    public final CSharpParser.extern_alias_directive_return extern_alias_directive() throws RecognitionException {
        CSharpParser.extern_alias_directive_return retval = new CSharpParser.extern_alias_directive_return();
        retval.start = input.LT(1);
        int extern_alias_directive_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal14=null;
        Token string_literal15=null;
        Token char_literal17=null;
        CSharpParser.identifier_return identifier16 = null;


        Object string_literal14_tree=null;
        Object string_literal15_tree=null;
        Object char_literal17_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 6) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:43:23: ( 'extern' 'alias' identifier ';' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:44:3: 'extern' 'alias' identifier ';'
            {
            root_0 = (Object)adaptor.nil();

            string_literal14=(Token)match(input,64,FOLLOW_64_in_extern_alias_directive162); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal14_tree = (Object)adaptor.create(string_literal14);
            adaptor.addChild(root_0, string_literal14_tree);
            }
            string_literal15=(Token)match(input,65,FOLLOW_65_in_extern_alias_directive166); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal15_tree = (Object)adaptor.create(string_literal15);
            adaptor.addChild(root_0, string_literal15_tree);
            }
            pushFollow(FOLLOW_identifier_in_extern_alias_directive170);
            identifier16=identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier16.getTree());
            char_literal17=(Token)match(input,SEMI,FOLLOW_SEMI_in_extern_alias_directive173); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal17_tree = (Object)adaptor.create(char_literal17);
            adaptor.addChild(root_0, char_literal17_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 6, extern_alias_directive_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "extern_alias_directive"

    public static class using_directives_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "using_directives"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:45:1: using_directives : ( using_directive )+ ;
    public final CSharpParser.using_directives_return using_directives() throws RecognitionException {
        CSharpParser.using_directives_return retval = new CSharpParser.using_directives_return();
        retval.start = input.LT(1);
        int using_directives_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.using_directive_return using_directive18 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 7) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:45:17: ( ( using_directive )+ )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:46:3: ( using_directive )+
            {
            root_0 = (Object)adaptor.nil();

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:46:3: ( using_directive )+
            int cnt7=0;
            loop7:
            do {
                int alt7=2;
                int LA7_0 = input.LA(1);

                if ( (LA7_0==USING) ) {
                    alt7=1;
                }


                switch (alt7) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:46:3: using_directive
            	    {
            	    pushFollow(FOLLOW_using_directive_in_using_directives182);
            	    using_directive18=using_directive();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, using_directive18.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt7 >= 1 ) break loop7;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(7, input);
                        throw eee;
                }
                cnt7++;
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 7, using_directives_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "using_directives"

    public static class using_directive_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "using_directive"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:47:1: using_directive : ( using_alias_directive | using_namespace_directive ) ;
    public final CSharpParser.using_directive_return using_directive() throws RecognitionException {
        CSharpParser.using_directive_return retval = new CSharpParser.using_directive_return();
        retval.start = input.LT(1);
        int using_directive_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.using_alias_directive_return using_alias_directive19 = null;

        CSharpParser.using_namespace_directive_return using_namespace_directive20 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 8) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:47:16: ( ( using_alias_directive | using_namespace_directive ) )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:48:3: ( using_alias_directive | using_namespace_directive )
            {
            root_0 = (Object)adaptor.nil();

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:48:3: ( using_alias_directive | using_namespace_directive )
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==USING) ) {
                int LA8_1 = input.LA(2);

                if ( (LA8_1==IDENTIFIER||LA8_1==65||(LA8_1>=132 && LA8_1<=133)||(LA8_1>=135 && LA8_1<=148)||(LA8_1>=150 && LA8_1<=152)||LA8_1==154||(LA8_1>=157 && LA8_1<=159)||LA8_1==170||(LA8_1>=177 && LA8_1<=178)||LA8_1==195||LA8_1==202) ) {
                    int LA8_2 = input.LA(3);

                    if ( (LA8_2==DOT||LA8_2==SEMI||LA8_2==84||LA8_2==99) ) {
                        alt8=2;
                    }
                    else if ( (LA8_2==66) ) {
                        alt8=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 8, 2, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 8, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }
            switch (alt8) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:48:4: using_alias_directive
                    {
                    pushFollow(FOLLOW_using_alias_directive_in_using_directive193);
                    using_alias_directive19=using_alias_directive();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, using_alias_directive19.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:49:5: using_namespace_directive
                    {
                    pushFollow(FOLLOW_using_namespace_directive_in_using_directive199);
                    using_namespace_directive20=using_namespace_directive();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, using_namespace_directive20.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 8, using_directive_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "using_directive"

    public static class using_alias_directive_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "using_alias_directive"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:50:1: using_alias_directive : 'using' identifier '=' namespace_or_type_name ';' ;
    public final CSharpParser.using_alias_directive_return using_alias_directive() throws RecognitionException {
        CSharpParser.using_alias_directive_return retval = new CSharpParser.using_alias_directive_return();
        retval.start = input.LT(1);
        int using_alias_directive_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal21=null;
        Token char_literal23=null;
        Token char_literal25=null;
        CSharpParser.identifier_return identifier22 = null;

        CSharpParser.namespace_or_type_name_return namespace_or_type_name24 = null;


        Object string_literal21_tree=null;
        Object char_literal23_tree=null;
        Object char_literal25_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 9) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:50:22: ( 'using' identifier '=' namespace_or_type_name ';' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:51:3: 'using' identifier '=' namespace_or_type_name ';'
            {
            root_0 = (Object)adaptor.nil();

            string_literal21=(Token)match(input,USING,FOLLOW_USING_in_using_alias_directive209); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal21_tree = (Object)adaptor.create(string_literal21);
            adaptor.addChild(root_0, string_literal21_tree);
            }
            pushFollow(FOLLOW_identifier_in_using_alias_directive213);
            identifier22=identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier22.getTree());
            char_literal23=(Token)match(input,66,FOLLOW_66_in_using_alias_directive217); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal23_tree = (Object)adaptor.create(char_literal23);
            adaptor.addChild(root_0, char_literal23_tree);
            }
            pushFollow(FOLLOW_namespace_or_type_name_in_using_alias_directive221);
            namespace_or_type_name24=namespace_or_type_name();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, namespace_or_type_name24.getTree());
            char_literal25=(Token)match(input,SEMI,FOLLOW_SEMI_in_using_alias_directive225); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal25_tree = (Object)adaptor.create(char_literal25);
            adaptor.addChild(root_0, char_literal25_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 9, using_alias_directive_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "using_alias_directive"

    public static class using_namespace_directive_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "using_namespace_directive"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:52:1: using_namespace_directive : 'using' namespace_name ';' ;
    public final CSharpParser.using_namespace_directive_return using_namespace_directive() throws RecognitionException {
        CSharpParser.using_namespace_directive_return retval = new CSharpParser.using_namespace_directive_return();
        retval.start = input.LT(1);
        int using_namespace_directive_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal26=null;
        Token char_literal28=null;
        CSharpParser.namespace_name_return namespace_name27 = null;


        Object string_literal26_tree=null;
        Object char_literal28_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 10) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:52:26: ( 'using' namespace_name ';' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:53:3: 'using' namespace_name ';'
            {
            root_0 = (Object)adaptor.nil();

            string_literal26=(Token)match(input,USING,FOLLOW_USING_in_using_namespace_directive234); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal26_tree = (Object)adaptor.create(string_literal26);
            adaptor.addChild(root_0, string_literal26_tree);
            }
            pushFollow(FOLLOW_namespace_name_in_using_namespace_directive238);
            namespace_name27=namespace_name();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, namespace_name27.getTree());
            char_literal28=(Token)match(input,SEMI,FOLLOW_SEMI_in_using_namespace_directive242); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal28_tree = (Object)adaptor.create(char_literal28);
            adaptor.addChild(root_0, char_literal28_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 10, using_namespace_directive_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "using_namespace_directive"

    public static class namespace_member_declarations_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "namespace_member_declarations"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:54:1: namespace_member_declarations : ( namespace_member_declaration )+ ;
    public final CSharpParser.namespace_member_declarations_return namespace_member_declarations() throws RecognitionException {
        CSharpParser.namespace_member_declarations_return retval = new CSharpParser.namespace_member_declarations_return();
        retval.start = input.LT(1);
        int namespace_member_declarations_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.namespace_member_declaration_return namespace_member_declaration29 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 11) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:54:30: ( ( namespace_member_declaration )+ )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:55:3: ( namespace_member_declaration )+
            {
            root_0 = (Object)adaptor.nil();

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:55:3: ( namespace_member_declaration )+
            int cnt9=0;
            loop9:
            do {
                int alt9=2;
                int LA9_0 = input.LA(1);

                if ( (LA9_0==ENUM||LA9_0==61||LA9_0==64||(LA9_0>=67 && LA9_0<=80)||LA9_0==86||LA9_0==97||LA9_0==155||LA9_0==169||LA9_0==172) ) {
                    alt9=1;
                }


                switch (alt9) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:55:3: namespace_member_declaration
            	    {
            	    pushFollow(FOLLOW_namespace_member_declaration_in_namespace_member_declarations251);
            	    namespace_member_declaration29=namespace_member_declaration();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, namespace_member_declaration29.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt9 >= 1 ) break loop9;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(9, input);
                        throw eee;
                }
                cnt9++;
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 11, namespace_member_declarations_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "namespace_member_declarations"

    public static class namespace_member_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "namespace_member_declaration"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:56:1: namespace_member_declaration : ( namespace_declaration | ( attributes )? ( modifiers )? type_declaration );
    public final CSharpParser.namespace_member_declaration_return namespace_member_declaration() throws RecognitionException {
        CSharpParser.namespace_member_declaration_return retval = new CSharpParser.namespace_member_declaration_return();
        retval.start = input.LT(1);
        int namespace_member_declaration_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.namespace_declaration_return namespace_declaration30 = null;

        CSharpParser.attributes_return attributes31 = null;

        CSharpParser.modifiers_return modifiers32 = null;

        CSharpParser.type_declaration_return type_declaration33 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 12) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:56:29: ( namespace_declaration | ( attributes )? ( modifiers )? type_declaration )
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==61) ) {
                alt12=1;
            }
            else if ( (LA12_0==ENUM||LA12_0==64||(LA12_0>=67 && LA12_0<=80)||LA12_0==86||LA12_0==97||LA12_0==155||LA12_0==169||LA12_0==172) ) {
                alt12=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }
            switch (alt12) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:57:3: namespace_declaration
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_namespace_declaration_in_namespace_member_declaration261);
                    namespace_declaration30=namespace_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, namespace_declaration30.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:58:5: ( attributes )? ( modifiers )? type_declaration
                    {
                    root_0 = (Object)adaptor.nil();

                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:58:5: ( attributes )?
                    int alt10=2;
                    int LA10_0 = input.LA(1);

                    if ( (LA10_0==86) ) {
                        alt10=1;
                    }
                    switch (alt10) {
                        case 1 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:58:5: attributes
                            {
                            pushFollow(FOLLOW_attributes_in_namespace_member_declaration267);
                            attributes31=attributes();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes31.getTree());

                            }
                            break;

                    }

                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:58:19: ( modifiers )?
                    int alt11=2;
                    int LA11_0 = input.LA(1);

                    if ( (LA11_0==64||(LA11_0>=68 && LA11_0<=80)) ) {
                        alt11=1;
                    }
                    switch (alt11) {
                        case 1 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:58:19: modifiers
                            {
                            pushFollow(FOLLOW_modifiers_in_namespace_member_declaration272);
                            modifiers32=modifiers();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, modifiers32.getTree());

                            }
                            break;

                    }

                    pushFollow(FOLLOW_type_declaration_in_namespace_member_declaration277);
                    type_declaration33=type_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_declaration33.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 12, namespace_member_declaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "namespace_member_declaration"

    public static class type_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "type_declaration"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:59:1: type_declaration : ( ( 'partial' )=> 'partial' ( class_declaration | struct_declaration | interface_declaration ) | class_declaration | struct_declaration | interface_declaration | enum_declaration | delegate_declaration );
    public final CSharpParser.type_declaration_return type_declaration() throws RecognitionException {
        CSharpParser.type_declaration_return retval = new CSharpParser.type_declaration_return();
        retval.start = input.LT(1);
        int type_declaration_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal34=null;
        CSharpParser.class_declaration_return class_declaration35 = null;

        CSharpParser.struct_declaration_return struct_declaration36 = null;

        CSharpParser.interface_declaration_return interface_declaration37 = null;

        CSharpParser.class_declaration_return class_declaration38 = null;

        CSharpParser.struct_declaration_return struct_declaration39 = null;

        CSharpParser.interface_declaration_return interface_declaration40 = null;

        CSharpParser.enum_declaration_return enum_declaration41 = null;

        CSharpParser.delegate_declaration_return delegate_declaration42 = null;


        Object string_literal34_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 13) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:59:17: ( ( 'partial' )=> 'partial' ( class_declaration | struct_declaration | interface_declaration ) | class_declaration | struct_declaration | interface_declaration | enum_declaration | delegate_declaration )
            int alt14=6;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==67) && (synpred1_cs())) {
                alt14=1;
            }
            else if ( (LA14_0==155) ) {
                alt14=2;
            }
            else if ( (LA14_0==169) ) {
                alt14=3;
            }
            else if ( (LA14_0==172) ) {
                alt14=4;
            }
            else if ( (LA14_0==ENUM) ) {
                alt14=5;
            }
            else if ( (LA14_0==97) ) {
                alt14=6;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }
            switch (alt14) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:60:3: ( 'partial' )=> 'partial' ( class_declaration | struct_declaration | interface_declaration )
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal34=(Token)match(input,67,FOLLOW_67_in_type_declaration292); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal34_tree = (Object)adaptor.create(string_literal34);
                    adaptor.addChild(root_0, string_literal34_tree);
                    }
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:60:30: ( class_declaration | struct_declaration | interface_declaration )
                    int alt13=3;
                    switch ( input.LA(1) ) {
                    case 155:
                        {
                        alt13=1;
                        }
                        break;
                    case 169:
                        {
                        alt13=2;
                        }
                        break;
                    case 172:
                        {
                        alt13=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 13, 0, input);

                        throw nvae;
                    }

                    switch (alt13) {
                        case 1 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:60:31: class_declaration
                            {
                            pushFollow(FOLLOW_class_declaration_in_type_declaration297);
                            class_declaration35=class_declaration();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, class_declaration35.getTree());

                            }
                            break;
                        case 2 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:61:19: struct_declaration
                            {
                            pushFollow(FOLLOW_struct_declaration_in_type_declaration317);
                            struct_declaration36=struct_declaration();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, struct_declaration36.getTree());

                            }
                            break;
                        case 3 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:62:19: interface_declaration
                            {
                            pushFollow(FOLLOW_interface_declaration_in_type_declaration337);
                            interface_declaration37=interface_declaration();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_declaration37.getTree());

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:63:5: class_declaration
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_class_declaration_in_type_declaration344);
                    class_declaration38=class_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, class_declaration38.getTree());

                    }
                    break;
                case 3 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:64:5: struct_declaration
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_struct_declaration_in_type_declaration350);
                    struct_declaration39=struct_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, struct_declaration39.getTree());

                    }
                    break;
                case 4 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:65:5: interface_declaration
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_interface_declaration_in_type_declaration356);
                    interface_declaration40=interface_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_declaration40.getTree());

                    }
                    break;
                case 5 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:66:5: enum_declaration
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_enum_declaration_in_type_declaration362);
                    enum_declaration41=enum_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, enum_declaration41.getTree());

                    }
                    break;
                case 6 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:67:5: delegate_declaration
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_delegate_declaration_in_type_declaration368);
                    delegate_declaration42=delegate_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, delegate_declaration42.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 13, type_declaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "type_declaration"

    public static class qualified_identifier_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "qualified_identifier"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:69:1: qualified_identifier : identifier ( '.' identifier )* ;
    public final CSharpParser.qualified_identifier_return qualified_identifier() throws RecognitionException {
        CSharpParser.qualified_identifier_return retval = new CSharpParser.qualified_identifier_return();
        retval.start = input.LT(1);
        int qualified_identifier_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal44=null;
        CSharpParser.identifier_return identifier43 = null;

        CSharpParser.identifier_return identifier45 = null;


        Object char_literal44_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 14) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:69:21: ( identifier ( '.' identifier )* )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:70:3: identifier ( '.' identifier )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_identifier_in_qualified_identifier378);
            identifier43=identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier43.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:70:14: ( '.' identifier )*
            loop15:
            do {
                int alt15=2;
                int LA15_0 = input.LA(1);

                if ( (LA15_0==DOT) ) {
                    alt15=1;
                }


                switch (alt15) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:70:15: '.' identifier
            	    {
            	    char_literal44=(Token)match(input,DOT,FOLLOW_DOT_in_qualified_identifier381); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal44_tree = (Object)adaptor.create(char_literal44);
            	    adaptor.addChild(root_0, char_literal44_tree);
            	    }
            	    pushFollow(FOLLOW_identifier_in_qualified_identifier383);
            	    identifier45=identifier();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier45.getTree());

            	    }
            	    break;

            	default :
            	    break loop15;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 14, qualified_identifier_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "qualified_identifier"

    public static class namespace_name_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "namespace_name"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:71:1: namespace_name : namespace_or_type_name ;
    public final CSharpParser.namespace_name_return namespace_name() throws RecognitionException {
        CSharpParser.namespace_name_return retval = new CSharpParser.namespace_name_return();
        retval.start = input.LT(1);
        int namespace_name_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.namespace_or_type_name_return namespace_or_type_name46 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 15) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:72:3: ( namespace_or_type_name )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:72:5: namespace_or_type_name
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_namespace_or_type_name_in_namespace_name395);
            namespace_or_type_name46=namespace_or_type_name();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, namespace_or_type_name46.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 15, namespace_name_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "namespace_name"

    public static class modifiers_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "modifiers"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:74:1: modifiers : ( modifier )+ ;
    public final CSharpParser.modifiers_return modifiers() throws RecognitionException {
        CSharpParser.modifiers_return retval = new CSharpParser.modifiers_return();
        retval.start = input.LT(1);
        int modifiers_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.modifier_return modifier47 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 16) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:74:10: ( ( modifier )+ )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:75:3: ( modifier )+
            {
            root_0 = (Object)adaptor.nil();

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:75:3: ( modifier )+
            int cnt16=0;
            loop16:
            do {
                int alt16=2;
                int LA16_0 = input.LA(1);

                if ( (LA16_0==64||(LA16_0>=68 && LA16_0<=80)) ) {
                    alt16=1;
                }


                switch (alt16) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:75:3: modifier
            	    {
            	    pushFollow(FOLLOW_modifier_in_modifiers405);
            	    modifier47=modifier();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, modifier47.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt16 >= 1 ) break loop16;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(16, input);
                        throw eee;
                }
                cnt16++;
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 16, modifiers_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "modifiers"

    public static class modifier_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "modifier"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:76:1: modifier : ( 'new' | 'public' | 'protected' | 'private' | 'internal' | 'unsafe' | 'abstract' | 'sealed' | 'static' | 'readonly' | 'volatile' | 'extern' | 'virtual' | 'override' );
    public final CSharpParser.modifier_return modifier() throws RecognitionException {
        CSharpParser.modifier_return retval = new CSharpParser.modifier_return();
        retval.start = input.LT(1);
        int modifier_StartIndex = input.index();
        Object root_0 = null;

        Token set48=null;

        Object set48_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 17) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:76:9: ( 'new' | 'public' | 'protected' | 'private' | 'internal' | 'unsafe' | 'abstract' | 'sealed' | 'static' | 'readonly' | 'volatile' | 'extern' | 'virtual' | 'override' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:
            {
            root_0 = (Object)adaptor.nil();

            set48=(Token)input.LT(1);
            if ( input.LA(1)==64||(input.LA(1)>=68 && input.LA(1)<=80) ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set48));
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 17, modifier_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "modifier"

    public static class class_member_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "class_member_declaration"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:80:1: class_member_declaration : ( attributes )? (m= modifiers )? ( 'const' type constant_declarators ';' | event_declaration | 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration ) | interface_declaration | 'void' method_declaration | type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration ) | class_declaration | struct_declaration | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration | destructor_declaration ) ;
    public final CSharpParser.class_member_declaration_return class_member_declaration() throws RecognitionException {
        CSharpParser.class_member_declaration_return retval = new CSharpParser.class_member_declaration_return();
        retval.start = input.LT(1);
        int class_member_declaration_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal50=null;
        Token char_literal53=null;
        Token string_literal55=null;
        Token string_literal61=null;
        Token char_literal67=null;
        CSharpParser.modifiers_return m = null;

        CSharpParser.attributes_return attributes49 = null;

        CSharpParser.type_return type51 = null;

        CSharpParser.constant_declarators_return constant_declarators52 = null;

        CSharpParser.event_declaration_return event_declaration54 = null;

        CSharpParser.method_declaration_return method_declaration56 = null;

        CSharpParser.interface_declaration_return interface_declaration57 = null;

        CSharpParser.class_declaration_return class_declaration58 = null;

        CSharpParser.struct_declaration_return struct_declaration59 = null;

        CSharpParser.interface_declaration_return interface_declaration60 = null;

        CSharpParser.method_declaration_return method_declaration62 = null;

        CSharpParser.type_return type63 = null;

        CSharpParser.method_declaration_return method_declaration64 = null;

        CSharpParser.property_declaration_return property_declaration65 = null;

        CSharpParser.type_name_return type_name66 = null;

        CSharpParser.indexer_declaration_return indexer_declaration68 = null;

        CSharpParser.indexer_declaration_return indexer_declaration69 = null;

        CSharpParser.field_declaration_return field_declaration70 = null;

        CSharpParser.operator_declaration_return operator_declaration71 = null;

        CSharpParser.class_declaration_return class_declaration72 = null;

        CSharpParser.struct_declaration_return struct_declaration73 = null;

        CSharpParser.enum_declaration_return enum_declaration74 = null;

        CSharpParser.delegate_declaration_return delegate_declaration75 = null;

        CSharpParser.conversion_operator_declaration_return conversion_operator_declaration76 = null;

        CSharpParser.constructor_declaration_return constructor_declaration77 = null;

        CSharpParser.destructor_declaration_return destructor_declaration78 = null;


        Object string_literal50_tree=null;
        Object char_literal53_tree=null;
        Object string_literal55_tree=null;
        Object string_literal61_tree=null;
        Object char_literal67_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 18) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:80:25: ( ( attributes )? (m= modifiers )? ( 'const' type constant_declarators ';' | event_declaration | 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration ) | interface_declaration | 'void' method_declaration | type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration ) | class_declaration | struct_declaration | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration | destructor_declaration ) )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:81:3: ( attributes )? (m= modifiers )? ( 'const' type constant_declarators ';' | event_declaration | 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration ) | interface_declaration | 'void' method_declaration | type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration ) | class_declaration | struct_declaration | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration | destructor_declaration )
            {
            root_0 = (Object)adaptor.nil();

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:81:3: ( attributes )?
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==86) ) {
                alt17=1;
            }
            switch (alt17) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:81:3: attributes
                    {
                    pushFollow(FOLLOW_attributes_in_class_member_declaration481);
                    attributes49=attributes();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes49.getTree());

                    }
                    break;

            }

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:82:4: (m= modifiers )?
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==64||(LA18_0>=68 && LA18_0<=80)) ) {
                alt18=1;
            }
            switch (alt18) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:82:4: m= modifiers
                    {
                    pushFollow(FOLLOW_modifiers_in_class_member_declaration488);
                    m=modifiers();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, m.getTree());

                    }
                    break;

            }

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:83:3: ( 'const' type constant_declarators ';' | event_declaration | 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration ) | interface_declaration | 'void' method_declaration | type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration ) | class_declaration | struct_declaration | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration | destructor_declaration )
            int alt21=13;
            alt21 = dfa21.predict(input);
            switch (alt21) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:83:5: 'const' type constant_declarators ';'
                    {
                    string_literal50=(Token)match(input,81,FOLLOW_81_in_class_member_declaration495); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal50_tree = (Object)adaptor.create(string_literal50);
                    adaptor.addChild(root_0, string_literal50_tree);
                    }
                    pushFollow(FOLLOW_type_in_class_member_declaration499);
                    type51=type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type51.getTree());
                    pushFollow(FOLLOW_constant_declarators_in_class_member_declaration503);
                    constant_declarators52=constant_declarators();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, constant_declarators52.getTree());
                    char_literal53=(Token)match(input,SEMI,FOLLOW_SEMI_in_class_member_declaration507); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal53_tree = (Object)adaptor.create(char_literal53);
                    adaptor.addChild(root_0, char_literal53_tree);
                    }

                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:84:5: event_declaration
                    {
                    pushFollow(FOLLOW_event_declaration_in_class_member_declaration513);
                    event_declaration54=event_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, event_declaration54.getTree());

                    }
                    break;
                case 3 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:85:5: 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration )
                    {
                    string_literal55=(Token)match(input,67,FOLLOW_67_in_class_member_declaration522); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal55_tree = (Object)adaptor.create(string_literal55);
                    adaptor.addChild(root_0, string_literal55_tree);
                    }
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:85:15: ( method_declaration | interface_declaration | class_declaration | struct_declaration )
                    int alt19=4;
                    switch ( input.LA(1) ) {
                    case IDENTIFIER:
                    case Real_literal:
                    case NUMBER:
                    case Hex_number:
                    case Character_literal:
                    case STRINGLITERAL:
                    case Verbatim_string_literal:
                    case TRUE:
                    case FALSE:
                    case NULL:
                    case 65:
                    case 132:
                    case 133:
                    case 135:
                    case 136:
                    case 137:
                    case 138:
                    case 139:
                    case 140:
                    case 141:
                    case 142:
                    case 143:
                    case 144:
                    case 145:
                    case 146:
                    case 147:
                    case 148:
                    case 150:
                    case 151:
                    case 152:
                    case 154:
                    case 157:
                    case 158:
                    case 159:
                    case 160:
                    case 161:
                    case 162:
                    case 163:
                    case 164:
                    case 165:
                    case 166:
                    case 167:
                    case 168:
                    case 170:
                    case 177:
                    case 178:
                    case 195:
                    case 196:
                    case 197:
                    case 198:
                    case 199:
                    case 200:
                    case 201:
                    case 202:
                        {
                        alt19=1;
                        }
                        break;
                    case 172:
                        {
                        alt19=2;
                        }
                        break;
                    case 155:
                        {
                        alt19=3;
                        }
                        break;
                    case 169:
                        {
                        alt19=4;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 19, 0, input);

                        throw nvae;
                    }

                    switch (alt19) {
                        case 1 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:85:16: method_declaration
                            {
                            pushFollow(FOLLOW_method_declaration_in_class_member_declaration525);
                            method_declaration56=method_declaration();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, method_declaration56.getTree());

                            }
                            break;
                        case 2 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:86:12: interface_declaration
                            {
                            pushFollow(FOLLOW_interface_declaration_in_class_member_declaration539);
                            interface_declaration57=interface_declaration();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_declaration57.getTree());

                            }
                            break;
                        case 3 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:87:12: class_declaration
                            {
                            pushFollow(FOLLOW_class_declaration_in_class_member_declaration553);
                            class_declaration58=class_declaration();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, class_declaration58.getTree());

                            }
                            break;
                        case 4 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:88:12: struct_declaration
                            {
                            pushFollow(FOLLOW_struct_declaration_in_class_member_declaration567);
                            struct_declaration59=struct_declaration();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, struct_declaration59.getTree());

                            }
                            break;

                    }


                    }
                    break;
                case 4 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:89:5: interface_declaration
                    {
                    pushFollow(FOLLOW_interface_declaration_in_class_member_declaration574);
                    interface_declaration60=interface_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_declaration60.getTree());

                    }
                    break;
                case 5 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:90:5: 'void' method_declaration
                    {
                    string_literal61=(Token)match(input,82,FOLLOW_82_in_class_member_declaration581); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal61_tree = (Object)adaptor.create(string_literal61);
                    adaptor.addChild(root_0, string_literal61_tree);
                    }
                    pushFollow(FOLLOW_method_declaration_in_class_member_declaration585);
                    method_declaration62=method_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, method_declaration62.getTree());

                    }
                    break;
                case 6 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:91:5: type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration )
                    {
                    pushFollow(FOLLOW_type_in_class_member_declaration591);
                    type63=type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type63.getTree());
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:91:10: ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration )
                    int alt20=6;
                    alt20 = dfa20.predict(input);
                    switch (alt20) {
                        case 1 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:91:12: ( member_name '(' )=> method_declaration
                            {
                            pushFollow(FOLLOW_method_declaration_in_class_member_declaration605);
                            method_declaration64=method_declaration();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, method_declaration64.getTree());

                            }
                            break;
                        case 2 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:92:10: ( member_name '{' )=> property_declaration
                            {
                            pushFollow(FOLLOW_property_declaration_in_class_member_declaration626);
                            property_declaration65=property_declaration();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, property_declaration65.getTree());

                            }
                            break;
                        case 3 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:93:10: ( member_name '.' 'this' )=> type_name '.' indexer_declaration
                            {
                            pushFollow(FOLLOW_type_name_in_class_member_declaration651);
                            type_name66=type_name();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, type_name66.getTree());
                            char_literal67=(Token)match(input,DOT,FOLLOW_DOT_in_class_member_declaration653); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            char_literal67_tree = (Object)adaptor.create(char_literal67);
                            adaptor.addChild(root_0, char_literal67_tree);
                            }
                            pushFollow(FOLLOW_indexer_declaration_in_class_member_declaration655);
                            indexer_declaration68=indexer_declaration();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, indexer_declaration68.getTree());

                            }
                            break;
                        case 4 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:94:10: indexer_declaration
                            {
                            pushFollow(FOLLOW_indexer_declaration_in_class_member_declaration666);
                            indexer_declaration69=indexer_declaration();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, indexer_declaration69.getTree());

                            }
                            break;
                        case 5 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:95:12: field_declaration
                            {
                            pushFollow(FOLLOW_field_declaration_in_class_member_declaration681);
                            field_declaration70=field_declaration();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, field_declaration70.getTree());

                            }
                            break;
                        case 6 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:96:12: operator_declaration
                            {
                            pushFollow(FOLLOW_operator_declaration_in_class_member_declaration700);
                            operator_declaration71=operator_declaration();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, operator_declaration71.getTree());

                            }
                            break;

                    }


                    }
                    break;
                case 7 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:100:5: class_declaration
                    {
                    pushFollow(FOLLOW_class_declaration_in_class_member_declaration721);
                    class_declaration72=class_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, class_declaration72.getTree());

                    }
                    break;
                case 8 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:101:5: struct_declaration
                    {
                    pushFollow(FOLLOW_struct_declaration_in_class_member_declaration730);
                    struct_declaration73=struct_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, struct_declaration73.getTree());

                    }
                    break;
                case 9 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:102:5: enum_declaration
                    {
                    pushFollow(FOLLOW_enum_declaration_in_class_member_declaration738);
                    enum_declaration74=enum_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, enum_declaration74.getTree());

                    }
                    break;
                case 10 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:103:5: delegate_declaration
                    {
                    pushFollow(FOLLOW_delegate_declaration_in_class_member_declaration748);
                    delegate_declaration75=delegate_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, delegate_declaration75.getTree());

                    }
                    break;
                case 11 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:104:5: conversion_operator_declaration
                    {
                    pushFollow(FOLLOW_conversion_operator_declaration_in_class_member_declaration756);
                    conversion_operator_declaration76=conversion_operator_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, conversion_operator_declaration76.getTree());

                    }
                    break;
                case 12 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:105:5: constructor_declaration
                    {
                    pushFollow(FOLLOW_constructor_declaration_in_class_member_declaration762);
                    constructor_declaration77=constructor_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, constructor_declaration77.getTree());

                    }
                    break;
                case 13 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:106:5: destructor_declaration
                    {
                    pushFollow(FOLLOW_destructor_declaration_in_class_member_declaration769);
                    destructor_declaration78=destructor_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, destructor_declaration78.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 18, class_member_declaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "class_member_declaration"

    public static class primary_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "primary_expression"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:110:1: primary_expression : ( ( 'this' brackets )=> 'this' brackets ( primary_expression_part )* | ( 'base' brackets )=> 'this' brackets ( primary_expression_part )* | primary_expression_start ( primary_expression_part )* | 'new' ( ( object_creation_expression ( '.' | '->' | '[' ) )=> object_creation_expression ( primary_expression_part )+ | ( delegate_creation_expression )=> delegate_creation_expression | object_creation_expression | anonymous_object_creation_expression ) | sizeof_expression | checked_expression | unchecked_expression | default_value_expression | anonymous_method_expression );
    public final CSharpParser.primary_expression_return primary_expression() throws RecognitionException {
        CSharpParser.primary_expression_return retval = new CSharpParser.primary_expression_return();
        retval.start = input.LT(1);
        int primary_expression_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal79=null;
        Token string_literal82=null;
        Token string_literal87=null;
        CSharpParser.brackets_return brackets80 = null;

        CSharpParser.primary_expression_part_return primary_expression_part81 = null;

        CSharpParser.brackets_return brackets83 = null;

        CSharpParser.primary_expression_part_return primary_expression_part84 = null;

        CSharpParser.primary_expression_start_return primary_expression_start85 = null;

        CSharpParser.primary_expression_part_return primary_expression_part86 = null;

        CSharpParser.object_creation_expression_return object_creation_expression88 = null;

        CSharpParser.primary_expression_part_return primary_expression_part89 = null;

        CSharpParser.delegate_creation_expression_return delegate_creation_expression90 = null;

        CSharpParser.object_creation_expression_return object_creation_expression91 = null;

        CSharpParser.anonymous_object_creation_expression_return anonymous_object_creation_expression92 = null;

        CSharpParser.sizeof_expression_return sizeof_expression93 = null;

        CSharpParser.checked_expression_return checked_expression94 = null;

        CSharpParser.unchecked_expression_return unchecked_expression95 = null;

        CSharpParser.default_value_expression_return default_value_expression96 = null;

        CSharpParser.anonymous_method_expression_return anonymous_method_expression97 = null;


        Object string_literal79_tree=null;
        Object string_literal82_tree=null;
        Object string_literal87_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 19) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:110:19: ( ( 'this' brackets )=> 'this' brackets ( primary_expression_part )* | ( 'base' brackets )=> 'this' brackets ( primary_expression_part )* | primary_expression_start ( primary_expression_part )* | 'new' ( ( object_creation_expression ( '.' | '->' | '[' ) )=> object_creation_expression ( primary_expression_part )+ | ( delegate_creation_expression )=> delegate_creation_expression | object_creation_expression | anonymous_object_creation_expression ) | sizeof_expression | checked_expression | unchecked_expression | default_value_expression | anonymous_method_expression )
            int alt27=9;
            alt27 = dfa27.predict(input);
            switch (alt27) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:111:3: ( 'this' brackets )=> 'this' brackets ( primary_expression_part )*
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal79=(Token)match(input,83,FOLLOW_83_in_primary_expression798); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal79_tree = (Object)adaptor.create(string_literal79);
                    adaptor.addChild(root_0, string_literal79_tree);
                    }
                    pushFollow(FOLLOW_brackets_in_primary_expression802);
                    brackets80=brackets();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, brackets80.getTree());
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:111:47: ( primary_expression_part )*
                    loop22:
                    do {
                        int alt22=2;
                        int LA22_0 = input.LA(1);

                        if ( ((LA22_0>=DOT && LA22_0<=PTR)||LA22_0==86||LA22_0==88) ) {
                            alt22=1;
                        }


                        switch (alt22) {
                    	case 1 :
                    	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:111:47: primary_expression_part
                    	    {
                    	    pushFollow(FOLLOW_primary_expression_part_in_primary_expression806);
                    	    primary_expression_part81=primary_expression_part();

                    	    state._fsp--;
                    	    if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) adaptor.addChild(root_0, primary_expression_part81.getTree());

                    	    }
                    	    break;

                    	default :
                    	    break loop22;
                        }
                    } while (true);


                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:112:5: ( 'base' brackets )=> 'this' brackets ( primary_expression_part )*
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal82=(Token)match(input,83,FOLLOW_83_in_primary_expression823); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal82_tree = (Object)adaptor.create(string_literal82);
                    adaptor.addChild(root_0, string_literal82_tree);
                    }
                    pushFollow(FOLLOW_brackets_in_primary_expression827);
                    brackets83=brackets();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, brackets83.getTree());
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:112:48: ( primary_expression_part )*
                    loop23:
                    do {
                        int alt23=2;
                        int LA23_0 = input.LA(1);

                        if ( ((LA23_0>=DOT && LA23_0<=PTR)||LA23_0==86||LA23_0==88) ) {
                            alt23=1;
                        }


                        switch (alt23) {
                    	case 1 :
                    	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:112:48: primary_expression_part
                    	    {
                    	    pushFollow(FOLLOW_primary_expression_part_in_primary_expression831);
                    	    primary_expression_part84=primary_expression_part();

                    	    state._fsp--;
                    	    if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) adaptor.addChild(root_0, primary_expression_part84.getTree());

                    	    }
                    	    break;

                    	default :
                    	    break loop23;
                        }
                    } while (true);


                    }
                    break;
                case 3 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:113:5: primary_expression_start ( primary_expression_part )*
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_primary_expression_start_in_primary_expression838);
                    primary_expression_start85=primary_expression_start();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, primary_expression_start85.getTree());
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:113:32: ( primary_expression_part )*
                    loop24:
                    do {
                        int alt24=2;
                        int LA24_0 = input.LA(1);

                        if ( ((LA24_0>=DOT && LA24_0<=PTR)||LA24_0==86||LA24_0==88) ) {
                            alt24=1;
                        }


                        switch (alt24) {
                    	case 1 :
                    	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:113:32: primary_expression_part
                    	    {
                    	    pushFollow(FOLLOW_primary_expression_part_in_primary_expression842);
                    	    primary_expression_part86=primary_expression_part();

                    	    state._fsp--;
                    	    if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) adaptor.addChild(root_0, primary_expression_part86.getTree());

                    	    }
                    	    break;

                    	default :
                    	    break loop24;
                        }
                    } while (true);


                    }
                    break;
                case 4 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:114:5: 'new' ( ( object_creation_expression ( '.' | '->' | '[' ) )=> object_creation_expression ( primary_expression_part )+ | ( delegate_creation_expression )=> delegate_creation_expression | object_creation_expression | anonymous_object_creation_expression )
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal87=(Token)match(input,68,FOLLOW_68_in_primary_expression849); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal87_tree = (Object)adaptor.create(string_literal87);
                    adaptor.addChild(root_0, string_literal87_tree);
                    }
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:114:11: ( ( object_creation_expression ( '.' | '->' | '[' ) )=> object_creation_expression ( primary_expression_part )+ | ( delegate_creation_expression )=> delegate_creation_expression | object_creation_expression | anonymous_object_creation_expression )
                    int alt26=4;
                    switch ( input.LA(1) ) {
                    case 160:
                    case 161:
                    case 162:
                    case 163:
                    case 164:
                    case 165:
                    case 166:
                    case 167:
                    case 168:
                    case 196:
                    case 197:
                    case 198:
                    case 199:
                    case 200:
                    case 201:
                        {
                        int LA26_1 = input.LA(2);

                        if ( (synpred7_cs()) ) {
                            alt26=1;
                        }
                        else if ( (true) ) {
                            alt26=3;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return retval;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 26, 1, input);

                            throw nvae;
                        }
                        }
                        break;
                    case IDENTIFIER:
                    case 65:
                    case 132:
                    case 133:
                    case 135:
                    case 136:
                    case 137:
                    case 138:
                    case 139:
                    case 140:
                    case 141:
                    case 142:
                    case 143:
                    case 144:
                    case 145:
                    case 146:
                    case 147:
                    case 148:
                    case 150:
                    case 151:
                    case 152:
                    case 154:
                    case 157:
                    case 158:
                    case 159:
                    case 170:
                    case 177:
                    case 178:
                    case 195:
                    case 202:
                        {
                        int LA26_2 = input.LA(2);

                        if ( (synpred7_cs()) ) {
                            alt26=1;
                        }
                        else if ( (synpred8_cs()) ) {
                            alt26=2;
                        }
                        else if ( (true) ) {
                            alt26=3;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return retval;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 26, 2, input);

                            throw nvae;
                        }
                        }
                        break;
                    case 82:
                        {
                        int LA26_3 = input.LA(2);

                        if ( (synpred7_cs()) ) {
                            alt26=1;
                        }
                        else if ( (true) ) {
                            alt26=3;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return retval;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 26, 3, input);

                            throw nvae;
                        }
                        }
                        break;
                    case 62:
                        {
                        alt26=4;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 26, 0, input);

                        throw nvae;
                    }

                    switch (alt26) {
                        case 1 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:114:15: ( object_creation_expression ( '.' | '->' | '[' ) )=> object_creation_expression ( primary_expression_part )+
                            {
                            pushFollow(FOLLOW_object_creation_expression_in_primary_expression882);
                            object_creation_expression88=object_creation_expression();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, object_creation_expression88.getTree());
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:115:40: ( primary_expression_part )+
                            int cnt25=0;
                            loop25:
                            do {
                                int alt25=2;
                                int LA25_0 = input.LA(1);

                                if ( ((LA25_0>=DOT && LA25_0<=PTR)||LA25_0==86||LA25_0==88) ) {
                                    alt25=1;
                                }


                                switch (alt25) {
                            	case 1 :
                            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:115:40: primary_expression_part
                            	    {
                            	    pushFollow(FOLLOW_primary_expression_part_in_primary_expression886);
                            	    primary_expression_part89=primary_expression_part();

                            	    state._fsp--;
                            	    if (state.failed) return retval;
                            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, primary_expression_part89.getTree());

                            	    }
                            	    break;

                            	default :
                            	    if ( cnt25 >= 1 ) break loop25;
                            	    if (state.backtracking>0) {state.failed=true; return retval;}
                                        EarlyExitException eee =
                                            new EarlyExitException(25, input);
                                        throw eee;
                                }
                                cnt25++;
                            } while (true);


                            }
                            break;
                        case 2 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:118:11: ( delegate_creation_expression )=> delegate_creation_expression
                            {
                            pushFollow(FOLLOW_delegate_creation_expression_in_primary_expression928);
                            delegate_creation_expression90=delegate_creation_expression();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, delegate_creation_expression90.getTree());

                            }
                            break;
                        case 3 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:119:11: object_creation_expression
                            {
                            pushFollow(FOLLOW_object_creation_expression_in_primary_expression940);
                            object_creation_expression91=object_creation_expression();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, object_creation_expression91.getTree());

                            }
                            break;
                        case 4 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:120:11: anonymous_object_creation_expression
                            {
                            pushFollow(FOLLOW_anonymous_object_creation_expression_in_primary_expression952);
                            anonymous_object_creation_expression92=anonymous_object_creation_expression();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, anonymous_object_creation_expression92.getTree());

                            }
                            break;

                    }


                    }
                    break;
                case 5 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:121:5: sizeof_expression
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_sizeof_expression_in_primary_expression972);
                    sizeof_expression93=sizeof_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, sizeof_expression93.getTree());

                    }
                    break;
                case 6 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:122:5: checked_expression
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_checked_expression_in_primary_expression989);
                    checked_expression94=checked_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, checked_expression94.getTree());

                    }
                    break;
                case 7 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:123:5: unchecked_expression
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_unchecked_expression_in_primary_expression1011);
                    unchecked_expression95=unchecked_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, unchecked_expression95.getTree());

                    }
                    break;
                case 8 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:124:5: default_value_expression
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_default_value_expression_in_primary_expression1031);
                    default_value_expression96=default_value_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, default_value_expression96.getTree());

                    }
                    break;
                case 9 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:125:5: anonymous_method_expression
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_anonymous_method_expression_in_primary_expression1047);
                    anonymous_method_expression97=anonymous_method_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, anonymous_method_expression97.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 19, primary_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "primary_expression"

    public static class primary_expression_start_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "primary_expression_start"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:128:1: primary_expression_start : ( predefined_type | ( identifier '<' )=> identifier generic_argument_list | identifier ( '::' identifier )? | 'this' | 'base' | paren_expression | typeof_expression | literal );
    public final CSharpParser.primary_expression_start_return primary_expression_start() throws RecognitionException {
        CSharpParser.primary_expression_start_return retval = new CSharpParser.primary_expression_start_return();
        retval.start = input.LT(1);
        int primary_expression_start_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal102=null;
        Token string_literal104=null;
        Token string_literal105=null;
        CSharpParser.predefined_type_return predefined_type98 = null;

        CSharpParser.identifier_return identifier99 = null;

        CSharpParser.generic_argument_list_return generic_argument_list100 = null;

        CSharpParser.identifier_return identifier101 = null;

        CSharpParser.identifier_return identifier103 = null;

        CSharpParser.paren_expression_return paren_expression106 = null;

        CSharpParser.typeof_expression_return typeof_expression107 = null;

        CSharpParser.literal_return literal108 = null;


        Object string_literal102_tree=null;
        Object string_literal104_tree=null;
        Object string_literal105_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 20) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:128:25: ( predefined_type | ( identifier '<' )=> identifier generic_argument_list | identifier ( '::' identifier )? | 'this' | 'base' | paren_expression | typeof_expression | literal )
            int alt29=8;
            alt29 = dfa29.predict(input);
            switch (alt29) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:129:3: predefined_type
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_predefined_type_in_primary_expression_start1064);
                    predefined_type98=predefined_type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, predefined_type98.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:130:5: ( identifier '<' )=> identifier generic_argument_list
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_identifier_in_primary_expression_start1093);
                    identifier99=identifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier99.getTree());
                    pushFollow(FOLLOW_generic_argument_list_in_primary_expression_start1097);
                    generic_argument_list100=generic_argument_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, generic_argument_list100.getTree());

                    }
                    break;
                case 3 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:131:5: identifier ( '::' identifier )?
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_identifier_in_primary_expression_start1103);
                    identifier101=identifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier101.getTree());
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:131:16: ( '::' identifier )?
                    int alt28=2;
                    int LA28_0 = input.LA(1);

                    if ( (LA28_0==84) ) {
                        alt28=1;
                    }
                    switch (alt28) {
                        case 1 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:131:17: '::' identifier
                            {
                            string_literal102=(Token)match(input,84,FOLLOW_84_in_primary_expression_start1106); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            string_literal102_tree = (Object)adaptor.create(string_literal102);
                            adaptor.addChild(root_0, string_literal102_tree);
                            }
                            pushFollow(FOLLOW_identifier_in_primary_expression_start1110);
                            identifier103=identifier();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier103.getTree());

                            }
                            break;

                    }


                    }
                    break;
                case 4 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:132:5: 'this'
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal104=(Token)match(input,83,FOLLOW_83_in_primary_expression_start1118); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal104_tree = (Object)adaptor.create(string_literal104);
                    adaptor.addChild(root_0, string_literal104_tree);
                    }

                    }
                    break;
                case 5 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:133:5: 'base'
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal105=(Token)match(input,85,FOLLOW_85_in_primary_expression_start1125); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal105_tree = (Object)adaptor.create(string_literal105);
                    adaptor.addChild(root_0, string_literal105_tree);
                    }

                    }
                    break;
                case 6 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:134:5: paren_expression
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_paren_expression_in_primary_expression_start1131);
                    paren_expression106=paren_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, paren_expression106.getTree());

                    }
                    break;
                case 7 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:135:5: typeof_expression
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_typeof_expression_in_primary_expression_start1137);
                    typeof_expression107=typeof_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, typeof_expression107.getTree());

                    }
                    break;
                case 8 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:136:5: literal
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_literal_in_primary_expression_start1156);
                    literal108=literal();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, literal108.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 20, primary_expression_start_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "primary_expression_start"

    public static class primary_expression_part_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "primary_expression_part"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:139:1: primary_expression_part : ( access_identifier | brackets_or_arguments );
    public final CSharpParser.primary_expression_part_return primary_expression_part() throws RecognitionException {
        CSharpParser.primary_expression_part_return retval = new CSharpParser.primary_expression_part_return();
        retval.start = input.LT(1);
        int primary_expression_part_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.access_identifier_return access_identifier109 = null;

        CSharpParser.brackets_or_arguments_return brackets_or_arguments110 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 21) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:139:24: ( access_identifier | brackets_or_arguments )
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( ((LA30_0>=DOT && LA30_0<=PTR)) ) {
                alt30=1;
            }
            else if ( (LA30_0==86||LA30_0==88) ) {
                alt30=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 30, 0, input);

                throw nvae;
            }
            switch (alt30) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:140:4: access_identifier
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_access_identifier_in_primary_expression_part1169);
                    access_identifier109=access_identifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, access_identifier109.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:141:5: brackets_or_arguments
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_brackets_or_arguments_in_primary_expression_part1175);
                    brackets_or_arguments110=brackets_or_arguments();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, brackets_or_arguments110.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 21, primary_expression_part_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "primary_expression_part"

    public static class access_identifier_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "access_identifier"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:142:1: access_identifier : access_operator type_or_generic ;
    public final CSharpParser.access_identifier_return access_identifier() throws RecognitionException {
        CSharpParser.access_identifier_return retval = new CSharpParser.access_identifier_return();
        retval.start = input.LT(1);
        int access_identifier_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.access_operator_return access_operator111 = null;

        CSharpParser.type_or_generic_return type_or_generic112 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 22) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:142:18: ( access_operator type_or_generic )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:143:3: access_operator type_or_generic
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_access_operator_in_access_identifier1184);
            access_operator111=access_operator();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, access_operator111.getTree());
            pushFollow(FOLLOW_type_or_generic_in_access_identifier1188);
            type_or_generic112=type_or_generic();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type_or_generic112.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 22, access_identifier_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "access_identifier"

    public static class access_operator_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "access_operator"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:144:1: access_operator : ( '.' | '->' );
    public final CSharpParser.access_operator_return access_operator() throws RecognitionException {
        CSharpParser.access_operator_return retval = new CSharpParser.access_operator_return();
        retval.start = input.LT(1);
        int access_operator_StartIndex = input.index();
        Object root_0 = null;

        Token set113=null;

        Object set113_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 23) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:144:16: ( '.' | '->' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:
            {
            root_0 = (Object)adaptor.nil();

            set113=(Token)input.LT(1);
            if ( (input.LA(1)>=DOT && input.LA(1)<=PTR) ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set113));
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 23, access_operator_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "access_operator"

    public static class brackets_or_arguments_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "brackets_or_arguments"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:146:1: brackets_or_arguments : ( brackets | arguments );
    public final CSharpParser.brackets_or_arguments_return brackets_or_arguments() throws RecognitionException {
        CSharpParser.brackets_or_arguments_return retval = new CSharpParser.brackets_or_arguments_return();
        retval.start = input.LT(1);
        int brackets_or_arguments_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.brackets_return brackets114 = null;

        CSharpParser.arguments_return arguments115 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 24) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:146:22: ( brackets | arguments )
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==86) ) {
                alt31=1;
            }
            else if ( (LA31_0==88) ) {
                alt31=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 31, 0, input);

                throw nvae;
            }
            switch (alt31) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:147:3: brackets
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_brackets_in_brackets_or_arguments1212);
                    brackets114=brackets();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, brackets114.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:147:14: arguments
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_arguments_in_brackets_or_arguments1216);
                    arguments115=arguments();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, arguments115.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 24, brackets_or_arguments_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "brackets_or_arguments"

    public static class brackets_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "brackets"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:148:1: brackets : '[' ( expression_list )? ']' ;
    public final CSharpParser.brackets_return brackets() throws RecognitionException {
        CSharpParser.brackets_return retval = new CSharpParser.brackets_return();
        retval.start = input.LT(1);
        int brackets_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal116=null;
        Token char_literal118=null;
        CSharpParser.expression_list_return expression_list117 = null;


        Object char_literal116_tree=null;
        Object char_literal118_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 25) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:148:9: ( '[' ( expression_list )? ']' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:149:3: '[' ( expression_list )? ']'
            {
            root_0 = (Object)adaptor.nil();

            char_literal116=(Token)match(input,86,FOLLOW_86_in_brackets1225); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal116_tree = (Object)adaptor.create(char_literal116);
            adaptor.addChild(root_0, char_literal116_tree);
            }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:149:9: ( expression_list )?
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( ((LA32_0>=IDENTIFIER && LA32_0<=NULL)||LA32_0==MINUS||LA32_0==65||LA32_0==68||LA32_0==83||LA32_0==85||LA32_0==88||(LA32_0>=93 && LA32_0<=98)||LA32_0==100||(LA32_0>=102 && LA32_0<=106)||LA32_0==117||(LA32_0>=132 && LA32_0<=133)||(LA32_0>=135 && LA32_0<=148)||(LA32_0>=150 && LA32_0<=152)||LA32_0==154||(LA32_0>=157 && LA32_0<=168)||LA32_0==170||(LA32_0>=177 && LA32_0<=178)||(LA32_0>=195 && LA32_0<=202)) ) {
                alt32=1;
            }
            switch (alt32) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:149:9: expression_list
                    {
                    pushFollow(FOLLOW_expression_list_in_brackets1229);
                    expression_list117=expression_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression_list117.getTree());

                    }
                    break;

            }

            char_literal118=(Token)match(input,87,FOLLOW_87_in_brackets1234); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal118_tree = (Object)adaptor.create(char_literal118);
            adaptor.addChild(root_0, char_literal118_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 25, brackets_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "brackets"

    public static class paren_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "paren_expression"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:150:1: paren_expression : '(' expression ')' ;
    public final CSharpParser.paren_expression_return paren_expression() throws RecognitionException {
        CSharpParser.paren_expression_return retval = new CSharpParser.paren_expression_return();
        retval.start = input.LT(1);
        int paren_expression_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal119=null;
        Token char_literal121=null;
        CSharpParser.expression_return expression120 = null;


        Object char_literal119_tree=null;
        Object char_literal121_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 26) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:150:17: ( '(' expression ')' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:151:3: '(' expression ')'
            {
            root_0 = (Object)adaptor.nil();

            char_literal119=(Token)match(input,88,FOLLOW_88_in_paren_expression1246); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal119_tree = (Object)adaptor.create(char_literal119);
            adaptor.addChild(root_0, char_literal119_tree);
            }
            pushFollow(FOLLOW_expression_in_paren_expression1250);
            expression120=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression120.getTree());
            char_literal121=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_paren_expression1254); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal121_tree = (Object)adaptor.create(char_literal121);
            adaptor.addChild(root_0, char_literal121_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 26, paren_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "paren_expression"

    public static class arguments_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "arguments"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:152:1: arguments : '(' ( argument_list )? ')' ;
    public final CSharpParser.arguments_return arguments() throws RecognitionException {
        CSharpParser.arguments_return retval = new CSharpParser.arguments_return();
        retval.start = input.LT(1);
        int arguments_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal122=null;
        Token char_literal124=null;
        CSharpParser.argument_list_return argument_list123 = null;


        Object char_literal122_tree=null;
        Object char_literal124_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 27) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:152:10: ( '(' ( argument_list )? ')' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:153:3: '(' ( argument_list )? ')'
            {
            root_0 = (Object)adaptor.nil();

            char_literal122=(Token)match(input,88,FOLLOW_88_in_arguments1264); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal122_tree = (Object)adaptor.create(char_literal122);
            adaptor.addChild(root_0, char_literal122_tree);
            }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:153:9: ( argument_list )?
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( ((LA33_0>=IDENTIFIER && LA33_0<=NULL)||LA33_0==MINUS||LA33_0==65||LA33_0==68||LA33_0==83||LA33_0==85||LA33_0==88||(LA33_0>=91 && LA33_0<=98)||LA33_0==100||(LA33_0>=102 && LA33_0<=106)||LA33_0==117||(LA33_0>=132 && LA33_0<=133)||(LA33_0>=135 && LA33_0<=148)||(LA33_0>=150 && LA33_0<=152)||LA33_0==154||(LA33_0>=157 && LA33_0<=168)||LA33_0==170||(LA33_0>=177 && LA33_0<=178)||(LA33_0>=195 && LA33_0<=202)) ) {
                alt33=1;
            }
            switch (alt33) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:153:9: argument_list
                    {
                    pushFollow(FOLLOW_argument_list_in_arguments1268);
                    argument_list123=argument_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, argument_list123.getTree());

                    }
                    break;

            }

            char_literal124=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_arguments1273); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal124_tree = (Object)adaptor.create(char_literal124);
            adaptor.addChild(root_0, char_literal124_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 27, arguments_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "arguments"

    public static class argument_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "argument_list"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:154:1: argument_list : argument ( ',' argument )* ;
    public final CSharpParser.argument_list_return argument_list() throws RecognitionException {
        CSharpParser.argument_list_return retval = new CSharpParser.argument_list_return();
        retval.start = input.LT(1);
        int argument_list_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal126=null;
        CSharpParser.argument_return argument125 = null;

        CSharpParser.argument_return argument127 = null;


        Object char_literal126_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 28) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:154:14: ( argument ( ',' argument )* )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:155:3: argument ( ',' argument )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_argument_in_argument_list1283);
            argument125=argument();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, argument125.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:155:12: ( ',' argument )*
            loop34:
            do {
                int alt34=2;
                int LA34_0 = input.LA(1);

                if ( (LA34_0==89) ) {
                    alt34=1;
                }


                switch (alt34) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:155:13: ',' argument
            	    {
            	    char_literal126=(Token)match(input,89,FOLLOW_89_in_argument_list1286); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal126_tree = (Object)adaptor.create(char_literal126);
            	    adaptor.addChild(root_0, char_literal126_tree);
            	    }
            	    pushFollow(FOLLOW_argument_in_argument_list1288);
            	    argument127=argument();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, argument127.getTree());

            	    }
            	    break;

            	default :
            	    break loop34;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 28, argument_list_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "argument_list"

    public static class argument_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "argument"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:157:1: argument : ( argument_name argument_value | argument_value );
    public final CSharpParser.argument_return argument() throws RecognitionException {
        CSharpParser.argument_return retval = new CSharpParser.argument_return();
        retval.start = input.LT(1);
        int argument_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.argument_name_return argument_name128 = null;

        CSharpParser.argument_value_return argument_value129 = null;

        CSharpParser.argument_value_return argument_value130 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 29) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:157:9: ( argument_name argument_value | argument_value )
            int alt35=2;
            switch ( input.LA(1) ) {
            case 133:
                {
                int LA35_1 = input.LA(2);

                if ( (LA35_1==IDENTIFIER||(LA35_1>=DOT && LA35_1<=GT)||LA35_1==RPAREN||(LA35_1>=65 && LA35_1<=66)||LA35_1==82||LA35_1==84||LA35_1==86||(LA35_1>=88 && LA35_1<=89)||(LA35_1>=99 && LA35_1<=104)||(LA35_1>=107 && LA35_1<=133)||(LA35_1>=135 && LA35_1<=148)||(LA35_1>=150 && LA35_1<=152)||LA35_1==154||(LA35_1>=157 && LA35_1<=168)||LA35_1==170||(LA35_1>=177 && LA35_1<=178)||(LA35_1>=195 && LA35_1<=202)) ) {
                    alt35=2;
                }
                else if ( (LA35_1==90) ) {
                    alt35=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 35, 1, input);

                    throw nvae;
                }
                }
                break;
            case Real_literal:
            case NUMBER:
            case Hex_number:
            case Character_literal:
            case STRINGLITERAL:
            case Verbatim_string_literal:
            case TRUE:
            case FALSE:
            case NULL:
            case MINUS:
            case 68:
            case 83:
            case 85:
            case 88:
            case 91:
            case 92:
            case 93:
            case 94:
            case 95:
            case 96:
            case 97:
            case 98:
            case 100:
            case 102:
            case 103:
            case 104:
            case 105:
            case 106:
            case 117:
            case 160:
            case 161:
            case 162:
            case 163:
            case 164:
            case 165:
            case 166:
            case 167:
            case 168:
            case 196:
            case 197:
            case 198:
            case 199:
            case 200:
            case 201:
                {
                alt35=2;
                }
                break;
            case IDENTIFIER:
            case 65:
            case 132:
            case 135:
            case 136:
            case 137:
            case 138:
            case 139:
            case 140:
            case 141:
            case 142:
            case 143:
            case 144:
            case 145:
            case 146:
            case 147:
            case 148:
            case 150:
            case 151:
            case 152:
            case 154:
            case 157:
            case 158:
            case 159:
            case 170:
            case 177:
            case 178:
            case 195:
            case 202:
                {
                int LA35_3 = input.LA(2);

                if ( ((LA35_3>=DOT && LA35_3<=GT)||LA35_3==RPAREN||LA35_3==66||LA35_3==84||LA35_3==86||(LA35_3>=88 && LA35_3<=89)||(LA35_3>=99 && LA35_3<=104)||(LA35_3>=107 && LA35_3<=131)) ) {
                    alt35=2;
                }
                else if ( (LA35_3==90) ) {
                    alt35=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 35, 3, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 35, 0, input);

                throw nvae;
            }

            switch (alt35) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:158:3: argument_name argument_value
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_argument_name_in_argument1299);
                    argument_name128=argument_name();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, argument_name128.getTree());
                    pushFollow(FOLLOW_argument_value_in_argument1303);
                    argument_value129=argument_value();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, argument_value129.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:159:5: argument_value
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_argument_value_in_argument1309);
                    argument_value130=argument_value();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, argument_value130.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 29, argument_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "argument"

    public static class argument_name_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "argument_name"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:160:1: argument_name : identifier ':' ;
    public final CSharpParser.argument_name_return argument_name() throws RecognitionException {
        CSharpParser.argument_name_return retval = new CSharpParser.argument_name_return();
        retval.start = input.LT(1);
        int argument_name_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal132=null;
        CSharpParser.identifier_return identifier131 = null;


        Object char_literal132_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 30) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:160:14: ( identifier ':' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:161:3: identifier ':'
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_identifier_in_argument_name1317);
            identifier131=identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier131.getTree());
            char_literal132=(Token)match(input,90,FOLLOW_90_in_argument_name1321); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal132_tree = (Object)adaptor.create(char_literal132);
            adaptor.addChild(root_0, char_literal132_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 30, argument_name_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "argument_name"

    public static class argument_value_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "argument_value"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:162:1: argument_value : ( expression | ref_variable_reference | 'out' variable_reference );
    public final CSharpParser.argument_value_return argument_value() throws RecognitionException {
        CSharpParser.argument_value_return retval = new CSharpParser.argument_value_return();
        retval.start = input.LT(1);
        int argument_value_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal135=null;
        CSharpParser.expression_return expression133 = null;

        CSharpParser.ref_variable_reference_return ref_variable_reference134 = null;

        CSharpParser.variable_reference_return variable_reference136 = null;


        Object string_literal135_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 31) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:162:15: ( expression | ref_variable_reference | 'out' variable_reference )
            int alt36=3;
            switch ( input.LA(1) ) {
            case IDENTIFIER:
            case Real_literal:
            case NUMBER:
            case Hex_number:
            case Character_literal:
            case STRINGLITERAL:
            case Verbatim_string_literal:
            case TRUE:
            case FALSE:
            case NULL:
            case MINUS:
            case 65:
            case 68:
            case 83:
            case 85:
            case 88:
            case 93:
            case 94:
            case 95:
            case 96:
            case 97:
            case 98:
            case 100:
            case 102:
            case 103:
            case 104:
            case 105:
            case 106:
            case 117:
            case 132:
            case 133:
            case 135:
            case 136:
            case 137:
            case 138:
            case 139:
            case 140:
            case 141:
            case 142:
            case 143:
            case 144:
            case 145:
            case 146:
            case 147:
            case 148:
            case 150:
            case 151:
            case 152:
            case 154:
            case 157:
            case 158:
            case 159:
            case 160:
            case 161:
            case 162:
            case 163:
            case 164:
            case 165:
            case 166:
            case 167:
            case 168:
            case 170:
            case 177:
            case 178:
            case 195:
            case 196:
            case 197:
            case 198:
            case 199:
            case 200:
            case 201:
            case 202:
                {
                alt36=1;
                }
                break;
            case 92:
                {
                alt36=2;
                }
                break;
            case 91:
                {
                alt36=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 36, 0, input);

                throw nvae;
            }

            switch (alt36) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:163:3: expression
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_expression_in_argument_value1330);
                    expression133=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression133.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:164:5: ref_variable_reference
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_ref_variable_reference_in_argument_value1337);
                    ref_variable_reference134=ref_variable_reference();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, ref_variable_reference134.getTree());

                    }
                    break;
                case 3 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:165:5: 'out' variable_reference
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal135=(Token)match(input,91,FOLLOW_91_in_argument_value1344); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal135_tree = (Object)adaptor.create(string_literal135);
                    adaptor.addChild(root_0, string_literal135_tree);
                    }
                    pushFollow(FOLLOW_variable_reference_in_argument_value1348);
                    variable_reference136=variable_reference();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, variable_reference136.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 31, argument_value_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "argument_value"

    public static class ref_variable_reference_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "ref_variable_reference"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:166:1: ref_variable_reference : 'ref' ( ( '(' type ')' )=> '(' type ')' ( ref_variable_reference | variable_reference ) | variable_reference ) ;
    public final CSharpParser.ref_variable_reference_return ref_variable_reference() throws RecognitionException {
        CSharpParser.ref_variable_reference_return retval = new CSharpParser.ref_variable_reference_return();
        retval.start = input.LT(1);
        int ref_variable_reference_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal137=null;
        Token char_literal138=null;
        Token char_literal140=null;
        CSharpParser.type_return type139 = null;

        CSharpParser.ref_variable_reference_return ref_variable_reference141 = null;

        CSharpParser.variable_reference_return variable_reference142 = null;

        CSharpParser.variable_reference_return variable_reference143 = null;


        Object string_literal137_tree=null;
        Object char_literal138_tree=null;
        Object char_literal140_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 32) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:166:23: ( 'ref' ( ( '(' type ')' )=> '(' type ')' ( ref_variable_reference | variable_reference ) | variable_reference ) )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:167:3: 'ref' ( ( '(' type ')' )=> '(' type ')' ( ref_variable_reference | variable_reference ) | variable_reference )
            {
            root_0 = (Object)adaptor.nil();

            string_literal137=(Token)match(input,92,FOLLOW_92_in_ref_variable_reference1357); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal137_tree = (Object)adaptor.create(string_literal137);
            adaptor.addChild(root_0, string_literal137_tree);
            }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:168:5: ( ( '(' type ')' )=> '(' type ')' ( ref_variable_reference | variable_reference ) | variable_reference )
            int alt38=2;
            alt38 = dfa38.predict(input);
            switch (alt38) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:168:6: ( '(' type ')' )=> '(' type ')' ( ref_variable_reference | variable_reference )
                    {
                    char_literal138=(Token)match(input,88,FOLLOW_88_in_ref_variable_reference1381); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal138_tree = (Object)adaptor.create(char_literal138);
                    adaptor.addChild(root_0, char_literal138_tree);
                    }
                    pushFollow(FOLLOW_type_in_ref_variable_reference1385);
                    type139=type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type139.getTree());
                    char_literal140=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_ref_variable_reference1389); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal140_tree = (Object)adaptor.create(char_literal140);
                    adaptor.addChild(root_0, char_literal140_tree);
                    }
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:168:49: ( ref_variable_reference | variable_reference )
                    int alt37=2;
                    int LA37_0 = input.LA(1);

                    if ( (LA37_0==92) ) {
                        alt37=1;
                    }
                    else if ( ((LA37_0>=IDENTIFIER && LA37_0<=NULL)||LA37_0==MINUS||LA37_0==65||LA37_0==68||LA37_0==83||LA37_0==85||LA37_0==88||(LA37_0>=93 && LA37_0<=98)||LA37_0==100||(LA37_0>=102 && LA37_0<=106)||LA37_0==117||(LA37_0>=132 && LA37_0<=133)||(LA37_0>=135 && LA37_0<=148)||(LA37_0>=150 && LA37_0<=152)||LA37_0==154||(LA37_0>=157 && LA37_0<=168)||LA37_0==170||(LA37_0>=177 && LA37_0<=178)||(LA37_0>=195 && LA37_0<=202)) ) {
                        alt37=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 37, 0, input);

                        throw nvae;
                    }
                    switch (alt37) {
                        case 1 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:168:50: ref_variable_reference
                            {
                            pushFollow(FOLLOW_ref_variable_reference_in_ref_variable_reference1394);
                            ref_variable_reference141=ref_variable_reference();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, ref_variable_reference141.getTree());

                            }
                            break;
                        case 2 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:168:75: variable_reference
                            {
                            pushFollow(FOLLOW_variable_reference_in_ref_variable_reference1398);
                            variable_reference142=variable_reference();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, variable_reference142.getTree());

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:170:7: variable_reference
                    {
                    pushFollow(FOLLOW_variable_reference_in_ref_variable_reference1461);
                    variable_reference143=variable_reference();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, variable_reference143.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 32, ref_variable_reference_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "ref_variable_reference"

    public static class variable_reference_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "variable_reference"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:172:1: variable_reference : expression ;
    public final CSharpParser.variable_reference_return variable_reference() throws RecognitionException {
        CSharpParser.variable_reference_return retval = new CSharpParser.variable_reference_return();
        retval.start = input.LT(1);
        int variable_reference_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.expression_return expression144 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 33) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:172:19: ( expression )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:173:3: expression
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_expression_in_variable_reference1473);
            expression144=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression144.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 33, variable_reference_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "variable_reference"

    public static class rank_specifiers_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "rank_specifiers"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:174:1: rank_specifiers : ( rank_specifier )+ ;
    public final CSharpParser.rank_specifiers_return rank_specifiers() throws RecognitionException {
        CSharpParser.rank_specifiers_return retval = new CSharpParser.rank_specifiers_return();
        retval.start = input.LT(1);
        int rank_specifiers_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.rank_specifier_return rank_specifier145 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 34) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:174:16: ( ( rank_specifier )+ )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:175:3: ( rank_specifier )+
            {
            root_0 = (Object)adaptor.nil();

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:175:3: ( rank_specifier )+
            int cnt39=0;
            loop39:
            do {
                int alt39=2;
                int LA39_0 = input.LA(1);

                if ( (LA39_0==86) ) {
                    int LA39_2 = input.LA(2);

                    if ( (LA39_2==87||LA39_2==89) ) {
                        alt39=1;
                    }


                }


                switch (alt39) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:175:3: rank_specifier
            	    {
            	    pushFollow(FOLLOW_rank_specifier_in_rank_specifiers1482);
            	    rank_specifier145=rank_specifier();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, rank_specifier145.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt39 >= 1 ) break loop39;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(39, input);
                        throw eee;
                }
                cnt39++;
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 34, rank_specifiers_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "rank_specifiers"

    public static class rank_specifier_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "rank_specifier"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:176:1: rank_specifier : '[' ( dim_separators )? ']' ;
    public final CSharpParser.rank_specifier_return rank_specifier() throws RecognitionException {
        CSharpParser.rank_specifier_return retval = new CSharpParser.rank_specifier_return();
        retval.start = input.LT(1);
        int rank_specifier_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal146=null;
        Token char_literal148=null;
        CSharpParser.dim_separators_return dim_separators147 = null;


        Object char_literal146_tree=null;
        Object char_literal148_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 35) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:176:15: ( '[' ( dim_separators )? ']' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:177:3: '[' ( dim_separators )? ']'
            {
            root_0 = (Object)adaptor.nil();

            char_literal146=(Token)match(input,86,FOLLOW_86_in_rank_specifier1501); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal146_tree = (Object)adaptor.create(char_literal146);
            adaptor.addChild(root_0, char_literal146_tree);
            }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:177:9: ( dim_separators )?
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==89) ) {
                alt40=1;
            }
            switch (alt40) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:177:9: dim_separators
                    {
                    pushFollow(FOLLOW_dim_separators_in_rank_specifier1505);
                    dim_separators147=dim_separators();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, dim_separators147.getTree());

                    }
                    break;

            }

            char_literal148=(Token)match(input,87,FOLLOW_87_in_rank_specifier1510); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal148_tree = (Object)adaptor.create(char_literal148);
            adaptor.addChild(root_0, char_literal148_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 35, rank_specifier_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "rank_specifier"

    public static class dim_separators_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "dim_separators"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:178:1: dim_separators : ( ',' )+ ;
    public final CSharpParser.dim_separators_return dim_separators() throws RecognitionException {
        CSharpParser.dim_separators_return retval = new CSharpParser.dim_separators_return();
        retval.start = input.LT(1);
        int dim_separators_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal149=null;

        Object char_literal149_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 36) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:178:15: ( ( ',' )+ )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:179:3: ( ',' )+
            {
            root_0 = (Object)adaptor.nil();

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:179:3: ( ',' )+
            int cnt41=0;
            loop41:
            do {
                int alt41=2;
                int LA41_0 = input.LA(1);

                if ( (LA41_0==89) ) {
                    alt41=1;
                }


                switch (alt41) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:179:3: ','
            	    {
            	    char_literal149=(Token)match(input,89,FOLLOW_89_in_dim_separators1520); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal149_tree = (Object)adaptor.create(char_literal149);
            	    adaptor.addChild(root_0, char_literal149_tree);
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt41 >= 1 ) break loop41;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(41, input);
                        throw eee;
                }
                cnt41++;
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 36, dim_separators_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "dim_separators"

    public static class delegate_creation_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "delegate_creation_expression"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:181:1: delegate_creation_expression : type_name '(' type_name ')' ;
    public final CSharpParser.delegate_creation_expression_return delegate_creation_expression() throws RecognitionException {
        CSharpParser.delegate_creation_expression_return retval = new CSharpParser.delegate_creation_expression_return();
        retval.start = input.LT(1);
        int delegate_creation_expression_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal151=null;
        Token char_literal153=null;
        CSharpParser.type_name_return type_name150 = null;

        CSharpParser.type_name_return type_name152 = null;


        Object char_literal151_tree=null;
        Object char_literal153_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 37) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:181:29: ( type_name '(' type_name ')' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:183:3: type_name '(' type_name ')'
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_type_name_in_delegate_creation_expression1535);
            type_name150=type_name();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type_name150.getTree());
            char_literal151=(Token)match(input,88,FOLLOW_88_in_delegate_creation_expression1539); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal151_tree = (Object)adaptor.create(char_literal151);
            adaptor.addChild(root_0, char_literal151_tree);
            }
            pushFollow(FOLLOW_type_name_in_delegate_creation_expression1543);
            type_name152=type_name();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type_name152.getTree());
            char_literal153=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_delegate_creation_expression1547); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal153_tree = (Object)adaptor.create(char_literal153);
            adaptor.addChild(root_0, char_literal153_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 37, delegate_creation_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "delegate_creation_expression"

    public static class anonymous_object_creation_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "anonymous_object_creation_expression"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:184:1: anonymous_object_creation_expression : anonymous_object_initializer ;
    public final CSharpParser.anonymous_object_creation_expression_return anonymous_object_creation_expression() throws RecognitionException {
        CSharpParser.anonymous_object_creation_expression_return retval = new CSharpParser.anonymous_object_creation_expression_return();
        retval.start = input.LT(1);
        int anonymous_object_creation_expression_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.anonymous_object_initializer_return anonymous_object_initializer154 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 38) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:184:37: ( anonymous_object_initializer )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:186:3: anonymous_object_initializer
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_anonymous_object_initializer_in_anonymous_object_creation_expression1560);
            anonymous_object_initializer154=anonymous_object_initializer();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, anonymous_object_initializer154.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 38, anonymous_object_creation_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "anonymous_object_creation_expression"

    public static class anonymous_object_initializer_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "anonymous_object_initializer"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:187:1: anonymous_object_initializer : '{' ( member_declarator_list )? ( ',' )? '}' ;
    public final CSharpParser.anonymous_object_initializer_return anonymous_object_initializer() throws RecognitionException {
        CSharpParser.anonymous_object_initializer_return retval = new CSharpParser.anonymous_object_initializer_return();
        retval.start = input.LT(1);
        int anonymous_object_initializer_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal155=null;
        Token char_literal157=null;
        Token char_literal158=null;
        CSharpParser.member_declarator_list_return member_declarator_list156 = null;


        Object char_literal155_tree=null;
        Object char_literal157_tree=null;
        Object char_literal158_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 39) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:187:29: ( '{' ( member_declarator_list )? ( ',' )? '}' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:188:3: '{' ( member_declarator_list )? ( ',' )? '}'
            {
            root_0 = (Object)adaptor.nil();

            char_literal155=(Token)match(input,62,FOLLOW_62_in_anonymous_object_initializer1570); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal155_tree = (Object)adaptor.create(char_literal155);
            adaptor.addChild(root_0, char_literal155_tree);
            }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:188:9: ( member_declarator_list )?
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==IDENTIFIER||LA42_0==65||(LA42_0>=132 && LA42_0<=133)||(LA42_0>=135 && LA42_0<=148)||(LA42_0>=150 && LA42_0<=152)||LA42_0==154||(LA42_0>=157 && LA42_0<=159)||LA42_0==170||(LA42_0>=177 && LA42_0<=178)||LA42_0==195||LA42_0==202) ) {
                alt42=1;
            }
            switch (alt42) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:188:9: member_declarator_list
                    {
                    pushFollow(FOLLOW_member_declarator_list_in_anonymous_object_initializer1574);
                    member_declarator_list156=member_declarator_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, member_declarator_list156.getTree());

                    }
                    break;

            }

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:188:35: ( ',' )?
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==89) ) {
                alt43=1;
            }
            switch (alt43) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:188:35: ','
                    {
                    char_literal157=(Token)match(input,89,FOLLOW_89_in_anonymous_object_initializer1579); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal157_tree = (Object)adaptor.create(char_literal157);
                    adaptor.addChild(root_0, char_literal157_tree);
                    }

                    }
                    break;

            }

            char_literal158=(Token)match(input,63,FOLLOW_63_in_anonymous_object_initializer1584); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal158_tree = (Object)adaptor.create(char_literal158);
            adaptor.addChild(root_0, char_literal158_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 39, anonymous_object_initializer_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "anonymous_object_initializer"

    public static class member_declarator_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "member_declarator_list"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:189:1: member_declarator_list : member_declarator ( ',' member_declarator )* ;
    public final CSharpParser.member_declarator_list_return member_declarator_list() throws RecognitionException {
        CSharpParser.member_declarator_list_return retval = new CSharpParser.member_declarator_list_return();
        retval.start = input.LT(1);
        int member_declarator_list_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal160=null;
        CSharpParser.member_declarator_return member_declarator159 = null;

        CSharpParser.member_declarator_return member_declarator161 = null;


        Object char_literal160_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 40) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:189:23: ( member_declarator ( ',' member_declarator )* )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:190:3: member_declarator ( ',' member_declarator )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_member_declarator_in_member_declarator_list1593);
            member_declarator159=member_declarator();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, member_declarator159.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:190:22: ( ',' member_declarator )*
            loop44:
            do {
                int alt44=2;
                int LA44_0 = input.LA(1);

                if ( (LA44_0==89) ) {
                    int LA44_1 = input.LA(2);

                    if ( (LA44_1==IDENTIFIER||LA44_1==65||(LA44_1>=132 && LA44_1<=133)||(LA44_1>=135 && LA44_1<=148)||(LA44_1>=150 && LA44_1<=152)||LA44_1==154||(LA44_1>=157 && LA44_1<=159)||LA44_1==170||(LA44_1>=177 && LA44_1<=178)||LA44_1==195||LA44_1==202) ) {
                        alt44=1;
                    }


                }


                switch (alt44) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:190:23: ',' member_declarator
            	    {
            	    char_literal160=(Token)match(input,89,FOLLOW_89_in_member_declarator_list1597); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal160_tree = (Object)adaptor.create(char_literal160);
            	    adaptor.addChild(root_0, char_literal160_tree);
            	    }
            	    pushFollow(FOLLOW_member_declarator_in_member_declarator_list1599);
            	    member_declarator161=member_declarator();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, member_declarator161.getTree());

            	    }
            	    break;

            	default :
            	    break loop44;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 40, member_declarator_list_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "member_declarator_list"

    public static class member_declarator_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "member_declarator"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:191:1: member_declarator : identifier ( generic_argument_list | ( '.' primary_or_array_creation_expression ) | '=' expression ) ;
    public final CSharpParser.member_declarator_return member_declarator() throws RecognitionException {
        CSharpParser.member_declarator_return retval = new CSharpParser.member_declarator_return();
        retval.start = input.LT(1);
        int member_declarator_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal164=null;
        Token char_literal166=null;
        CSharpParser.identifier_return identifier162 = null;

        CSharpParser.generic_argument_list_return generic_argument_list163 = null;

        CSharpParser.primary_or_array_creation_expression_return primary_or_array_creation_expression165 = null;

        CSharpParser.expression_return expression167 = null;


        Object char_literal164_tree=null;
        Object char_literal166_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 41) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:191:18: ( identifier ( generic_argument_list | ( '.' primary_or_array_creation_expression ) | '=' expression ) )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:192:3: identifier ( generic_argument_list | ( '.' primary_or_array_creation_expression ) | '=' expression )
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_identifier_in_member_declarator1612);
            identifier162=identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier162.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:192:16: ( generic_argument_list | ( '.' primary_or_array_creation_expression ) | '=' expression )
            int alt45=3;
            switch ( input.LA(1) ) {
            case 99:
                {
                alt45=1;
                }
                break;
            case DOT:
                {
                alt45=2;
                }
                break;
            case 66:
                {
                alt45=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 45, 0, input);

                throw nvae;
            }

            switch (alt45) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:192:17: generic_argument_list
                    {
                    pushFollow(FOLLOW_generic_argument_list_in_member_declarator1617);
                    generic_argument_list163=generic_argument_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, generic_argument_list163.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:193:12: ( '.' primary_or_array_creation_expression )
                    {
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:193:12: ( '.' primary_or_array_creation_expression )
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:193:13: '.' primary_or_array_creation_expression
                    {
                    char_literal164=(Token)match(input,DOT,FOLLOW_DOT_in_member_declarator1631); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal164_tree = (Object)adaptor.create(char_literal164);
                    adaptor.addChild(root_0, char_literal164_tree);
                    }
                    pushFollow(FOLLOW_primary_or_array_creation_expression_in_member_declarator1635);
                    primary_or_array_creation_expression165=primary_or_array_creation_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, primary_or_array_creation_expression165.getTree());

                    }


                    }
                    break;
                case 3 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:194:12: '=' expression
                    {
                    char_literal166=(Token)match(input,66,FOLLOW_66_in_member_declarator1649); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal166_tree = (Object)adaptor.create(char_literal166);
                    adaptor.addChild(root_0, char_literal166_tree);
                    }
                    pushFollow(FOLLOW_expression_in_member_declarator1653);
                    expression167=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression167.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 41, member_declarator_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "member_declarator"

    public static class primary_or_array_creation_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "primary_or_array_creation_expression"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:195:1: primary_or_array_creation_expression : ( ( array_creation_expression )=> array_creation_expression | primary_expression );
    public final CSharpParser.primary_or_array_creation_expression_return primary_or_array_creation_expression() throws RecognitionException {
        CSharpParser.primary_or_array_creation_expression_return retval = new CSharpParser.primary_or_array_creation_expression_return();
        retval.start = input.LT(1);
        int primary_or_array_creation_expression_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.array_creation_expression_return array_creation_expression168 = null;

        CSharpParser.primary_expression_return primary_expression169 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 42) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:195:37: ( ( array_creation_expression )=> array_creation_expression | primary_expression )
            int alt46=2;
            alt46 = dfa46.predict(input);
            switch (alt46) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:196:3: ( array_creation_expression )=> array_creation_expression
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_array_creation_expression_in_primary_or_array_creation_expression1669);
                    array_creation_expression168=array_creation_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, array_creation_expression168.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:197:5: primary_expression
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_primary_expression_in_primary_or_array_creation_expression1675);
                    primary_expression169=primary_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, primary_expression169.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 42, primary_or_array_creation_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "primary_or_array_creation_expression"

    public static class array_creation_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "array_creation_expression"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:200:1: array_creation_expression : 'new' ( type ( '[' expression_list ']' ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments ) | array_initializer ) | rank_specifier ( array_initializer ) ) ;
    public final CSharpParser.array_creation_expression_return array_creation_expression() throws RecognitionException {
        CSharpParser.array_creation_expression_return retval = new CSharpParser.array_creation_expression_return();
        retval.start = input.LT(1);
        int array_creation_expression_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal170=null;
        Token char_literal172=null;
        Token char_literal174=null;
        CSharpParser.type_return type171 = null;

        CSharpParser.expression_list_return expression_list173 = null;

        CSharpParser.rank_specifiers_return rank_specifiers175 = null;

        CSharpParser.array_initializer_return array_initializer176 = null;

        CSharpParser.arguments_return arguments177 = null;

        CSharpParser.invocation_part_return invocation_part178 = null;

        CSharpParser.invocation_part_return invocation_part179 = null;

        CSharpParser.arguments_return arguments180 = null;

        CSharpParser.array_initializer_return array_initializer181 = null;

        CSharpParser.rank_specifier_return rank_specifier182 = null;

        CSharpParser.array_initializer_return array_initializer183 = null;


        Object string_literal170_tree=null;
        Object char_literal172_tree=null;
        Object char_literal174_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 43) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:200:26: ( 'new' ( type ( '[' expression_list ']' ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments ) | array_initializer ) | rank_specifier ( array_initializer ) ) )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:201:3: 'new' ( type ( '[' expression_list ']' ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments ) | array_initializer ) | rank_specifier ( array_initializer ) )
            {
            root_0 = (Object)adaptor.nil();

            string_literal170=(Token)match(input,68,FOLLOW_68_in_array_creation_expression1688); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal170_tree = (Object)adaptor.create(string_literal170);
            adaptor.addChild(root_0, string_literal170_tree);
            }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:202:5: ( type ( '[' expression_list ']' ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments ) | array_initializer ) | rank_specifier ( array_initializer ) )
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==IDENTIFIER||LA52_0==65||LA52_0==82||(LA52_0>=132 && LA52_0<=133)||(LA52_0>=135 && LA52_0<=148)||(LA52_0>=150 && LA52_0<=152)||LA52_0==154||(LA52_0>=157 && LA52_0<=168)||LA52_0==170||(LA52_0>=177 && LA52_0<=178)||(LA52_0>=195 && LA52_0<=202)) ) {
                alt52=1;
            }
            else if ( (LA52_0==86) ) {
                alt52=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 52, 0, input);

                throw nvae;
            }
            switch (alt52) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:202:6: type ( '[' expression_list ']' ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments ) | array_initializer )
                    {
                    pushFollow(FOLLOW_type_in_array_creation_expression1698);
                    type171=type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type171.getTree());
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:202:13: ( '[' expression_list ']' ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments ) | array_initializer )
                    int alt51=2;
                    int LA51_0 = input.LA(1);

                    if ( (LA51_0==86) ) {
                        alt51=1;
                    }
                    else if ( (LA51_0==62) ) {
                        alt51=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 51, 0, input);

                        throw nvae;
                    }
                    switch (alt51) {
                        case 1 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:202:14: '[' expression_list ']' ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments )
                            {
                            char_literal172=(Token)match(input,86,FOLLOW_86_in_array_creation_expression1703); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            char_literal172_tree = (Object)adaptor.create(char_literal172);
                            adaptor.addChild(root_0, char_literal172_tree);
                            }
                            pushFollow(FOLLOW_expression_list_in_array_creation_expression1707);
                            expression_list173=expression_list();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression_list173.getTree());
                            char_literal174=(Token)match(input,87,FOLLOW_87_in_array_creation_expression1711); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            char_literal174_tree = (Object)adaptor.create(char_literal174);
                            adaptor.addChild(root_0, char_literal174_tree);
                            }
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:203:11: ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments )
                            int alt50=2;
                            alt50 = dfa50.predict(input);
                            switch (alt50) {
                                case 1 :
                                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:203:13: ( rank_specifiers )? ( array_initializer )?
                                    {
                                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:203:13: ( rank_specifiers )?
                                    int alt47=2;
                                    int LA47_0 = input.LA(1);

                                    if ( (LA47_0==86) ) {
                                        alt47=1;
                                    }
                                    switch (alt47) {
                                        case 1 :
                                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:203:13: rank_specifiers
                                            {
                                            pushFollow(FOLLOW_rank_specifiers_in_array_creation_expression1728);
                                            rank_specifiers175=rank_specifiers();

                                            state._fsp--;
                                            if (state.failed) return retval;
                                            if ( state.backtracking==0 ) adaptor.addChild(root_0, rank_specifiers175.getTree());

                                            }
                                            break;

                                    }

                                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:203:32: ( array_initializer )?
                                    int alt48=2;
                                    int LA48_0 = input.LA(1);

                                    if ( (LA48_0==62) ) {
                                        alt48=1;
                                    }
                                    switch (alt48) {
                                        case 1 :
                                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:203:32: array_initializer
                                            {
                                            pushFollow(FOLLOW_array_initializer_in_array_creation_expression1733);
                                            array_initializer176=array_initializer();

                                            state._fsp--;
                                            if (state.failed) return retval;
                                            if ( state.backtracking==0 ) adaptor.addChild(root_0, array_initializer176.getTree());

                                            }
                                            break;

                                    }


                                    }
                                    break;
                                case 2 :
                                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:205:13: ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments
                                    {
                                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:205:13: ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )*
                                    loop49:
                                    do {
                                        int alt49=3;
                                        int LA49_0 = input.LA(1);

                                        if ( (LA49_0==88) ) {
                                            int LA49_1 = input.LA(2);

                                            if ( (synpred12_cs()) ) {
                                                alt49=1;
                                            }


                                        }
                                        else if ( ((LA49_0>=DOT && LA49_0<=PTR)||LA49_0==86) ) {
                                            alt49=2;
                                        }


                                        switch (alt49) {
                                    	case 1 :
                                    	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:205:15: ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part )
                                    	    {
                                    	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:205:15: ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part )
                                    	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:205:16: ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part
                                    	    {
                                    	    pushFollow(FOLLOW_arguments_in_array_creation_expression1779);
                                    	    arguments177=arguments();

                                    	    state._fsp--;
                                    	    if (state.failed) return retval;
                                    	    if ( state.backtracking==0 ) adaptor.addChild(root_0, arguments177.getTree());
                                    	    pushFollow(FOLLOW_invocation_part_in_array_creation_expression1783);
                                    	    invocation_part178=invocation_part();

                                    	    state._fsp--;
                                    	    if (state.failed) return retval;
                                    	    if ( state.backtracking==0 ) adaptor.addChild(root_0, invocation_part178.getTree());

                                    	    }


                                    	    }
                                    	    break;
                                    	case 2 :
                                    	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:206:15: invocation_part
                                    	    {
                                    	    pushFollow(FOLLOW_invocation_part_in_array_creation_expression1800);
                                    	    invocation_part179=invocation_part();

                                    	    state._fsp--;
                                    	    if (state.failed) return retval;
                                    	    if ( state.backtracking==0 ) adaptor.addChild(root_0, invocation_part179.getTree());

                                    	    }
                                    	    break;

                                    	default :
                                    	    break loop49;
                                        }
                                    } while (true);

                                    pushFollow(FOLLOW_arguments_in_array_creation_expression1806);
                                    arguments180=arguments();

                                    state._fsp--;
                                    if (state.failed) return retval;
                                    if ( state.backtracking==0 ) adaptor.addChild(root_0, arguments180.getTree());

                                    }
                                    break;

                            }


                            }
                            break;
                        case 2 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:208:11: array_initializer
                            {
                            pushFollow(FOLLOW_array_initializer_in_array_creation_expression1843);
                            array_initializer181=array_initializer();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, array_initializer181.getTree());

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:210:7: rank_specifier ( array_initializer )
                    {
                    pushFollow(FOLLOW_rank_specifier_in_array_creation_expression1864);
                    rank_specifier182=rank_specifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, rank_specifier182.getTree());
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:211:7: ( array_initializer )
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:211:8: array_initializer
                    {
                    pushFollow(FOLLOW_array_initializer_in_array_creation_expression1876);
                    array_initializer183=array_initializer();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, array_initializer183.getTree());

                    }


                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 43, array_creation_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "array_creation_expression"

    public static class array_initializer_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "array_initializer"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:214:1: array_initializer : '{' ( variable_initializer_list )? ( ',' )? '}' ;
    public final CSharpParser.array_initializer_return array_initializer() throws RecognitionException {
        CSharpParser.array_initializer_return retval = new CSharpParser.array_initializer_return();
        retval.start = input.LT(1);
        int array_initializer_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal184=null;
        Token char_literal186=null;
        Token char_literal187=null;
        CSharpParser.variable_initializer_list_return variable_initializer_list185 = null;


        Object char_literal184_tree=null;
        Object char_literal186_tree=null;
        Object char_literal187_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 44) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:214:18: ( '{' ( variable_initializer_list )? ( ',' )? '}' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:215:3: '{' ( variable_initializer_list )? ( ',' )? '}'
            {
            root_0 = (Object)adaptor.nil();

            char_literal184=(Token)match(input,62,FOLLOW_62_in_array_initializer1903); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal184_tree = (Object)adaptor.create(char_literal184);
            adaptor.addChild(root_0, char_literal184_tree);
            }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:215:9: ( variable_initializer_list )?
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( ((LA53_0>=IDENTIFIER && LA53_0<=NULL)||LA53_0==MINUS||LA53_0==62||LA53_0==65||LA53_0==68||LA53_0==83||LA53_0==85||LA53_0==88||(LA53_0>=93 && LA53_0<=98)||LA53_0==100||(LA53_0>=102 && LA53_0<=106)||LA53_0==117||(LA53_0>=132 && LA53_0<=133)||(LA53_0>=135 && LA53_0<=148)||(LA53_0>=150 && LA53_0<=152)||LA53_0==154||(LA53_0>=157 && LA53_0<=168)||LA53_0==170||(LA53_0>=177 && LA53_0<=178)||(LA53_0>=195 && LA53_0<=202)) ) {
                alt53=1;
            }
            switch (alt53) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:215:9: variable_initializer_list
                    {
                    pushFollow(FOLLOW_variable_initializer_list_in_array_initializer1907);
                    variable_initializer_list185=variable_initializer_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, variable_initializer_list185.getTree());

                    }
                    break;

            }

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:215:38: ( ',' )?
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==89) ) {
                alt54=1;
            }
            switch (alt54) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:215:38: ','
                    {
                    char_literal186=(Token)match(input,89,FOLLOW_89_in_array_initializer1912); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal186_tree = (Object)adaptor.create(char_literal186);
                    adaptor.addChild(root_0, char_literal186_tree);
                    }

                    }
                    break;

            }

            char_literal187=(Token)match(input,63,FOLLOW_63_in_array_initializer1917); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal187_tree = (Object)adaptor.create(char_literal187);
            adaptor.addChild(root_0, char_literal187_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 44, array_initializer_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "array_initializer"

    public static class variable_initializer_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "variable_initializer_list"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:216:1: variable_initializer_list : variable_initializer ( ',' variable_initializer )* ;
    public final CSharpParser.variable_initializer_list_return variable_initializer_list() throws RecognitionException {
        CSharpParser.variable_initializer_list_return retval = new CSharpParser.variable_initializer_list_return();
        retval.start = input.LT(1);
        int variable_initializer_list_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal189=null;
        CSharpParser.variable_initializer_return variable_initializer188 = null;

        CSharpParser.variable_initializer_return variable_initializer190 = null;


        Object char_literal189_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 45) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:216:26: ( variable_initializer ( ',' variable_initializer )* )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:217:3: variable_initializer ( ',' variable_initializer )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_variable_initializer_in_variable_initializer_list1926);
            variable_initializer188=variable_initializer();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, variable_initializer188.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:217:24: ( ',' variable_initializer )*
            loop55:
            do {
                int alt55=2;
                int LA55_0 = input.LA(1);

                if ( (LA55_0==89) ) {
                    int LA55_1 = input.LA(2);

                    if ( ((LA55_1>=IDENTIFIER && LA55_1<=NULL)||LA55_1==MINUS||LA55_1==62||LA55_1==65||LA55_1==68||LA55_1==83||LA55_1==85||LA55_1==88||(LA55_1>=93 && LA55_1<=98)||LA55_1==100||(LA55_1>=102 && LA55_1<=106)||LA55_1==117||(LA55_1>=132 && LA55_1<=133)||(LA55_1>=135 && LA55_1<=148)||(LA55_1>=150 && LA55_1<=152)||LA55_1==154||(LA55_1>=157 && LA55_1<=168)||LA55_1==170||(LA55_1>=177 && LA55_1<=178)||(LA55_1>=195 && LA55_1<=202)) ) {
                        alt55=1;
                    }


                }


                switch (alt55) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:217:25: ',' variable_initializer
            	    {
            	    char_literal189=(Token)match(input,89,FOLLOW_89_in_variable_initializer_list1929); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal189_tree = (Object)adaptor.create(char_literal189);
            	    adaptor.addChild(root_0, char_literal189_tree);
            	    }
            	    pushFollow(FOLLOW_variable_initializer_in_variable_initializer_list1931);
            	    variable_initializer190=variable_initializer();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, variable_initializer190.getTree());

            	    }
            	    break;

            	default :
            	    break loop55;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 45, variable_initializer_list_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "variable_initializer_list"

    public static class variable_initializer_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "variable_initializer"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:218:1: variable_initializer : ( expression | array_initializer );
    public final CSharpParser.variable_initializer_return variable_initializer() throws RecognitionException {
        CSharpParser.variable_initializer_return retval = new CSharpParser.variable_initializer_return();
        retval.start = input.LT(1);
        int variable_initializer_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.expression_return expression191 = null;

        CSharpParser.array_initializer_return array_initializer192 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 46) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:218:21: ( expression | array_initializer )
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( ((LA56_0>=IDENTIFIER && LA56_0<=NULL)||LA56_0==MINUS||LA56_0==65||LA56_0==68||LA56_0==83||LA56_0==85||LA56_0==88||(LA56_0>=93 && LA56_0<=98)||LA56_0==100||(LA56_0>=102 && LA56_0<=106)||LA56_0==117||(LA56_0>=132 && LA56_0<=133)||(LA56_0>=135 && LA56_0<=148)||(LA56_0>=150 && LA56_0<=152)||LA56_0==154||(LA56_0>=157 && LA56_0<=168)||LA56_0==170||(LA56_0>=177 && LA56_0<=178)||(LA56_0>=195 && LA56_0<=202)) ) {
                alt56=1;
            }
            else if ( (LA56_0==62) ) {
                alt56=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 56, 0, input);

                throw nvae;
            }
            switch (alt56) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:219:3: expression
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_expression_in_variable_initializer1942);
                    expression191=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression191.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:219:17: array_initializer
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_array_initializer_in_variable_initializer1947);
                    array_initializer192=array_initializer();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, array_initializer192.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 46, variable_initializer_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "variable_initializer"

    public static class sizeof_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "sizeof_expression"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:220:1: sizeof_expression : 'sizeof' '(' unmanaged_type ')' ;
    public final CSharpParser.sizeof_expression_return sizeof_expression() throws RecognitionException {
        CSharpParser.sizeof_expression_return retval = new CSharpParser.sizeof_expression_return();
        retval.start = input.LT(1);
        int sizeof_expression_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal193=null;
        Token char_literal194=null;
        Token char_literal196=null;
        CSharpParser.unmanaged_type_return unmanaged_type195 = null;


        Object string_literal193_tree=null;
        Object char_literal194_tree=null;
        Object char_literal196_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 47) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:220:18: ( 'sizeof' '(' unmanaged_type ')' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:221:3: 'sizeof' '(' unmanaged_type ')'
            {
            root_0 = (Object)adaptor.nil();

            string_literal193=(Token)match(input,93,FOLLOW_93_in_sizeof_expression1956); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal193_tree = (Object)adaptor.create(string_literal193);
            adaptor.addChild(root_0, string_literal193_tree);
            }
            char_literal194=(Token)match(input,88,FOLLOW_88_in_sizeof_expression1960); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal194_tree = (Object)adaptor.create(char_literal194);
            adaptor.addChild(root_0, char_literal194_tree);
            }
            pushFollow(FOLLOW_unmanaged_type_in_sizeof_expression1964);
            unmanaged_type195=unmanaged_type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, unmanaged_type195.getTree());
            char_literal196=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_sizeof_expression1968); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal196_tree = (Object)adaptor.create(char_literal196);
            adaptor.addChild(root_0, char_literal196_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 47, sizeof_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "sizeof_expression"

    public static class checked_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "checked_expression"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:222:1: checked_expression : 'checked' '(' expression ')' ;
    public final CSharpParser.checked_expression_return checked_expression() throws RecognitionException {
        CSharpParser.checked_expression_return retval = new CSharpParser.checked_expression_return();
        retval.start = input.LT(1);
        int checked_expression_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal197=null;
        Token char_literal198=null;
        Token char_literal200=null;
        CSharpParser.expression_return expression199 = null;


        Object string_literal197_tree=null;
        Object char_literal198_tree=null;
        Object char_literal200_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 48) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:222:19: ( 'checked' '(' expression ')' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:223:3: 'checked' '(' expression ')'
            {
            root_0 = (Object)adaptor.nil();

            string_literal197=(Token)match(input,94,FOLLOW_94_in_checked_expression1977); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal197_tree = (Object)adaptor.create(string_literal197);
            adaptor.addChild(root_0, string_literal197_tree);
            }
            char_literal198=(Token)match(input,88,FOLLOW_88_in_checked_expression1981); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal198_tree = (Object)adaptor.create(char_literal198);
            adaptor.addChild(root_0, char_literal198_tree);
            }
            pushFollow(FOLLOW_expression_in_checked_expression1985);
            expression199=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression199.getTree());
            char_literal200=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_checked_expression1989); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal200_tree = (Object)adaptor.create(char_literal200);
            adaptor.addChild(root_0, char_literal200_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 48, checked_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "checked_expression"

    public static class unchecked_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "unchecked_expression"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:224:1: unchecked_expression : 'unchecked' '(' expression ')' ;
    public final CSharpParser.unchecked_expression_return unchecked_expression() throws RecognitionException {
        CSharpParser.unchecked_expression_return retval = new CSharpParser.unchecked_expression_return();
        retval.start = input.LT(1);
        int unchecked_expression_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal201=null;
        Token char_literal202=null;
        Token char_literal204=null;
        CSharpParser.expression_return expression203 = null;


        Object string_literal201_tree=null;
        Object char_literal202_tree=null;
        Object char_literal204_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 49) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:224:21: ( 'unchecked' '(' expression ')' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:225:3: 'unchecked' '(' expression ')'
            {
            root_0 = (Object)adaptor.nil();

            string_literal201=(Token)match(input,95,FOLLOW_95_in_unchecked_expression1999); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal201_tree = (Object)adaptor.create(string_literal201);
            adaptor.addChild(root_0, string_literal201_tree);
            }
            char_literal202=(Token)match(input,88,FOLLOW_88_in_unchecked_expression2003); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal202_tree = (Object)adaptor.create(char_literal202);
            adaptor.addChild(root_0, char_literal202_tree);
            }
            pushFollow(FOLLOW_expression_in_unchecked_expression2007);
            expression203=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression203.getTree());
            char_literal204=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_unchecked_expression2011); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal204_tree = (Object)adaptor.create(char_literal204);
            adaptor.addChild(root_0, char_literal204_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 49, unchecked_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "unchecked_expression"

    public static class default_value_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "default_value_expression"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:226:1: default_value_expression : 'default' '(' type ')' ;
    public final CSharpParser.default_value_expression_return default_value_expression() throws RecognitionException {
        CSharpParser.default_value_expression_return retval = new CSharpParser.default_value_expression_return();
        retval.start = input.LT(1);
        int default_value_expression_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal205=null;
        Token char_literal206=null;
        Token char_literal208=null;
        CSharpParser.type_return type207 = null;


        Object string_literal205_tree=null;
        Object char_literal206_tree=null;
        Object char_literal208_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 50) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:226:25: ( 'default' '(' type ')' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:227:3: 'default' '(' type ')'
            {
            root_0 = (Object)adaptor.nil();

            string_literal205=(Token)match(input,96,FOLLOW_96_in_default_value_expression2021); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal205_tree = (Object)adaptor.create(string_literal205);
            adaptor.addChild(root_0, string_literal205_tree);
            }
            char_literal206=(Token)match(input,88,FOLLOW_88_in_default_value_expression2025); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal206_tree = (Object)adaptor.create(char_literal206);
            adaptor.addChild(root_0, char_literal206_tree);
            }
            pushFollow(FOLLOW_type_in_default_value_expression2029);
            type207=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type207.getTree());
            char_literal208=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_default_value_expression2033); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal208_tree = (Object)adaptor.create(char_literal208);
            adaptor.addChild(root_0, char_literal208_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 50, default_value_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "default_value_expression"

    public static class anonymous_method_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "anonymous_method_expression"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:228:1: anonymous_method_expression : 'delegate' ( explicit_anonymous_function_signature )? block ;
    public final CSharpParser.anonymous_method_expression_return anonymous_method_expression() throws RecognitionException {
        CSharpParser.anonymous_method_expression_return retval = new CSharpParser.anonymous_method_expression_return();
        retval.start = input.LT(1);
        int anonymous_method_expression_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal209=null;
        CSharpParser.explicit_anonymous_function_signature_return explicit_anonymous_function_signature210 = null;

        CSharpParser.block_return block211 = null;


        Object string_literal209_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 51) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:228:28: ( 'delegate' ( explicit_anonymous_function_signature )? block )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:229:3: 'delegate' ( explicit_anonymous_function_signature )? block
            {
            root_0 = (Object)adaptor.nil();

            string_literal209=(Token)match(input,97,FOLLOW_97_in_anonymous_method_expression2042); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal209_tree = (Object)adaptor.create(string_literal209);
            adaptor.addChild(root_0, string_literal209_tree);
            }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:229:16: ( explicit_anonymous_function_signature )?
            int alt57=2;
            int LA57_0 = input.LA(1);

            if ( (LA57_0==88) ) {
                alt57=1;
            }
            switch (alt57) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:229:16: explicit_anonymous_function_signature
                    {
                    pushFollow(FOLLOW_explicit_anonymous_function_signature_in_anonymous_method_expression2046);
                    explicit_anonymous_function_signature210=explicit_anonymous_function_signature();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, explicit_anonymous_function_signature210.getTree());

                    }
                    break;

            }

            pushFollow(FOLLOW_block_in_anonymous_method_expression2051);
            block211=block();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, block211.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 51, anonymous_method_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "anonymous_method_expression"

    public static class explicit_anonymous_function_signature_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "explicit_anonymous_function_signature"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:230:1: explicit_anonymous_function_signature : '(' ( explicit_anonymous_function_parameter_list )? ')' ;
    public final CSharpParser.explicit_anonymous_function_signature_return explicit_anonymous_function_signature() throws RecognitionException {
        CSharpParser.explicit_anonymous_function_signature_return retval = new CSharpParser.explicit_anonymous_function_signature_return();
        retval.start = input.LT(1);
        int explicit_anonymous_function_signature_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal212=null;
        Token char_literal214=null;
        CSharpParser.explicit_anonymous_function_parameter_list_return explicit_anonymous_function_parameter_list213 = null;


        Object char_literal212_tree=null;
        Object char_literal214_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 52) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:230:38: ( '(' ( explicit_anonymous_function_parameter_list )? ')' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:231:3: '(' ( explicit_anonymous_function_parameter_list )? ')'
            {
            root_0 = (Object)adaptor.nil();

            char_literal212=(Token)match(input,88,FOLLOW_88_in_explicit_anonymous_function_signature2059); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal212_tree = (Object)adaptor.create(char_literal212);
            adaptor.addChild(root_0, char_literal212_tree);
            }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:231:9: ( explicit_anonymous_function_parameter_list )?
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( (LA58_0==IDENTIFIER||LA58_0==65||LA58_0==82||(LA58_0>=91 && LA58_0<=92)||(LA58_0>=132 && LA58_0<=133)||(LA58_0>=135 && LA58_0<=148)||(LA58_0>=150 && LA58_0<=152)||LA58_0==154||(LA58_0>=157 && LA58_0<=168)||LA58_0==170||(LA58_0>=177 && LA58_0<=178)||(LA58_0>=195 && LA58_0<=202)) ) {
                alt58=1;
            }
            switch (alt58) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:231:9: explicit_anonymous_function_parameter_list
                    {
                    pushFollow(FOLLOW_explicit_anonymous_function_parameter_list_in_explicit_anonymous_function_signature2063);
                    explicit_anonymous_function_parameter_list213=explicit_anonymous_function_parameter_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, explicit_anonymous_function_parameter_list213.getTree());

                    }
                    break;

            }

            char_literal214=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_explicit_anonymous_function_signature2068); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal214_tree = (Object)adaptor.create(char_literal214);
            adaptor.addChild(root_0, char_literal214_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 52, explicit_anonymous_function_signature_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "explicit_anonymous_function_signature"

    public static class explicit_anonymous_function_parameter_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "explicit_anonymous_function_parameter_list"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:232:1: explicit_anonymous_function_parameter_list : explicit_anonymous_function_parameter ( ',' explicit_anonymous_function_parameter )* ;
    public final CSharpParser.explicit_anonymous_function_parameter_list_return explicit_anonymous_function_parameter_list() throws RecognitionException {
        CSharpParser.explicit_anonymous_function_parameter_list_return retval = new CSharpParser.explicit_anonymous_function_parameter_list_return();
        retval.start = input.LT(1);
        int explicit_anonymous_function_parameter_list_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal216=null;
        CSharpParser.explicit_anonymous_function_parameter_return explicit_anonymous_function_parameter215 = null;

        CSharpParser.explicit_anonymous_function_parameter_return explicit_anonymous_function_parameter217 = null;


        Object char_literal216_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 53) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:232:43: ( explicit_anonymous_function_parameter ( ',' explicit_anonymous_function_parameter )* )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:233:3: explicit_anonymous_function_parameter ( ',' explicit_anonymous_function_parameter )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_explicit_anonymous_function_parameter_in_explicit_anonymous_function_parameter_list2077);
            explicit_anonymous_function_parameter215=explicit_anonymous_function_parameter();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, explicit_anonymous_function_parameter215.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:233:43: ( ',' explicit_anonymous_function_parameter )*
            loop59:
            do {
                int alt59=2;
                int LA59_0 = input.LA(1);

                if ( (LA59_0==89) ) {
                    alt59=1;
                }


                switch (alt59) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:233:44: ',' explicit_anonymous_function_parameter
            	    {
            	    char_literal216=(Token)match(input,89,FOLLOW_89_in_explicit_anonymous_function_parameter_list2082); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal216_tree = (Object)adaptor.create(char_literal216);
            	    adaptor.addChild(root_0, char_literal216_tree);
            	    }
            	    pushFollow(FOLLOW_explicit_anonymous_function_parameter_in_explicit_anonymous_function_parameter_list2086);
            	    explicit_anonymous_function_parameter217=explicit_anonymous_function_parameter();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, explicit_anonymous_function_parameter217.getTree());

            	    }
            	    break;

            	default :
            	    break loop59;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 53, explicit_anonymous_function_parameter_list_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "explicit_anonymous_function_parameter_list"

    public static class explicit_anonymous_function_parameter_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "explicit_anonymous_function_parameter"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:234:1: explicit_anonymous_function_parameter : ( anonymous_function_parameter_modifier )? type identifier ;
    public final CSharpParser.explicit_anonymous_function_parameter_return explicit_anonymous_function_parameter() throws RecognitionException {
        CSharpParser.explicit_anonymous_function_parameter_return retval = new CSharpParser.explicit_anonymous_function_parameter_return();
        retval.start = input.LT(1);
        int explicit_anonymous_function_parameter_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.anonymous_function_parameter_modifier_return anonymous_function_parameter_modifier218 = null;

        CSharpParser.type_return type219 = null;

        CSharpParser.identifier_return identifier220 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 54) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:234:38: ( ( anonymous_function_parameter_modifier )? type identifier )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:235:3: ( anonymous_function_parameter_modifier )? type identifier
            {
            root_0 = (Object)adaptor.nil();

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:235:3: ( anonymous_function_parameter_modifier )?
            int alt60=2;
            int LA60_0 = input.LA(1);

            if ( ((LA60_0>=91 && LA60_0<=92)) ) {
                alt60=1;
            }
            switch (alt60) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:235:3: anonymous_function_parameter_modifier
                    {
                    pushFollow(FOLLOW_anonymous_function_parameter_modifier_in_explicit_anonymous_function_parameter2099);
                    anonymous_function_parameter_modifier218=anonymous_function_parameter_modifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, anonymous_function_parameter_modifier218.getTree());

                    }
                    break;

            }

            pushFollow(FOLLOW_type_in_explicit_anonymous_function_parameter2104);
            type219=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type219.getTree());
            pushFollow(FOLLOW_identifier_in_explicit_anonymous_function_parameter2108);
            identifier220=identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier220.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 54, explicit_anonymous_function_parameter_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "explicit_anonymous_function_parameter"

    public static class anonymous_function_parameter_modifier_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "anonymous_function_parameter_modifier"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:236:1: anonymous_function_parameter_modifier : ( 'ref' | 'out' );
    public final CSharpParser.anonymous_function_parameter_modifier_return anonymous_function_parameter_modifier() throws RecognitionException {
        CSharpParser.anonymous_function_parameter_modifier_return retval = new CSharpParser.anonymous_function_parameter_modifier_return();
        retval.start = input.LT(1);
        int anonymous_function_parameter_modifier_StartIndex = input.index();
        Object root_0 = null;

        Token set221=null;

        Object set221_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 55) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:236:38: ( 'ref' | 'out' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:
            {
            root_0 = (Object)adaptor.nil();

            set221=(Token)input.LT(1);
            if ( (input.LA(1)>=91 && input.LA(1)<=92) ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set221));
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 55, anonymous_function_parameter_modifier_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "anonymous_function_parameter_modifier"

    public static class object_creation_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "object_creation_expression"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:241:1: object_creation_expression : type ( '(' ( argument_list )? ')' ( object_or_collection_initializer )? | object_or_collection_initializer ) ;
    public final CSharpParser.object_creation_expression_return object_creation_expression() throws RecognitionException {
        CSharpParser.object_creation_expression_return retval = new CSharpParser.object_creation_expression_return();
        retval.start = input.LT(1);
        int object_creation_expression_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal223=null;
        Token char_literal225=null;
        CSharpParser.type_return type222 = null;

        CSharpParser.argument_list_return argument_list224 = null;

        CSharpParser.object_or_collection_initializer_return object_or_collection_initializer226 = null;

        CSharpParser.object_or_collection_initializer_return object_or_collection_initializer227 = null;


        Object char_literal223_tree=null;
        Object char_literal225_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 56) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:241:27: ( type ( '(' ( argument_list )? ')' ( object_or_collection_initializer )? | object_or_collection_initializer ) )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:243:3: type ( '(' ( argument_list )? ')' ( object_or_collection_initializer )? | object_or_collection_initializer )
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_type_in_object_creation_expression2135);
            type222=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type222.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:244:5: ( '(' ( argument_list )? ')' ( object_or_collection_initializer )? | object_or_collection_initializer )
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==88) ) {
                alt63=1;
            }
            else if ( (LA63_0==62) ) {
                alt63=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 63, 0, input);

                throw nvae;
            }
            switch (alt63) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:244:7: '(' ( argument_list )? ')' ( object_or_collection_initializer )?
                    {
                    char_literal223=(Token)match(input,88,FOLLOW_88_in_object_creation_expression2146); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal223_tree = (Object)adaptor.create(char_literal223);
                    adaptor.addChild(root_0, char_literal223_tree);
                    }
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:244:13: ( argument_list )?
                    int alt61=2;
                    int LA61_0 = input.LA(1);

                    if ( ((LA61_0>=IDENTIFIER && LA61_0<=NULL)||LA61_0==MINUS||LA61_0==65||LA61_0==68||LA61_0==83||LA61_0==85||LA61_0==88||(LA61_0>=91 && LA61_0<=98)||LA61_0==100||(LA61_0>=102 && LA61_0<=106)||LA61_0==117||(LA61_0>=132 && LA61_0<=133)||(LA61_0>=135 && LA61_0<=148)||(LA61_0>=150 && LA61_0<=152)||LA61_0==154||(LA61_0>=157 && LA61_0<=168)||LA61_0==170||(LA61_0>=177 && LA61_0<=178)||(LA61_0>=195 && LA61_0<=202)) ) {
                        alt61=1;
                    }
                    switch (alt61) {
                        case 1 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:244:13: argument_list
                            {
                            pushFollow(FOLLOW_argument_list_in_object_creation_expression2150);
                            argument_list224=argument_list();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, argument_list224.getTree());

                            }
                            break;

                    }

                    char_literal225=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_object_creation_expression2155); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal225_tree = (Object)adaptor.create(char_literal225);
                    adaptor.addChild(root_0, char_literal225_tree);
                    }
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:244:36: ( object_or_collection_initializer )?
                    int alt62=2;
                    int LA62_0 = input.LA(1);

                    if ( (LA62_0==62) ) {
                        alt62=1;
                    }
                    switch (alt62) {
                        case 1 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:244:36: object_or_collection_initializer
                            {
                            pushFollow(FOLLOW_object_or_collection_initializer_in_object_creation_expression2159);
                            object_or_collection_initializer226=object_or_collection_initializer();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, object_or_collection_initializer226.getTree());

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:245:9: object_or_collection_initializer
                    {
                    pushFollow(FOLLOW_object_or_collection_initializer_in_object_creation_expression2172);
                    object_or_collection_initializer227=object_or_collection_initializer();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, object_or_collection_initializer227.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 56, object_creation_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "object_creation_expression"

    public static class object_or_collection_initializer_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "object_or_collection_initializer"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:247:1: object_or_collection_initializer : '{' ( object_initializer | collection_initializer ) ;
    public final CSharpParser.object_or_collection_initializer_return object_or_collection_initializer() throws RecognitionException {
        CSharpParser.object_or_collection_initializer_return retval = new CSharpParser.object_or_collection_initializer_return();
        retval.start = input.LT(1);
        int object_or_collection_initializer_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal228=null;
        CSharpParser.object_initializer_return object_initializer229 = null;

        CSharpParser.collection_initializer_return collection_initializer230 = null;


        Object char_literal228_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 57) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:247:33: ( '{' ( object_initializer | collection_initializer ) )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:248:3: '{' ( object_initializer | collection_initializer )
            {
            root_0 = (Object)adaptor.nil();

            char_literal228=(Token)match(input,62,FOLLOW_62_in_object_or_collection_initializer2186); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal228_tree = (Object)adaptor.create(char_literal228);
            adaptor.addChild(root_0, char_literal228_tree);
            }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:248:8: ( object_initializer | collection_initializer )
            int alt64=2;
            switch ( input.LA(1) ) {
            case 133:
                {
                int LA64_1 = input.LA(2);

                if ( (LA64_1==66) ) {
                    alt64=1;
                }
                else if ( (LA64_1==IDENTIFIER||(LA64_1>=DOT && LA64_1<=GT)||LA64_1==63||LA64_1==65||LA64_1==82||LA64_1==84||LA64_1==86||(LA64_1>=88 && LA64_1<=89)||(LA64_1>=99 && LA64_1<=104)||(LA64_1>=116 && LA64_1<=133)||(LA64_1>=135 && LA64_1<=148)||(LA64_1>=150 && LA64_1<=152)||LA64_1==154||(LA64_1>=157 && LA64_1<=168)||LA64_1==170||(LA64_1>=177 && LA64_1<=178)||(LA64_1>=195 && LA64_1<=202)) ) {
                    alt64=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 64, 1, input);

                    throw nvae;
                }
                }
                break;
            case 63:
            case 89:
                {
                alt64=1;
                }
                break;
            case Real_literal:
            case NUMBER:
            case Hex_number:
            case Character_literal:
            case STRINGLITERAL:
            case Verbatim_string_literal:
            case TRUE:
            case FALSE:
            case NULL:
            case MINUS:
            case 62:
            case 68:
            case 83:
            case 85:
            case 88:
            case 93:
            case 94:
            case 95:
            case 96:
            case 97:
            case 98:
            case 100:
            case 102:
            case 103:
            case 104:
            case 105:
            case 106:
            case 117:
            case 160:
            case 161:
            case 162:
            case 163:
            case 164:
            case 165:
            case 166:
            case 167:
            case 168:
            case 196:
            case 197:
            case 198:
            case 199:
            case 200:
            case 201:
                {
                alt64=2;
                }
                break;
            case IDENTIFIER:
            case 65:
            case 132:
            case 135:
            case 136:
            case 137:
            case 138:
            case 139:
            case 140:
            case 141:
            case 142:
            case 143:
            case 144:
            case 145:
            case 146:
            case 147:
            case 148:
            case 150:
            case 151:
            case 152:
            case 154:
            case 157:
            case 158:
            case 159:
            case 170:
            case 177:
            case 178:
            case 195:
            case 202:
                {
                int LA64_4 = input.LA(2);

                if ( (LA64_4==66) ) {
                    alt64=1;
                }
                else if ( ((LA64_4>=DOT && LA64_4<=GT)||LA64_4==63||LA64_4==84||LA64_4==86||(LA64_4>=88 && LA64_4<=89)||(LA64_4>=99 && LA64_4<=104)||(LA64_4>=116 && LA64_4<=131)) ) {
                    alt64=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 64, 4, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 64, 0, input);

                throw nvae;
            }

            switch (alt64) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:248:9: object_initializer
                    {
                    pushFollow(FOLLOW_object_initializer_in_object_or_collection_initializer2190);
                    object_initializer229=object_initializer();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, object_initializer229.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:249:7: collection_initializer
                    {
                    pushFollow(FOLLOW_collection_initializer_in_object_or_collection_initializer2199);
                    collection_initializer230=collection_initializer();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, collection_initializer230.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 57, object_or_collection_initializer_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "object_or_collection_initializer"

    public static class collection_initializer_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "collection_initializer"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:250:1: collection_initializer : element_initializer_list ( ',' )? '}' ;
    public final CSharpParser.collection_initializer_return collection_initializer() throws RecognitionException {
        CSharpParser.collection_initializer_return retval = new CSharpParser.collection_initializer_return();
        retval.start = input.LT(1);
        int collection_initializer_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal232=null;
        Token char_literal233=null;
        CSharpParser.element_initializer_list_return element_initializer_list231 = null;


        Object char_literal232_tree=null;
        Object char_literal233_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 58) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:250:23: ( element_initializer_list ( ',' )? '}' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:251:3: element_initializer_list ( ',' )? '}'
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_element_initializer_list_in_collection_initializer2210);
            element_initializer_list231=element_initializer_list();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, element_initializer_list231.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:251:30: ( ',' )?
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( (LA65_0==89) ) {
                alt65=1;
            }
            switch (alt65) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:251:30: ','
                    {
                    char_literal232=(Token)match(input,89,FOLLOW_89_in_collection_initializer2214); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal232_tree = (Object)adaptor.create(char_literal232);
                    adaptor.addChild(root_0, char_literal232_tree);
                    }

                    }
                    break;

            }

            char_literal233=(Token)match(input,63,FOLLOW_63_in_collection_initializer2219); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal233_tree = (Object)adaptor.create(char_literal233);
            adaptor.addChild(root_0, char_literal233_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 58, collection_initializer_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "collection_initializer"

    public static class element_initializer_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "element_initializer_list"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:252:1: element_initializer_list : element_initializer ( ',' element_initializer )* ;
    public final CSharpParser.element_initializer_list_return element_initializer_list() throws RecognitionException {
        CSharpParser.element_initializer_list_return retval = new CSharpParser.element_initializer_list_return();
        retval.start = input.LT(1);
        int element_initializer_list_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal235=null;
        CSharpParser.element_initializer_return element_initializer234 = null;

        CSharpParser.element_initializer_return element_initializer236 = null;


        Object char_literal235_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 59) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:252:25: ( element_initializer ( ',' element_initializer )* )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:253:3: element_initializer ( ',' element_initializer )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_element_initializer_in_element_initializer_list2229);
            element_initializer234=element_initializer();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, element_initializer234.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:253:24: ( ',' element_initializer )*
            loop66:
            do {
                int alt66=2;
                int LA66_0 = input.LA(1);

                if ( (LA66_0==89) ) {
                    int LA66_1 = input.LA(2);

                    if ( ((LA66_1>=IDENTIFIER && LA66_1<=NULL)||LA66_1==MINUS||LA66_1==62||LA66_1==65||LA66_1==68||LA66_1==83||LA66_1==85||LA66_1==88||(LA66_1>=93 && LA66_1<=98)||LA66_1==100||(LA66_1>=102 && LA66_1<=106)||LA66_1==117||(LA66_1>=132 && LA66_1<=133)||(LA66_1>=135 && LA66_1<=148)||(LA66_1>=150 && LA66_1<=152)||LA66_1==154||(LA66_1>=157 && LA66_1<=168)||LA66_1==170||(LA66_1>=177 && LA66_1<=178)||(LA66_1>=195 && LA66_1<=202)) ) {
                        alt66=1;
                    }


                }


                switch (alt66) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:253:25: ',' element_initializer
            	    {
            	    char_literal235=(Token)match(input,89,FOLLOW_89_in_element_initializer_list2233); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal235_tree = (Object)adaptor.create(char_literal235);
            	    adaptor.addChild(root_0, char_literal235_tree);
            	    }
            	    pushFollow(FOLLOW_element_initializer_in_element_initializer_list2235);
            	    element_initializer236=element_initializer();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, element_initializer236.getTree());

            	    }
            	    break;

            	default :
            	    break loop66;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 59, element_initializer_list_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "element_initializer_list"

    public static class element_initializer_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "element_initializer"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:254:1: element_initializer : ( non_assignment_expression | '{' expression_list '}' );
    public final CSharpParser.element_initializer_return element_initializer() throws RecognitionException {
        CSharpParser.element_initializer_return retval = new CSharpParser.element_initializer_return();
        retval.start = input.LT(1);
        int element_initializer_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal238=null;
        Token char_literal240=null;
        CSharpParser.non_assignment_expression_return non_assignment_expression237 = null;

        CSharpParser.expression_list_return expression_list239 = null;


        Object char_literal238_tree=null;
        Object char_literal240_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 60) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:254:20: ( non_assignment_expression | '{' expression_list '}' )
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( ((LA67_0>=IDENTIFIER && LA67_0<=NULL)||LA67_0==MINUS||LA67_0==65||LA67_0==68||LA67_0==83||LA67_0==85||LA67_0==88||(LA67_0>=93 && LA67_0<=98)||LA67_0==100||(LA67_0>=102 && LA67_0<=106)||LA67_0==117||(LA67_0>=132 && LA67_0<=133)||(LA67_0>=135 && LA67_0<=148)||(LA67_0>=150 && LA67_0<=152)||LA67_0==154||(LA67_0>=157 && LA67_0<=168)||LA67_0==170||(LA67_0>=177 && LA67_0<=178)||(LA67_0>=195 && LA67_0<=202)) ) {
                alt67=1;
            }
            else if ( (LA67_0==62) ) {
                alt67=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 67, 0, input);

                throw nvae;
            }
            switch (alt67) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:255:3: non_assignment_expression
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_non_assignment_expression_in_element_initializer2247);
                    non_assignment_expression237=non_assignment_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, non_assignment_expression237.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:256:5: '{' expression_list '}'
                    {
                    root_0 = (Object)adaptor.nil();

                    char_literal238=(Token)match(input,62,FOLLOW_62_in_element_initializer2254); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal238_tree = (Object)adaptor.create(char_literal238);
                    adaptor.addChild(root_0, char_literal238_tree);
                    }
                    pushFollow(FOLLOW_expression_list_in_element_initializer2258);
                    expression_list239=expression_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression_list239.getTree());
                    char_literal240=(Token)match(input,63,FOLLOW_63_in_element_initializer2262); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal240_tree = (Object)adaptor.create(char_literal240);
                    adaptor.addChild(root_0, char_literal240_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 60, element_initializer_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "element_initializer"

    public static class object_initializer_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "object_initializer"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:263:1: object_initializer : ( member_initializer_list )? ( ',' )? '}' ;
    public final CSharpParser.object_initializer_return object_initializer() throws RecognitionException {
        CSharpParser.object_initializer_return retval = new CSharpParser.object_initializer_return();
        retval.start = input.LT(1);
        int object_initializer_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal242=null;
        Token char_literal243=null;
        CSharpParser.member_initializer_list_return member_initializer_list241 = null;


        Object char_literal242_tree=null;
        Object char_literal243_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 61) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:263:19: ( ( member_initializer_list )? ( ',' )? '}' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:264:3: ( member_initializer_list )? ( ',' )? '}'
            {
            root_0 = (Object)adaptor.nil();

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:264:3: ( member_initializer_list )?
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==IDENTIFIER||LA68_0==65||(LA68_0>=132 && LA68_0<=133)||(LA68_0>=135 && LA68_0<=148)||(LA68_0>=150 && LA68_0<=152)||LA68_0==154||(LA68_0>=157 && LA68_0<=159)||LA68_0==170||(LA68_0>=177 && LA68_0<=178)||LA68_0==195||LA68_0==202) ) {
                alt68=1;
            }
            switch (alt68) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:264:3: member_initializer_list
                    {
                    pushFollow(FOLLOW_member_initializer_list_in_object_initializer2278);
                    member_initializer_list241=member_initializer_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, member_initializer_list241.getTree());

                    }
                    break;

            }

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:264:30: ( ',' )?
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==89) ) {
                alt69=1;
            }
            switch (alt69) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:264:30: ','
                    {
                    char_literal242=(Token)match(input,89,FOLLOW_89_in_object_initializer2283); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal242_tree = (Object)adaptor.create(char_literal242);
                    adaptor.addChild(root_0, char_literal242_tree);
                    }

                    }
                    break;

            }

            char_literal243=(Token)match(input,63,FOLLOW_63_in_object_initializer2288); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal243_tree = (Object)adaptor.create(char_literal243);
            adaptor.addChild(root_0, char_literal243_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 61, object_initializer_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "object_initializer"

    public static class member_initializer_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "member_initializer_list"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:265:1: member_initializer_list : member_initializer ( ',' member_initializer ) ;
    public final CSharpParser.member_initializer_list_return member_initializer_list() throws RecognitionException {
        CSharpParser.member_initializer_list_return retval = new CSharpParser.member_initializer_list_return();
        retval.start = input.LT(1);
        int member_initializer_list_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal245=null;
        CSharpParser.member_initializer_return member_initializer244 = null;

        CSharpParser.member_initializer_return member_initializer246 = null;


        Object char_literal245_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 62) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:265:24: ( member_initializer ( ',' member_initializer ) )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:266:3: member_initializer ( ',' member_initializer )
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_member_initializer_in_member_initializer_list2298);
            member_initializer244=member_initializer();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, member_initializer244.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:266:23: ( ',' member_initializer )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:266:24: ',' member_initializer
            {
            char_literal245=(Token)match(input,89,FOLLOW_89_in_member_initializer_list2302); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal245_tree = (Object)adaptor.create(char_literal245);
            adaptor.addChild(root_0, char_literal245_tree);
            }
            pushFollow(FOLLOW_member_initializer_in_member_initializer_list2304);
            member_initializer246=member_initializer();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, member_initializer246.getTree());

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 62, member_initializer_list_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "member_initializer_list"

    public static class member_initializer_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "member_initializer"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:267:1: member_initializer : identifier '=' initializer_value ;
    public final CSharpParser.member_initializer_return member_initializer() throws RecognitionException {
        CSharpParser.member_initializer_return retval = new CSharpParser.member_initializer_return();
        retval.start = input.LT(1);
        int member_initializer_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal248=null;
        CSharpParser.identifier_return identifier247 = null;

        CSharpParser.initializer_value_return initializer_value249 = null;


        Object char_literal248_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 63) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:267:19: ( identifier '=' initializer_value )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:268:3: identifier '=' initializer_value
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_identifier_in_member_initializer2315);
            identifier247=identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier247.getTree());
            char_literal248=(Token)match(input,66,FOLLOW_66_in_member_initializer2319); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal248_tree = (Object)adaptor.create(char_literal248);
            adaptor.addChild(root_0, char_literal248_tree);
            }
            pushFollow(FOLLOW_initializer_value_in_member_initializer2323);
            initializer_value249=initializer_value();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, initializer_value249.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 63, member_initializer_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "member_initializer"

    public static class initializer_value_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "initializer_value"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:269:1: initializer_value : ( expression | object_or_collection_initializer );
    public final CSharpParser.initializer_value_return initializer_value() throws RecognitionException {
        CSharpParser.initializer_value_return retval = new CSharpParser.initializer_value_return();
        retval.start = input.LT(1);
        int initializer_value_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.expression_return expression250 = null;

        CSharpParser.object_or_collection_initializer_return object_or_collection_initializer251 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 64) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:269:18: ( expression | object_or_collection_initializer )
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( ((LA70_0>=IDENTIFIER && LA70_0<=NULL)||LA70_0==MINUS||LA70_0==65||LA70_0==68||LA70_0==83||LA70_0==85||LA70_0==88||(LA70_0>=93 && LA70_0<=98)||LA70_0==100||(LA70_0>=102 && LA70_0<=106)||LA70_0==117||(LA70_0>=132 && LA70_0<=133)||(LA70_0>=135 && LA70_0<=148)||(LA70_0>=150 && LA70_0<=152)||LA70_0==154||(LA70_0>=157 && LA70_0<=168)||LA70_0==170||(LA70_0>=177 && LA70_0<=178)||(LA70_0>=195 && LA70_0<=202)) ) {
                alt70=1;
            }
            else if ( (LA70_0==62) ) {
                alt70=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 70, 0, input);

                throw nvae;
            }
            switch (alt70) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:270:3: expression
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_expression_in_initializer_value2333);
                    expression250=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression250.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:271:5: object_or_collection_initializer
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_object_or_collection_initializer_in_initializer_value2340);
                    object_or_collection_initializer251=object_or_collection_initializer();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, object_or_collection_initializer251.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 64, initializer_value_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "initializer_value"

    public static class typeof_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "typeof_expression"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:275:1: typeof_expression : 'typeof' '(' ( ( unbound_type_name )=> unbound_type_name | type | 'void' ) ')' ;
    public final CSharpParser.typeof_expression_return typeof_expression() throws RecognitionException {
        CSharpParser.typeof_expression_return retval = new CSharpParser.typeof_expression_return();
        retval.start = input.LT(1);
        int typeof_expression_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal252=null;
        Token char_literal253=null;
        Token string_literal256=null;
        Token char_literal257=null;
        CSharpParser.unbound_type_name_return unbound_type_name254 = null;

        CSharpParser.type_return type255 = null;


        Object string_literal252_tree=null;
        Object char_literal253_tree=null;
        Object string_literal256_tree=null;
        Object char_literal257_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 65) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:275:18: ( 'typeof' '(' ( ( unbound_type_name )=> unbound_type_name | type | 'void' ) ')' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:276:3: 'typeof' '(' ( ( unbound_type_name )=> unbound_type_name | type | 'void' ) ')'
            {
            root_0 = (Object)adaptor.nil();

            string_literal252=(Token)match(input,98,FOLLOW_98_in_typeof_expression2353); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal252_tree = (Object)adaptor.create(string_literal252);
            adaptor.addChild(root_0, string_literal252_tree);
            }
            char_literal253=(Token)match(input,88,FOLLOW_88_in_typeof_expression2357); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal253_tree = (Object)adaptor.create(char_literal253);
            adaptor.addChild(root_0, char_literal253_tree);
            }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:276:20: ( ( unbound_type_name )=> unbound_type_name | type | 'void' )
            int alt71=3;
            alt71 = dfa71.predict(input);
            switch (alt71) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:276:21: ( unbound_type_name )=> unbound_type_name
                    {
                    pushFollow(FOLLOW_unbound_type_name_in_typeof_expression2368);
                    unbound_type_name254=unbound_type_name();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, unbound_type_name254.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:277:15: type
                    {
                    pushFollow(FOLLOW_type_in_typeof_expression2384);
                    type255=type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type255.getTree());

                    }
                    break;
                case 3 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:278:15: 'void'
                    {
                    string_literal256=(Token)match(input,82,FOLLOW_82_in_typeof_expression2401); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal256_tree = (Object)adaptor.create(string_literal256);
                    adaptor.addChild(root_0, string_literal256_tree);
                    }

                    }
                    break;

            }

            char_literal257=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_typeof_expression2406); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal257_tree = (Object)adaptor.create(char_literal257);
            adaptor.addChild(root_0, char_literal257_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 65, typeof_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "typeof_expression"

    public static class unbound_type_name_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "unbound_type_name"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:283:1: unbound_type_name : unbound_type_name_start ( ( ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part ) | unbound_type_name_part )* generic_dimension_specifier ;
    public final CSharpParser.unbound_type_name_return unbound_type_name() throws RecognitionException {
        CSharpParser.unbound_type_name_return retval = new CSharpParser.unbound_type_name_return();
        retval.start = input.LT(1);
        int unbound_type_name_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.unbound_type_name_start_return unbound_type_name_start258 = null;

        CSharpParser.generic_dimension_specifier_return generic_dimension_specifier259 = null;

        CSharpParser.unbound_type_name_part_return unbound_type_name_part260 = null;

        CSharpParser.unbound_type_name_part_return unbound_type_name_part261 = null;

        CSharpParser.generic_dimension_specifier_return generic_dimension_specifier262 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 66) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:283:18: ( unbound_type_name_start ( ( ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part ) | unbound_type_name_part )* generic_dimension_specifier )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:285:3: unbound_type_name_start ( ( ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part ) | unbound_type_name_part )* generic_dimension_specifier
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_unbound_type_name_start_in_unbound_type_name2424);
            unbound_type_name_start258=unbound_type_name_start();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, unbound_type_name_start258.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:286:5: ( ( ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part ) | unbound_type_name_part )*
            loop72:
            do {
                int alt72=3;
                alt72 = dfa72.predict(input);
                switch (alt72) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:286:6: ( ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part )
            	    {
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:286:6: ( ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part )
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:286:7: ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part
            	    {
            	    pushFollow(FOLLOW_generic_dimension_specifier_in_unbound_type_name2445);
            	    generic_dimension_specifier259=generic_dimension_specifier();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, generic_dimension_specifier259.getTree());
            	    pushFollow(FOLLOW_unbound_type_name_part_in_unbound_type_name2449);
            	    unbound_type_name_part260=unbound_type_name_part();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, unbound_type_name_part260.getTree());

            	    }


            	    }
            	    break;
            	case 2 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:287:7: unbound_type_name_part
            	    {
            	    pushFollow(FOLLOW_unbound_type_name_part_in_unbound_type_name2458);
            	    unbound_type_name_part261=unbound_type_name_part();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, unbound_type_name_part261.getTree());

            	    }
            	    break;

            	default :
            	    break loop72;
                }
            } while (true);

            pushFollow(FOLLOW_generic_dimension_specifier_in_unbound_type_name2471);
            generic_dimension_specifier262=generic_dimension_specifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, generic_dimension_specifier262.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 66, unbound_type_name_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "unbound_type_name"

    public static class unbound_type_name_start_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "unbound_type_name_start"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:291:1: unbound_type_name_start : identifier ( '::' identifier )? ;
    public final CSharpParser.unbound_type_name_start_return unbound_type_name_start() throws RecognitionException {
        CSharpParser.unbound_type_name_start_return retval = new CSharpParser.unbound_type_name_start_return();
        retval.start = input.LT(1);
        int unbound_type_name_start_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal264=null;
        CSharpParser.identifier_return identifier263 = null;

        CSharpParser.identifier_return identifier265 = null;


        Object string_literal264_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 67) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:291:24: ( identifier ( '::' identifier )? )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:292:3: identifier ( '::' identifier )?
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_identifier_in_unbound_type_name_start2483);
            identifier263=identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier263.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:292:14: ( '::' identifier )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==84) ) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:292:15: '::' identifier
                    {
                    string_literal264=(Token)match(input,84,FOLLOW_84_in_unbound_type_name_start2486); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal264_tree = (Object)adaptor.create(string_literal264);
                    adaptor.addChild(root_0, string_literal264_tree);
                    }
                    pushFollow(FOLLOW_identifier_in_unbound_type_name_start2488);
                    identifier265=identifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier265.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 67, unbound_type_name_start_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "unbound_type_name_start"

    public static class unbound_type_name_part_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "unbound_type_name_part"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:293:1: unbound_type_name_part : '.' identifier ;
    public final CSharpParser.unbound_type_name_part_return unbound_type_name_part() throws RecognitionException {
        CSharpParser.unbound_type_name_part_return retval = new CSharpParser.unbound_type_name_part_return();
        retval.start = input.LT(1);
        int unbound_type_name_part_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal266=null;
        CSharpParser.identifier_return identifier267 = null;


        Object char_literal266_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 68) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:293:23: ( '.' identifier )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:294:3: '.' identifier
            {
            root_0 = (Object)adaptor.nil();

            char_literal266=(Token)match(input,DOT,FOLLOW_DOT_in_unbound_type_name_part2498); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal266_tree = (Object)adaptor.create(char_literal266);
            adaptor.addChild(root_0, char_literal266_tree);
            }
            pushFollow(FOLLOW_identifier_in_unbound_type_name_part2502);
            identifier267=identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier267.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 68, unbound_type_name_part_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "unbound_type_name_part"

    public static class generic_dimension_specifier_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "generic_dimension_specifier"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:295:1: generic_dimension_specifier : '<' ( commas )? '>' ;
    public final CSharpParser.generic_dimension_specifier_return generic_dimension_specifier() throws RecognitionException {
        CSharpParser.generic_dimension_specifier_return retval = new CSharpParser.generic_dimension_specifier_return();
        retval.start = input.LT(1);
        int generic_dimension_specifier_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal268=null;
        Token char_literal270=null;
        CSharpParser.commas_return commas269 = null;


        Object char_literal268_tree=null;
        Object char_literal270_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 69) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:295:28: ( '<' ( commas )? '>' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:296:3: '<' ( commas )? '>'
            {
            root_0 = (Object)adaptor.nil();

            char_literal268=(Token)match(input,99,FOLLOW_99_in_generic_dimension_specifier2511); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal268_tree = (Object)adaptor.create(char_literal268);
            adaptor.addChild(root_0, char_literal268_tree);
            }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:296:9: ( commas )?
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==89) ) {
                alt74=1;
            }
            switch (alt74) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:296:9: commas
                    {
                    pushFollow(FOLLOW_commas_in_generic_dimension_specifier2515);
                    commas269=commas();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, commas269.getTree());

                    }
                    break;

            }

            char_literal270=(Token)match(input,GT,FOLLOW_GT_in_generic_dimension_specifier2520); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal270_tree = (Object)adaptor.create(char_literal270);
            adaptor.addChild(root_0, char_literal270_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 69, generic_dimension_specifier_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "generic_dimension_specifier"

    public static class commas_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "commas"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:297:1: commas : ( ',' )+ ;
    public final CSharpParser.commas_return commas() throws RecognitionException {
        CSharpParser.commas_return retval = new CSharpParser.commas_return();
        retval.start = input.LT(1);
        int commas_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal271=null;

        Object char_literal271_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 70) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:297:7: ( ( ',' )+ )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:298:3: ( ',' )+
            {
            root_0 = (Object)adaptor.nil();

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:298:3: ( ',' )+
            int cnt75=0;
            loop75:
            do {
                int alt75=2;
                int LA75_0 = input.LA(1);

                if ( (LA75_0==89) ) {
                    alt75=1;
                }


                switch (alt75) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:298:3: ','
            	    {
            	    char_literal271=(Token)match(input,89,FOLLOW_89_in_commas2530); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal271_tree = (Object)adaptor.create(char_literal271);
            	    adaptor.addChild(root_0, char_literal271_tree);
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt75 >= 1 ) break loop75;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(75, input);
                        throw eee;
                }
                cnt75++;
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 70, commas_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "commas"

    public static class type_name_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "type_name"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:304:1: type_name : namespace_or_type_name ;
    public final CSharpParser.type_name_return type_name() throws RecognitionException {
        CSharpParser.type_name_return retval = new CSharpParser.type_name_return();
        retval.start = input.LT(1);
        int type_name_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.namespace_or_type_name_return namespace_or_type_name272 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 71) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:304:10: ( namespace_or_type_name )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:305:3: namespace_or_type_name
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_namespace_or_type_name_in_type_name2547);
            namespace_or_type_name272=namespace_or_type_name();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, namespace_or_type_name272.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 71, type_name_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "type_name"

    public static class namespace_or_type_name_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "namespace_or_type_name"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:306:1: namespace_or_type_name : type_or_generic ( '::' type_or_generic )? ( '.' type_or_generic )* ;
    public final CSharpParser.namespace_or_type_name_return namespace_or_type_name() throws RecognitionException {
        CSharpParser.namespace_or_type_name_return retval = new CSharpParser.namespace_or_type_name_return();
        retval.start = input.LT(1);
        int namespace_or_type_name_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal274=null;
        Token char_literal276=null;
        CSharpParser.type_or_generic_return type_or_generic273 = null;

        CSharpParser.type_or_generic_return type_or_generic275 = null;

        CSharpParser.type_or_generic_return type_or_generic277 = null;


        Object string_literal274_tree=null;
        Object char_literal276_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 72) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:306:23: ( type_or_generic ( '::' type_or_generic )? ( '.' type_or_generic )* )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:307:4: type_or_generic ( '::' type_or_generic )? ( '.' type_or_generic )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_type_or_generic_in_namespace_or_type_name2557);
            type_or_generic273=type_or_generic();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type_or_generic273.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:307:22: ( '::' type_or_generic )?
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==84) ) {
                alt76=1;
            }
            switch (alt76) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:307:23: '::' type_or_generic
                    {
                    string_literal274=(Token)match(input,84,FOLLOW_84_in_namespace_or_type_name2562); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal274_tree = (Object)adaptor.create(string_literal274);
                    adaptor.addChild(root_0, string_literal274_tree);
                    }
                    pushFollow(FOLLOW_type_or_generic_in_namespace_or_type_name2564);
                    type_or_generic275=type_or_generic();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_or_generic275.getTree());

                    }
                    break;

            }

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:307:46: ( '.' type_or_generic )*
            loop77:
            do {
                int alt77=2;
                int LA77_0 = input.LA(1);

                if ( (LA77_0==DOT) ) {
                    int LA77_2 = input.LA(2);

                    if ( (LA77_2==IDENTIFIER||LA77_2==65||(LA77_2>=132 && LA77_2<=133)||(LA77_2>=135 && LA77_2<=148)||(LA77_2>=150 && LA77_2<=152)||LA77_2==154||(LA77_2>=157 && LA77_2<=159)||LA77_2==170||(LA77_2>=177 && LA77_2<=178)||LA77_2==195||LA77_2==202) ) {
                        alt77=1;
                    }


                }


                switch (alt77) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:307:47: '.' type_or_generic
            	    {
            	    char_literal276=(Token)match(input,DOT,FOLLOW_DOT_in_namespace_or_type_name2569); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal276_tree = (Object)adaptor.create(char_literal276);
            	    adaptor.addChild(root_0, char_literal276_tree);
            	    }
            	    pushFollow(FOLLOW_type_or_generic_in_namespace_or_type_name2573);
            	    type_or_generic277=type_or_generic();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_or_generic277.getTree());

            	    }
            	    break;

            	default :
            	    break loop77;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 72, namespace_or_type_name_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "namespace_or_type_name"

    public static class type_or_generic_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "type_or_generic"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:308:1: type_or_generic : ( ( identifier '<' )=> identifier generic_argument_list | identifier );
    public final CSharpParser.type_or_generic_return type_or_generic() throws RecognitionException {
        CSharpParser.type_or_generic_return retval = new CSharpParser.type_or_generic_return();
        retval.start = input.LT(1);
        int type_or_generic_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.identifier_return identifier278 = null;

        CSharpParser.generic_argument_list_return generic_argument_list279 = null;

        CSharpParser.identifier_return identifier280 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 73) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:308:16: ( ( identifier '<' )=> identifier generic_argument_list | identifier )
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==IDENTIFIER||LA78_0==65||(LA78_0>=132 && LA78_0<=133)||(LA78_0>=135 && LA78_0<=148)||(LA78_0>=150 && LA78_0<=152)||LA78_0==154||(LA78_0>=157 && LA78_0<=159)||LA78_0==170||(LA78_0>=177 && LA78_0<=178)||LA78_0==195||LA78_0==202) ) {
                int LA78_1 = input.LA(2);

                if ( (synpred15_cs()) ) {
                    alt78=1;
                }
                else if ( (true) ) {
                    alt78=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 78, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 78, 0, input);

                throw nvae;
            }
            switch (alt78) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:309:3: ( identifier '<' )=> identifier generic_argument_list
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_identifier_in_type_or_generic2594);
                    identifier278=identifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier278.getTree());
                    pushFollow(FOLLOW_generic_argument_list_in_type_or_generic2598);
                    generic_argument_list279=generic_argument_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, generic_argument_list279.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:310:5: identifier
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_identifier_in_type_or_generic2604);
                    identifier280=identifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier280.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 73, type_or_generic_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "type_or_generic"

    public static class qid_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "qid"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:312:1: qid : qid_start ( qid_part )* ;
    public final CSharpParser.qid_return qid() throws RecognitionException {
        CSharpParser.qid_return retval = new CSharpParser.qid_return();
        retval.start = input.LT(1);
        int qid_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.qid_start_return qid_start281 = null;

        CSharpParser.qid_part_return qid_part282 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 74) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:312:4: ( qid_start ( qid_part )* )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:313:3: qid_start ( qid_part )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_qid_start_in_qid2618);
            qid_start281=qid_start();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, qid_start281.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:313:15: ( qid_part )*
            loop79:
            do {
                int alt79=2;
                int LA79_0 = input.LA(1);

                if ( (LA79_0==DOT) ) {
                    int LA79_2 = input.LA(2);

                    if ( (LA79_2==IDENTIFIER||LA79_2==65||(LA79_2>=132 && LA79_2<=133)||(LA79_2>=135 && LA79_2<=148)||(LA79_2>=150 && LA79_2<=152)||LA79_2==154||(LA79_2>=157 && LA79_2<=159)||LA79_2==170||(LA79_2>=177 && LA79_2<=178)||LA79_2==195||LA79_2==202) ) {
                        alt79=1;
                    }


                }
                else if ( (LA79_0==PTR) ) {
                    alt79=1;
                }


                switch (alt79) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:313:15: qid_part
            	    {
            	    pushFollow(FOLLOW_qid_part_in_qid2622);
            	    qid_part282=qid_part();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, qid_part282.getTree());

            	    }
            	    break;

            	default :
            	    break loop79;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 74, qid_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "qid"

    public static class qid_start_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "qid_start"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:315:1: qid_start : ( predefined_type | ( identifier '<' )=> identifier generic_argument_list | identifier ( '::' identifier )? | literal );
    public final CSharpParser.qid_start_return qid_start() throws RecognitionException {
        CSharpParser.qid_start_return retval = new CSharpParser.qid_start_return();
        retval.start = input.LT(1);
        int qid_start_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal287=null;
        CSharpParser.predefined_type_return predefined_type283 = null;

        CSharpParser.identifier_return identifier284 = null;

        CSharpParser.generic_argument_list_return generic_argument_list285 = null;

        CSharpParser.identifier_return identifier286 = null;

        CSharpParser.identifier_return identifier288 = null;

        CSharpParser.literal_return literal289 = null;


        Object string_literal287_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 75) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:315:10: ( predefined_type | ( identifier '<' )=> identifier generic_argument_list | identifier ( '::' identifier )? | literal )
            int alt81=4;
            switch ( input.LA(1) ) {
            case 160:
            case 161:
            case 162:
            case 163:
            case 164:
            case 165:
            case 166:
            case 167:
            case 168:
            case 196:
            case 197:
            case 198:
            case 199:
            case 200:
            case 201:
                {
                alt81=1;
                }
                break;
            case IDENTIFIER:
            case 65:
            case 132:
            case 133:
            case 135:
            case 136:
            case 137:
            case 138:
            case 139:
            case 140:
            case 141:
            case 142:
            case 143:
            case 144:
            case 145:
            case 146:
            case 147:
            case 148:
            case 150:
            case 151:
            case 152:
            case 154:
            case 157:
            case 158:
            case 159:
            case 170:
            case 177:
            case 178:
            case 195:
            case 202:
                {
                int LA81_2 = input.LA(2);

                if ( (LA81_2==99) && (synpred16_cs())) {
                    alt81=2;
                }
                else if ( ((LA81_2>=DOT && LA81_2<=PTR)||LA81_2==62||LA81_2==84||LA81_2==88) ) {
                    alt81=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 81, 2, input);

                    throw nvae;
                }
                }
                break;
            case Real_literal:
            case NUMBER:
            case Hex_number:
            case Character_literal:
            case STRINGLITERAL:
            case Verbatim_string_literal:
            case TRUE:
            case FALSE:
            case NULL:
                {
                alt81=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 81, 0, input);

                throw nvae;
            }

            switch (alt81) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:316:3: predefined_type
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_predefined_type_in_qid_start2634);
                    predefined_type283=predefined_type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, predefined_type283.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:317:5: ( identifier '<' )=> identifier generic_argument_list
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_identifier_in_qid_start2651);
                    identifier284=identifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier284.getTree());
                    pushFollow(FOLLOW_generic_argument_list_in_qid_start2655);
                    generic_argument_list285=generic_argument_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, generic_argument_list285.getTree());

                    }
                    break;
                case 3 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:320:5: identifier ( '::' identifier )?
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_identifier_in_qid_start2663);
                    identifier286=identifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier286.getTree());
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:320:18: ( '::' identifier )?
                    int alt80=2;
                    int LA80_0 = input.LA(1);

                    if ( (LA80_0==84) ) {
                        alt80=1;
                    }
                    switch (alt80) {
                        case 1 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:320:19: '::' identifier
                            {
                            string_literal287=(Token)match(input,84,FOLLOW_84_in_qid_start2668); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            string_literal287_tree = (Object)adaptor.create(string_literal287);
                            adaptor.addChild(root_0, string_literal287_tree);
                            }
                            pushFollow(FOLLOW_identifier_in_qid_start2672);
                            identifier288=identifier();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier288.getTree());

                            }
                            break;

                    }


                    }
                    break;
                case 4 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:321:5: literal
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_literal_in_qid_start2680);
                    literal289=literal();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, literal289.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 75, qid_start_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "qid_start"

    public static class qid_part_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "qid_part"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:325:1: qid_part : access_identifier ;
    public final CSharpParser.qid_part_return qid_part() throws RecognitionException {
        CSharpParser.qid_part_return retval = new CSharpParser.qid_part_return();
        retval.start = input.LT(1);
        int qid_part_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.access_identifier_return access_identifier290 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 76) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:325:9: ( access_identifier )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:326:3: access_identifier
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_access_identifier_in_qid_part2697);
            access_identifier290=access_identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, access_identifier290.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 76, qid_part_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "qid_part"

    public static class generic_argument_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "generic_argument_list"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:328:1: generic_argument_list : '<' type_arguments '>' ;
    public final CSharpParser.generic_argument_list_return generic_argument_list() throws RecognitionException {
        CSharpParser.generic_argument_list_return retval = new CSharpParser.generic_argument_list_return();
        retval.start = input.LT(1);
        int generic_argument_list_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal291=null;
        Token char_literal293=null;
        CSharpParser.type_arguments_return type_arguments292 = null;


        Object char_literal291_tree=null;
        Object char_literal293_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 77) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:328:22: ( '<' type_arguments '>' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:329:3: '<' type_arguments '>'
            {
            root_0 = (Object)adaptor.nil();

            char_literal291=(Token)match(input,99,FOLLOW_99_in_generic_argument_list2708); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal291_tree = (Object)adaptor.create(char_literal291);
            adaptor.addChild(root_0, char_literal291_tree);
            }
            pushFollow(FOLLOW_type_arguments_in_generic_argument_list2712);
            type_arguments292=type_arguments();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type_arguments292.getTree());
            char_literal293=(Token)match(input,GT,FOLLOW_GT_in_generic_argument_list2716); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal293_tree = (Object)adaptor.create(char_literal293);
            adaptor.addChild(root_0, char_literal293_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 77, generic_argument_list_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "generic_argument_list"

    public static class type_arguments_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "type_arguments"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:330:1: type_arguments : type ( ',' type )* ;
    public final CSharpParser.type_arguments_return type_arguments() throws RecognitionException {
        CSharpParser.type_arguments_return retval = new CSharpParser.type_arguments_return();
        retval.start = input.LT(1);
        int type_arguments_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal295=null;
        CSharpParser.type_return type294 = null;

        CSharpParser.type_return type296 = null;


        Object char_literal295_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 78) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:330:15: ( type ( ',' type )* )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:331:3: type ( ',' type )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_type_in_type_arguments2726);
            type294=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type294.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:331:8: ( ',' type )*
            loop82:
            do {
                int alt82=2;
                int LA82_0 = input.LA(1);

                if ( (LA82_0==89) ) {
                    alt82=1;
                }


                switch (alt82) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:331:9: ',' type
            	    {
            	    char_literal295=(Token)match(input,89,FOLLOW_89_in_type_arguments2729); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal295_tree = (Object)adaptor.create(char_literal295);
            	    adaptor.addChild(root_0, char_literal295_tree);
            	    }
            	    pushFollow(FOLLOW_type_in_type_arguments2731);
            	    type296=type();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, type296.getTree());

            	    }
            	    break;

            	default :
            	    break loop82;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 78, type_arguments_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "type_arguments"

    public static class type_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "type"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:333:1: type : ( ( ( predefined_type | type_name ) rank_specifiers )=> ( predefined_type | type_name ) rank_specifiers ( '*' )* | ( ( predefined_type | type_name ) ( ( '*' )+ | '?' ) )=> ( predefined_type | type_name ) ( ( '*' )+ | '?' ) | ( predefined_type | type_name ) | 'void' ( '*' )+ );
    public final CSharpParser.type_return type() throws RecognitionException {
        CSharpParser.type_return retval = new CSharpParser.type_return();
        retval.start = input.LT(1);
        int type_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal300=null;
        Token char_literal303=null;
        Token char_literal304=null;
        Token string_literal307=null;
        Token char_literal308=null;
        CSharpParser.predefined_type_return predefined_type297 = null;

        CSharpParser.type_name_return type_name298 = null;

        CSharpParser.rank_specifiers_return rank_specifiers299 = null;

        CSharpParser.predefined_type_return predefined_type301 = null;

        CSharpParser.type_name_return type_name302 = null;

        CSharpParser.predefined_type_return predefined_type305 = null;

        CSharpParser.type_name_return type_name306 = null;


        Object char_literal300_tree=null;
        Object char_literal303_tree=null;
        Object char_literal304_tree=null;
        Object string_literal307_tree=null;
        Object char_literal308_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 79) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:333:5: ( ( ( predefined_type | type_name ) rank_specifiers )=> ( predefined_type | type_name ) rank_specifiers ( '*' )* | ( ( predefined_type | type_name ) ( ( '*' )+ | '?' ) )=> ( predefined_type | type_name ) ( ( '*' )+ | '?' ) | ( predefined_type | type_name ) | 'void' ( '*' )+ )
            int alt90=4;
            switch ( input.LA(1) ) {
            case 160:
            case 161:
            case 162:
            case 163:
            case 164:
            case 165:
            case 166:
            case 167:
            case 168:
            case 196:
            case 197:
            case 198:
            case 199:
            case 200:
            case 201:
                {
                int LA90_1 = input.LA(2);

                if ( (synpred17_cs()) ) {
                    alt90=1;
                }
                else if ( (synpred18_cs()) ) {
                    alt90=2;
                }
                else if ( (true) ) {
                    alt90=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 90, 1, input);

                    throw nvae;
                }
                }
                break;
            case IDENTIFIER:
            case 65:
            case 132:
            case 133:
            case 135:
            case 136:
            case 137:
            case 138:
            case 139:
            case 140:
            case 141:
            case 142:
            case 143:
            case 144:
            case 145:
            case 146:
            case 147:
            case 148:
            case 150:
            case 151:
            case 152:
            case 154:
            case 157:
            case 158:
            case 159:
            case 170:
            case 177:
            case 178:
            case 195:
            case 202:
                {
                int LA90_2 = input.LA(2);

                if ( (synpred17_cs()) ) {
                    alt90=1;
                }
                else if ( (synpred18_cs()) ) {
                    alt90=2;
                }
                else if ( (true) ) {
                    alt90=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 90, 2, input);

                    throw nvae;
                }
                }
                break;
            case 82:
                {
                alt90=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 90, 0, input);

                throw nvae;
            }

            switch (alt90) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:334:5: ( ( predefined_type | type_name ) rank_specifiers )=> ( predefined_type | type_name ) rank_specifiers ( '*' )*
                    {
                    root_0 = (Object)adaptor.nil();

                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:334:57: ( predefined_type | type_name )
                    int alt83=2;
                    int LA83_0 = input.LA(1);

                    if ( ((LA83_0>=160 && LA83_0<=168)||(LA83_0>=196 && LA83_0<=201)) ) {
                        alt83=1;
                    }
                    else if ( (LA83_0==IDENTIFIER||LA83_0==65||(LA83_0>=132 && LA83_0<=133)||(LA83_0>=135 && LA83_0<=148)||(LA83_0>=150 && LA83_0<=152)||LA83_0==154||(LA83_0>=157 && LA83_0<=159)||LA83_0==170||(LA83_0>=177 && LA83_0<=178)||LA83_0==195||LA83_0==202) ) {
                        alt83=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 83, 0, input);

                        throw nvae;
                    }
                    switch (alt83) {
                        case 1 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:334:58: predefined_type
                            {
                            pushFollow(FOLLOW_predefined_type_in_type2761);
                            predefined_type297=predefined_type();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, predefined_type297.getTree());

                            }
                            break;
                        case 2 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:334:76: type_name
                            {
                            pushFollow(FOLLOW_type_name_in_type2765);
                            type_name298=type_name();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, type_name298.getTree());

                            }
                            break;

                    }

                    pushFollow(FOLLOW_rank_specifiers_in_type2770);
                    rank_specifiers299=rank_specifiers();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, rank_specifiers299.getTree());
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:334:107: ( '*' )*
                    loop84:
                    do {
                        int alt84=2;
                        int LA84_0 = input.LA(1);

                        if ( (LA84_0==100) ) {
                            alt84=1;
                        }


                        switch (alt84) {
                    	case 1 :
                    	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:334:107: '*'
                    	    {
                    	    char_literal300=(Token)match(input,100,FOLLOW_100_in_type2774); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    char_literal300_tree = (Object)adaptor.create(char_literal300);
                    	    adaptor.addChild(root_0, char_literal300_tree);
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop84;
                        }
                    } while (true);


                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:335:5: ( ( predefined_type | type_name ) ( ( '*' )+ | '?' ) )=> ( predefined_type | type_name ) ( ( '*' )+ | '?' )
                    {
                    root_0 = (Object)adaptor.nil();

                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:335:54: ( predefined_type | type_name )
                    int alt85=2;
                    int LA85_0 = input.LA(1);

                    if ( ((LA85_0>=160 && LA85_0<=168)||(LA85_0>=196 && LA85_0<=201)) ) {
                        alt85=1;
                    }
                    else if ( (LA85_0==IDENTIFIER||LA85_0==65||(LA85_0>=132 && LA85_0<=133)||(LA85_0>=135 && LA85_0<=148)||(LA85_0>=150 && LA85_0<=152)||LA85_0==154||(LA85_0>=157 && LA85_0<=159)||LA85_0==170||(LA85_0>=177 && LA85_0<=178)||LA85_0==195||LA85_0==202) ) {
                        alt85=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 85, 0, input);

                        throw nvae;
                    }
                    switch (alt85) {
                        case 1 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:335:55: predefined_type
                            {
                            pushFollow(FOLLOW_predefined_type_in_type2804);
                            predefined_type301=predefined_type();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, predefined_type301.getTree());

                            }
                            break;
                        case 2 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:335:73: type_name
                            {
                            pushFollow(FOLLOW_type_name_in_type2808);
                            type_name302=type_name();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, type_name302.getTree());

                            }
                            break;

                    }

                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:335:86: ( ( '*' )+ | '?' )
                    int alt87=2;
                    int LA87_0 = input.LA(1);

                    if ( (LA87_0==100) ) {
                        alt87=1;
                    }
                    else if ( (LA87_0==101) ) {
                        alt87=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 87, 0, input);

                        throw nvae;
                    }
                    switch (alt87) {
                        case 1 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:335:87: ( '*' )+
                            {
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:335:87: ( '*' )+
                            int cnt86=0;
                            loop86:
                            do {
                                int alt86=2;
                                int LA86_0 = input.LA(1);

                                if ( (LA86_0==100) ) {
                                    alt86=1;
                                }


                                switch (alt86) {
                            	case 1 :
                            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:335:87: '*'
                            	    {
                            	    char_literal303=(Token)match(input,100,FOLLOW_100_in_type2814); if (state.failed) return retval;
                            	    if ( state.backtracking==0 ) {
                            	    char_literal303_tree = (Object)adaptor.create(char_literal303);
                            	    adaptor.addChild(root_0, char_literal303_tree);
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    if ( cnt86 >= 1 ) break loop86;
                            	    if (state.backtracking>0) {state.failed=true; return retval;}
                                        EarlyExitException eee =
                                            new EarlyExitException(86, input);
                                        throw eee;
                                }
                                cnt86++;
                            } while (true);


                            }
                            break;
                        case 2 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:335:94: '?'
                            {
                            char_literal304=(Token)match(input,101,FOLLOW_101_in_type2819); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            char_literal304_tree = (Object)adaptor.create(char_literal304);
                            adaptor.addChild(root_0, char_literal304_tree);
                            }

                            }
                            break;

                    }


                    }
                    break;
                case 3 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:336:5: ( predefined_type | type_name )
                    {
                    root_0 = (Object)adaptor.nil();

                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:336:5: ( predefined_type | type_name )
                    int alt88=2;
                    int LA88_0 = input.LA(1);

                    if ( ((LA88_0>=160 && LA88_0<=168)||(LA88_0>=196 && LA88_0<=201)) ) {
                        alt88=1;
                    }
                    else if ( (LA88_0==IDENTIFIER||LA88_0==65||(LA88_0>=132 && LA88_0<=133)||(LA88_0>=135 && LA88_0<=148)||(LA88_0>=150 && LA88_0<=152)||LA88_0==154||(LA88_0>=157 && LA88_0<=159)||LA88_0==170||(LA88_0>=177 && LA88_0<=178)||LA88_0==195||LA88_0==202) ) {
                        alt88=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 88, 0, input);

                        throw nvae;
                    }
                    switch (alt88) {
                        case 1 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:336:6: predefined_type
                            {
                            pushFollow(FOLLOW_predefined_type_in_type2827);
                            predefined_type305=predefined_type();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, predefined_type305.getTree());

                            }
                            break;
                        case 2 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:336:24: type_name
                            {
                            pushFollow(FOLLOW_type_name_in_type2831);
                            type_name306=type_name();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, type_name306.getTree());

                            }
                            break;

                    }


                    }
                    break;
                case 4 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:337:5: 'void' ( '*' )+
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal307=(Token)match(input,82,FOLLOW_82_in_type2838); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal307_tree = (Object)adaptor.create(string_literal307);
                    adaptor.addChild(root_0, string_literal307_tree);
                    }
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:337:12: ( '*' )+
                    int cnt89=0;
                    loop89:
                    do {
                        int alt89=2;
                        int LA89_0 = input.LA(1);

                        if ( (LA89_0==100) ) {
                            alt89=1;
                        }


                        switch (alt89) {
                    	case 1 :
                    	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:337:12: '*'
                    	    {
                    	    char_literal308=(Token)match(input,100,FOLLOW_100_in_type2840); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    char_literal308_tree = (Object)adaptor.create(char_literal308);
                    	    adaptor.addChild(root_0, char_literal308_tree);
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt89 >= 1 ) break loop89;
                    	    if (state.backtracking>0) {state.failed=true; return retval;}
                                EarlyExitException eee =
                                    new EarlyExitException(89, input);
                                throw eee;
                        }
                        cnt89++;
                    } while (true);


                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 79, type_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "type"

    public static class non_nullable_type_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "non_nullable_type"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:339:1: non_nullable_type : ( ( predefined_type | type_name ) ( rank_specifiers ( '*' )* | ( ( '*' )+ )? ) | 'void' ( '*' )+ );
    public final CSharpParser.non_nullable_type_return non_nullable_type() throws RecognitionException {
        CSharpParser.non_nullable_type_return retval = new CSharpParser.non_nullable_type_return();
        retval.start = input.LT(1);
        int non_nullable_type_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal312=null;
        Token char_literal313=null;
        Token string_literal314=null;
        Token char_literal315=null;
        CSharpParser.predefined_type_return predefined_type309 = null;

        CSharpParser.type_name_return type_name310 = null;

        CSharpParser.rank_specifiers_return rank_specifiers311 = null;


        Object char_literal312_tree=null;
        Object char_literal313_tree=null;
        Object string_literal314_tree=null;
        Object char_literal315_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 80) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:339:18: ( ( predefined_type | type_name ) ( rank_specifiers ( '*' )* | ( ( '*' )+ )? ) | 'void' ( '*' )+ )
            int alt97=2;
            int LA97_0 = input.LA(1);

            if ( (LA97_0==IDENTIFIER||LA97_0==65||(LA97_0>=132 && LA97_0<=133)||(LA97_0>=135 && LA97_0<=148)||(LA97_0>=150 && LA97_0<=152)||LA97_0==154||(LA97_0>=157 && LA97_0<=168)||LA97_0==170||(LA97_0>=177 && LA97_0<=178)||(LA97_0>=195 && LA97_0<=202)) ) {
                alt97=1;
            }
            else if ( (LA97_0==82) ) {
                alt97=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 97, 0, input);

                throw nvae;
            }
            switch (alt97) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:340:3: ( predefined_type | type_name ) ( rank_specifiers ( '*' )* | ( ( '*' )+ )? )
                    {
                    root_0 = (Object)adaptor.nil();

                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:340:3: ( predefined_type | type_name )
                    int alt91=2;
                    int LA91_0 = input.LA(1);

                    if ( ((LA91_0>=160 && LA91_0<=168)||(LA91_0>=196 && LA91_0<=201)) ) {
                        alt91=1;
                    }
                    else if ( (LA91_0==IDENTIFIER||LA91_0==65||(LA91_0>=132 && LA91_0<=133)||(LA91_0>=135 && LA91_0<=148)||(LA91_0>=150 && LA91_0<=152)||LA91_0==154||(LA91_0>=157 && LA91_0<=159)||LA91_0==170||(LA91_0>=177 && LA91_0<=178)||LA91_0==195||LA91_0==202) ) {
                        alt91=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 91, 0, input);

                        throw nvae;
                    }
                    switch (alt91) {
                        case 1 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:340:4: predefined_type
                            {
                            pushFollow(FOLLOW_predefined_type_in_non_nullable_type2853);
                            predefined_type309=predefined_type();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, predefined_type309.getTree());

                            }
                            break;
                        case 2 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:340:22: type_name
                            {
                            pushFollow(FOLLOW_type_name_in_non_nullable_type2857);
                            type_name310=type_name();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, type_name310.getTree());

                            }
                            break;

                    }

                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:341:5: ( rank_specifiers ( '*' )* | ( ( '*' )+ )? )
                    int alt95=2;
                    int LA95_0 = input.LA(1);

                    if ( (LA95_0==86) ) {
                        alt95=1;
                    }
                    else if ( (LA95_0==EOF||LA95_0==IDENTIFIER||LA95_0==GT||(LA95_0>=SEMI && LA95_0<=RPAREN)||LA95_0==63||LA95_0==65||LA95_0==87||(LA95_0>=89 && LA95_0<=90)||(LA95_0>=99 && LA95_0<=101)||(LA95_0>=116 && LA95_0<=117)||(LA95_0>=121 && LA95_0<=130)||(LA95_0>=132 && LA95_0<=133)||(LA95_0>=135 && LA95_0<=148)||(LA95_0>=150 && LA95_0<=152)||LA95_0==154||(LA95_0>=157 && LA95_0<=159)||LA95_0==170||(LA95_0>=177 && LA95_0<=178)||LA95_0==195||LA95_0==202) ) {
                        alt95=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 95, 0, input);

                        throw nvae;
                    }
                    switch (alt95) {
                        case 1 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:341:9: rank_specifiers ( '*' )*
                            {
                            pushFollow(FOLLOW_rank_specifiers_in_non_nullable_type2868);
                            rank_specifiers311=rank_specifiers();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, rank_specifiers311.getTree());
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:341:27: ( '*' )*
                            loop92:
                            do {
                                int alt92=2;
                                int LA92_0 = input.LA(1);

                                if ( (LA92_0==100) ) {
                                    alt92=1;
                                }


                                switch (alt92) {
                            	case 1 :
                            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:341:27: '*'
                            	    {
                            	    char_literal312=(Token)match(input,100,FOLLOW_100_in_non_nullable_type2872); if (state.failed) return retval;
                            	    if ( state.backtracking==0 ) {
                            	    char_literal312_tree = (Object)adaptor.create(char_literal312);
                            	    adaptor.addChild(root_0, char_literal312_tree);
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    break loop92;
                                }
                            } while (true);


                            }
                            break;
                        case 2 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:342:9: ( ( '*' )+ )?
                            {
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:342:9: ( ( '*' )+ )?
                            int alt94=2;
                            int LA94_0 = input.LA(1);

                            if ( (LA94_0==100) ) {
                                alt94=1;
                            }
                            switch (alt94) {
                                case 1 :
                                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:342:10: ( '*' )+
                                    {
                                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:342:10: ( '*' )+
                                    int cnt93=0;
                                    loop93:
                                    do {
                                        int alt93=2;
                                        int LA93_0 = input.LA(1);

                                        if ( (LA93_0==100) ) {
                                            alt93=1;
                                        }


                                        switch (alt93) {
                                    	case 1 :
                                    	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:342:10: '*'
                                    	    {
                                    	    char_literal313=(Token)match(input,100,FOLLOW_100_in_non_nullable_type2884); if (state.failed) return retval;
                                    	    if ( state.backtracking==0 ) {
                                    	    char_literal313_tree = (Object)adaptor.create(char_literal313);
                                    	    adaptor.addChild(root_0, char_literal313_tree);
                                    	    }

                                    	    }
                                    	    break;

                                    	default :
                                    	    if ( cnt93 >= 1 ) break loop93;
                                    	    if (state.backtracking>0) {state.failed=true; return retval;}
                                                EarlyExitException eee =
                                                    new EarlyExitException(93, input);
                                                throw eee;
                                        }
                                        cnt93++;
                                    } while (true);


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:344:5: 'void' ( '*' )+
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal314=(Token)match(input,82,FOLLOW_82_in_non_nullable_type2899); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal314_tree = (Object)adaptor.create(string_literal314);
                    adaptor.addChild(root_0, string_literal314_tree);
                    }
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:344:14: ( '*' )+
                    int cnt96=0;
                    loop96:
                    do {
                        int alt96=2;
                        int LA96_0 = input.LA(1);

                        if ( (LA96_0==100) ) {
                            alt96=1;
                        }


                        switch (alt96) {
                    	case 1 :
                    	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:344:14: '*'
                    	    {
                    	    char_literal315=(Token)match(input,100,FOLLOW_100_in_non_nullable_type2903); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    char_literal315_tree = (Object)adaptor.create(char_literal315);
                    	    adaptor.addChild(root_0, char_literal315_tree);
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt96 >= 1 ) break loop96;
                    	    if (state.backtracking>0) {state.failed=true; return retval;}
                                EarlyExitException eee =
                                    new EarlyExitException(96, input);
                                throw eee;
                        }
                        cnt96++;
                    } while (true);


                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 80, non_nullable_type_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "non_nullable_type"

    public static class non_array_type_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "non_array_type"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:346:1: non_array_type : type ;
    public final CSharpParser.non_array_type_return non_array_type() throws RecognitionException {
        CSharpParser.non_array_type_return retval = new CSharpParser.non_array_type_return();
        retval.start = input.LT(1);
        int non_array_type_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.type_return type316 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 81) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:346:15: ( type )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:347:3: type
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_type_in_non_array_type2916);
            type316=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type316.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 81, non_array_type_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "non_array_type"

    public static class array_type_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "array_type"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:348:1: array_type : type ;
    public final CSharpParser.array_type_return array_type() throws RecognitionException {
        CSharpParser.array_type_return retval = new CSharpParser.array_type_return();
        retval.start = input.LT(1);
        int array_type_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.type_return type317 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 82) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:348:11: ( type )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:349:3: type
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_type_in_array_type2924);
            type317=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type317.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 82, array_type_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "array_type"

    public static class unmanaged_type_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "unmanaged_type"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:350:1: unmanaged_type : type ;
    public final CSharpParser.unmanaged_type_return unmanaged_type() throws RecognitionException {
        CSharpParser.unmanaged_type_return retval = new CSharpParser.unmanaged_type_return();
        retval.start = input.LT(1);
        int unmanaged_type_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.type_return type318 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 83) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:350:15: ( type )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:351:3: type
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_type_in_unmanaged_type2932);
            type318=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type318.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 83, unmanaged_type_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "unmanaged_type"

    public static class class_type_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "class_type"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:352:1: class_type : type ;
    public final CSharpParser.class_type_return class_type() throws RecognitionException {
        CSharpParser.class_type_return retval = new CSharpParser.class_type_return();
        retval.start = input.LT(1);
        int class_type_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.type_return type319 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 84) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:352:11: ( type )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:353:3: type
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_type_in_class_type2940);
            type319=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type319.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 84, class_type_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "class_type"

    public static class pointer_type_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "pointer_type"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:354:1: pointer_type : type ;
    public final CSharpParser.pointer_type_return pointer_type() throws RecognitionException {
        CSharpParser.pointer_type_return retval = new CSharpParser.pointer_type_return();
        retval.start = input.LT(1);
        int pointer_type_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.type_return type320 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 85) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:354:13: ( type )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:355:3: type
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_type_in_pointer_type2948);
            type320=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type320.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 85, pointer_type_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "pointer_type"

    public static class block_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "block"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:361:1: block : ( ';' | '{' ( statement_list )? '}' );
    public final CSharpParser.block_return block() throws RecognitionException {
        CSharpParser.block_return retval = new CSharpParser.block_return();
        retval.start = input.LT(1);
        int block_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal321=null;
        Token char_literal322=null;
        Token char_literal324=null;
        CSharpParser.statement_list_return statement_list323 = null;


        Object char_literal321_tree=null;
        Object char_literal322_tree=null;
        Object char_literal324_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 86) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:361:6: ( ';' | '{' ( statement_list )? '}' )
            int alt99=2;
            int LA99_0 = input.LA(1);

            if ( (LA99_0==SEMI) ) {
                alt99=1;
            }
            else if ( (LA99_0==62) ) {
                alt99=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 99, 0, input);

                throw nvae;
            }
            switch (alt99) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:362:3: ';'
                    {
                    root_0 = (Object)adaptor.nil();

                    char_literal321=(Token)match(input,SEMI,FOLLOW_SEMI_in_block2961); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal321_tree = (Object)adaptor.create(char_literal321);
                    adaptor.addChild(root_0, char_literal321_tree);
                    }

                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:363:5: '{' ( statement_list )? '}'
                    {
                    root_0 = (Object)adaptor.nil();

                    char_literal322=(Token)match(input,62,FOLLOW_62_in_block2967); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal322_tree = (Object)adaptor.create(char_literal322);
                    adaptor.addChild(root_0, char_literal322_tree);
                    }
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:363:11: ( statement_list )?
                    int alt98=2;
                    int LA98_0 = input.LA(1);

                    if ( ((LA98_0>=IDENTIFIER && LA98_0<=NULL)||LA98_0==MINUS||LA98_0==USING||LA98_0==IF||LA98_0==SEMI||LA98_0==62||LA98_0==65||LA98_0==68||LA98_0==73||(LA98_0>=81 && LA98_0<=83)||LA98_0==85||LA98_0==88||(LA98_0>=93 && LA98_0<=98)||LA98_0==100||(LA98_0>=102 && LA98_0<=106)||LA98_0==117||(LA98_0>=132 && LA98_0<=133)||(LA98_0>=135 && LA98_0<=148)||(LA98_0>=150 && LA98_0<=154)||(LA98_0>=157 && LA98_0<=168)||LA98_0==170||(LA98_0>=176 && LA98_0<=178)||LA98_0==181||(LA98_0>=183 && LA98_0<=191)||(LA98_0>=194 && LA98_0<=202)) ) {
                        alt98=1;
                    }
                    switch (alt98) {
                        case 1 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:363:11: statement_list
                            {
                            pushFollow(FOLLOW_statement_list_in_block2971);
                            statement_list323=statement_list();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, statement_list323.getTree());

                            }
                            break;

                    }

                    char_literal324=(Token)match(input,63,FOLLOW_63_in_block2976); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal324_tree = (Object)adaptor.create(char_literal324);
                    adaptor.addChild(root_0, char_literal324_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 86, block_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "block"

    public static class statement_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "statement_list"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:364:1: statement_list : ( statement )+ ;
    public final CSharpParser.statement_list_return statement_list() throws RecognitionException {
        CSharpParser.statement_list_return retval = new CSharpParser.statement_list_return();
        retval.start = input.LT(1);
        int statement_list_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.statement_return statement325 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 87) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:364:15: ( ( statement )+ )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:365:3: ( statement )+
            {
            root_0 = (Object)adaptor.nil();

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:365:3: ( statement )+
            int cnt100=0;
            loop100:
            do {
                int alt100=2;
                int LA100_0 = input.LA(1);

                if ( (LA100_0==96) ) {
                    int LA100_2 = input.LA(2);

                    if ( (LA100_2==88) ) {
                        alt100=1;
                    }


                }
                else if ( ((LA100_0>=IDENTIFIER && LA100_0<=NULL)||LA100_0==MINUS||LA100_0==USING||LA100_0==IF||LA100_0==SEMI||LA100_0==62||LA100_0==65||LA100_0==68||LA100_0==73||(LA100_0>=81 && LA100_0<=83)||LA100_0==85||LA100_0==88||(LA100_0>=93 && LA100_0<=95)||(LA100_0>=97 && LA100_0<=98)||LA100_0==100||(LA100_0>=102 && LA100_0<=106)||LA100_0==117||(LA100_0>=132 && LA100_0<=133)||(LA100_0>=135 && LA100_0<=148)||(LA100_0>=150 && LA100_0<=154)||(LA100_0>=157 && LA100_0<=168)||LA100_0==170||(LA100_0>=176 && LA100_0<=178)||LA100_0==181||(LA100_0>=183 && LA100_0<=191)||(LA100_0>=194 && LA100_0<=202)) ) {
                    alt100=1;
                }


                switch (alt100) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:365:3: statement
            	    {
            	    pushFollow(FOLLOW_statement_in_statement_list2984);
            	    statement325=statement();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, statement325.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt100 >= 1 ) break loop100;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(100, input);
                        throw eee;
                }
                cnt100++;
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 87, statement_list_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "statement_list"

    public static class expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "expression"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:370:1: expression : ( ( unary_expression assignment_operator )=> assignment | non_assignment_expression );
    public final CSharpParser.expression_return expression() throws RecognitionException {
        CSharpParser.expression_return retval = new CSharpParser.expression_return();
        retval.start = input.LT(1);
        int expression_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.assignment_return assignment326 = null;

        CSharpParser.non_assignment_expression_return non_assignment_expression327 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 88) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:370:11: ( ( unary_expression assignment_operator )=> assignment | non_assignment_expression )
            int alt101=2;
            alt101 = dfa101.predict(input);
            switch (alt101) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:371:3: ( unary_expression assignment_operator )=> assignment
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_assignment_in_expression3011);
                    assignment326=assignment();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, assignment326.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:372:5: non_assignment_expression
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_non_assignment_expression_in_expression3019);
                    non_assignment_expression327=non_assignment_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, non_assignment_expression327.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 88, expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "expression"

    public static class expression_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "expression_list"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:374:1: expression_list : expression ( ',' expression )* ;
    public final CSharpParser.expression_list_return expression_list() throws RecognitionException {
        CSharpParser.expression_list_return retval = new CSharpParser.expression_list_return();
        retval.start = input.LT(1);
        int expression_list_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal329=null;
        CSharpParser.expression_return expression328 = null;

        CSharpParser.expression_return expression330 = null;


        Object char_literal329_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 89) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:374:16: ( expression ( ',' expression )* )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:375:3: expression ( ',' expression )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_expression_in_expression_list3030);
            expression328=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression328.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:375:15: ( ',' expression )*
            loop102:
            do {
                int alt102=2;
                int LA102_0 = input.LA(1);

                if ( (LA102_0==89) ) {
                    alt102=1;
                }


                switch (alt102) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:375:16: ',' expression
            	    {
            	    char_literal329=(Token)match(input,89,FOLLOW_89_in_expression_list3034); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal329_tree = (Object)adaptor.create(char_literal329);
            	    adaptor.addChild(root_0, char_literal329_tree);
            	    }
            	    pushFollow(FOLLOW_expression_in_expression_list3038);
            	    expression330=expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression330.getTree());

            	    }
            	    break;

            	default :
            	    break loop102;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 89, expression_list_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "expression_list"

    public static class assignment_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "assignment"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:376:1: assignment : unary_expression assignment_operator expression ;
    public final CSharpParser.assignment_return assignment() throws RecognitionException {
        CSharpParser.assignment_return retval = new CSharpParser.assignment_return();
        retval.start = input.LT(1);
        int assignment_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.unary_expression_return unary_expression331 = null;

        CSharpParser.assignment_operator_return assignment_operator332 = null;

        CSharpParser.expression_return expression333 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 90) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:376:11: ( unary_expression assignment_operator expression )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:377:3: unary_expression assignment_operator expression
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_unary_expression_in_assignment3049);
            unary_expression331=unary_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression331.getTree());
            pushFollow(FOLLOW_assignment_operator_in_assignment3053);
            assignment_operator332=assignment_operator();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, assignment_operator332.getTree());
            pushFollow(FOLLOW_expression_in_assignment3057);
            expression333=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression333.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 90, assignment_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "assignment"

    public static class unary_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "unary_expression"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:378:1: unary_expression : ( ( cast_expression )=> cast_expression | primary_or_array_creation_expression ( '++' )? ( '--' )? | '+' unary_expression | '-' unary_expression | '!' unary_expression | '~' unary_expression | pre_increment_expression | pre_decrement_expression | pointer_indirection_expression | addressof_expression );
    public final CSharpParser.unary_expression_return unary_expression() throws RecognitionException {
        CSharpParser.unary_expression_return retval = new CSharpParser.unary_expression_return();
        retval.start = input.LT(1);
        int unary_expression_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal336=null;
        Token string_literal337=null;
        Token char_literal338=null;
        Token char_literal340=null;
        Token char_literal342=null;
        Token char_literal344=null;
        CSharpParser.cast_expression_return cast_expression334 = null;

        CSharpParser.primary_or_array_creation_expression_return primary_or_array_creation_expression335 = null;

        CSharpParser.unary_expression_return unary_expression339 = null;

        CSharpParser.unary_expression_return unary_expression341 = null;

        CSharpParser.unary_expression_return unary_expression343 = null;

        CSharpParser.unary_expression_return unary_expression345 = null;

        CSharpParser.pre_increment_expression_return pre_increment_expression346 = null;

        CSharpParser.pre_decrement_expression_return pre_decrement_expression347 = null;

        CSharpParser.pointer_indirection_expression_return pointer_indirection_expression348 = null;

        CSharpParser.addressof_expression_return addressof_expression349 = null;


        Object string_literal336_tree=null;
        Object string_literal337_tree=null;
        Object char_literal338_tree=null;
        Object char_literal340_tree=null;
        Object char_literal342_tree=null;
        Object char_literal344_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 91) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:378:17: ( ( cast_expression )=> cast_expression | primary_or_array_creation_expression ( '++' )? ( '--' )? | '+' unary_expression | '-' unary_expression | '!' unary_expression | '~' unary_expression | pre_increment_expression | pre_decrement_expression | pointer_indirection_expression | addressof_expression )
            int alt105=10;
            alt105 = dfa105.predict(input);
            switch (alt105) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:380:3: ( cast_expression )=> cast_expression
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_cast_expression_in_unary_expression3076);
                    cast_expression334=cast_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, cast_expression334.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:381:5: primary_or_array_creation_expression ( '++' )? ( '--' )?
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_primary_or_array_creation_expression_in_unary_expression3082);
                    primary_or_array_creation_expression335=primary_or_array_creation_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, primary_or_array_creation_expression335.getTree());
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:381:44: ( '++' )?
                    int alt103=2;
                    int LA103_0 = input.LA(1);

                    if ( (LA103_0==102) ) {
                        alt103=1;
                    }
                    switch (alt103) {
                        case 1 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:381:44: '++'
                            {
                            string_literal336=(Token)match(input,102,FOLLOW_102_in_unary_expression3086); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            string_literal336_tree = (Object)adaptor.create(string_literal336);
                            adaptor.addChild(root_0, string_literal336_tree);
                            }

                            }
                            break;

                    }

                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:381:52: ( '--' )?
                    int alt104=2;
                    int LA104_0 = input.LA(1);

                    if ( (LA104_0==103) ) {
                        alt104=1;
                    }
                    switch (alt104) {
                        case 1 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:381:52: '--'
                            {
                            string_literal337=(Token)match(input,103,FOLLOW_103_in_unary_expression3091); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            string_literal337_tree = (Object)adaptor.create(string_literal337);
                            adaptor.addChild(root_0, string_literal337_tree);
                            }

                            }
                            break;

                    }


                    }
                    break;
                case 3 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:382:5: '+' unary_expression
                    {
                    root_0 = (Object)adaptor.nil();

                    char_literal338=(Token)match(input,104,FOLLOW_104_in_unary_expression3098); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal338_tree = (Object)adaptor.create(char_literal338);
                    adaptor.addChild(root_0, char_literal338_tree);
                    }
                    pushFollow(FOLLOW_unary_expression_in_unary_expression3102);
                    unary_expression339=unary_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression339.getTree());

                    }
                    break;
                case 4 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:383:5: '-' unary_expression
                    {
                    root_0 = (Object)adaptor.nil();

                    char_literal340=(Token)match(input,MINUS,FOLLOW_MINUS_in_unary_expression3109); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal340_tree = (Object)adaptor.create(char_literal340);
                    adaptor.addChild(root_0, char_literal340_tree);
                    }
                    pushFollow(FOLLOW_unary_expression_in_unary_expression3113);
                    unary_expression341=unary_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression341.getTree());

                    }
                    break;
                case 5 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:384:5: '!' unary_expression
                    {
                    root_0 = (Object)adaptor.nil();

                    char_literal342=(Token)match(input,105,FOLLOW_105_in_unary_expression3120); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal342_tree = (Object)adaptor.create(char_literal342);
                    adaptor.addChild(root_0, char_literal342_tree);
                    }
                    pushFollow(FOLLOW_unary_expression_in_unary_expression3124);
                    unary_expression343=unary_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression343.getTree());

                    }
                    break;
                case 6 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:385:5: '~' unary_expression
                    {
                    root_0 = (Object)adaptor.nil();

                    char_literal344=(Token)match(input,106,FOLLOW_106_in_unary_expression3131); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal344_tree = (Object)adaptor.create(char_literal344);
                    adaptor.addChild(root_0, char_literal344_tree);
                    }
                    pushFollow(FOLLOW_unary_expression_in_unary_expression3135);
                    unary_expression345=unary_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression345.getTree());

                    }
                    break;
                case 7 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:386:5: pre_increment_expression
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_pre_increment_expression_in_unary_expression3142);
                    pre_increment_expression346=pre_increment_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, pre_increment_expression346.getTree());

                    }
                    break;
                case 8 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:387:5: pre_decrement_expression
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_pre_decrement_expression_in_unary_expression3149);
                    pre_decrement_expression347=pre_decrement_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, pre_decrement_expression347.getTree());

                    }
                    break;
                case 9 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:388:5: pointer_indirection_expression
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_pointer_indirection_expression_in_unary_expression3156);
                    pointer_indirection_expression348=pointer_indirection_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, pointer_indirection_expression348.getTree());

                    }
                    break;
                case 10 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:389:5: addressof_expression
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_addressof_expression_in_unary_expression3162);
                    addressof_expression349=addressof_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, addressof_expression349.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 91, unary_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "unary_expression"

    public static class cast_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "cast_expression"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:391:1: cast_expression : '(' type ')' unary_expression ;
    public final CSharpParser.cast_expression_return cast_expression() throws RecognitionException {
        CSharpParser.cast_expression_return retval = new CSharpParser.cast_expression_return();
        retval.start = input.LT(1);
        int cast_expression_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal350=null;
        Token char_literal352=null;
        CSharpParser.type_return type351 = null;

        CSharpParser.unary_expression_return unary_expression353 = null;


        Object char_literal350_tree=null;
        Object char_literal352_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 92) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:391:16: ( '(' type ')' unary_expression )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:392:3: '(' type ')' unary_expression
            {
            root_0 = (Object)adaptor.nil();

            char_literal350=(Token)match(input,88,FOLLOW_88_in_cast_expression3174); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal350_tree = (Object)adaptor.create(char_literal350);
            adaptor.addChild(root_0, char_literal350_tree);
            }
            pushFollow(FOLLOW_type_in_cast_expression3178);
            type351=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type351.getTree());
            char_literal352=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_cast_expression3182); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal352_tree = (Object)adaptor.create(char_literal352);
            adaptor.addChild(root_0, char_literal352_tree);
            }
            pushFollow(FOLLOW_unary_expression_in_cast_expression3186);
            unary_expression353=unary_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression353.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 92, cast_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "cast_expression"

    public static class assignment_operator_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "assignment_operator"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:393:1: assignment_operator : ( '=' | '+=' | '-=' | '*=' | '/=' | '%=' | '&=' | '|=' | '^=' | '<<=' | '>' '>=' );
    public final CSharpParser.assignment_operator_return assignment_operator() throws RecognitionException {
        CSharpParser.assignment_operator_return retval = new CSharpParser.assignment_operator_return();
        retval.start = input.LT(1);
        int assignment_operator_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal354=null;
        Token string_literal355=null;
        Token string_literal356=null;
        Token string_literal357=null;
        Token string_literal358=null;
        Token string_literal359=null;
        Token string_literal360=null;
        Token string_literal361=null;
        Token string_literal362=null;
        Token string_literal363=null;
        Token char_literal364=null;
        Token string_literal365=null;

        Object char_literal354_tree=null;
        Object string_literal355_tree=null;
        Object string_literal356_tree=null;
        Object string_literal357_tree=null;
        Object string_literal358_tree=null;
        Object string_literal359_tree=null;
        Object string_literal360_tree=null;
        Object string_literal361_tree=null;
        Object string_literal362_tree=null;
        Object string_literal363_tree=null;
        Object char_literal364_tree=null;
        Object string_literal365_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 93) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:393:20: ( '=' | '+=' | '-=' | '*=' | '/=' | '%=' | '&=' | '|=' | '^=' | '<<=' | '>' '>=' )
            int alt106=11;
            switch ( input.LA(1) ) {
            case 66:
                {
                alt106=1;
                }
                break;
            case 107:
                {
                alt106=2;
                }
                break;
            case 108:
                {
                alt106=3;
                }
                break;
            case 109:
                {
                alt106=4;
                }
                break;
            case 110:
                {
                alt106=5;
                }
                break;
            case 111:
                {
                alt106=6;
                }
                break;
            case 112:
                {
                alt106=7;
                }
                break;
            case 113:
                {
                alt106=8;
                }
                break;
            case 114:
                {
                alt106=9;
                }
                break;
            case 115:
                {
                alt106=10;
                }
                break;
            case GT:
                {
                alt106=11;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 106, 0, input);

                throw nvae;
            }

            switch (alt106) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:394:3: '='
                    {
                    root_0 = (Object)adaptor.nil();

                    char_literal354=(Token)match(input,66,FOLLOW_66_in_assignment_operator3195); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal354_tree = (Object)adaptor.create(char_literal354);
                    adaptor.addChild(root_0, char_literal354_tree);
                    }

                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:394:9: '+='
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal355=(Token)match(input,107,FOLLOW_107_in_assignment_operator3199); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal355_tree = (Object)adaptor.create(string_literal355);
                    adaptor.addChild(root_0, string_literal355_tree);
                    }

                    }
                    break;
                case 3 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:394:16: '-='
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal356=(Token)match(input,108,FOLLOW_108_in_assignment_operator3203); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal356_tree = (Object)adaptor.create(string_literal356);
                    adaptor.addChild(root_0, string_literal356_tree);
                    }

                    }
                    break;
                case 4 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:394:23: '*='
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal357=(Token)match(input,109,FOLLOW_109_in_assignment_operator3207); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal357_tree = (Object)adaptor.create(string_literal357);
                    adaptor.addChild(root_0, string_literal357_tree);
                    }

                    }
                    break;
                case 5 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:394:30: '/='
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal358=(Token)match(input,110,FOLLOW_110_in_assignment_operator3211); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal358_tree = (Object)adaptor.create(string_literal358);
                    adaptor.addChild(root_0, string_literal358_tree);
                    }

                    }
                    break;
                case 6 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:394:37: '%='
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal359=(Token)match(input,111,FOLLOW_111_in_assignment_operator3215); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal359_tree = (Object)adaptor.create(string_literal359);
                    adaptor.addChild(root_0, string_literal359_tree);
                    }

                    }
                    break;
                case 7 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:394:44: '&='
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal360=(Token)match(input,112,FOLLOW_112_in_assignment_operator3219); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal360_tree = (Object)adaptor.create(string_literal360);
                    adaptor.addChild(root_0, string_literal360_tree);
                    }

                    }
                    break;
                case 8 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:394:51: '|='
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal361=(Token)match(input,113,FOLLOW_113_in_assignment_operator3223); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal361_tree = (Object)adaptor.create(string_literal361);
                    adaptor.addChild(root_0, string_literal361_tree);
                    }

                    }
                    break;
                case 9 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:394:58: '^='
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal362=(Token)match(input,114,FOLLOW_114_in_assignment_operator3227); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal362_tree = (Object)adaptor.create(string_literal362);
                    adaptor.addChild(root_0, string_literal362_tree);
                    }

                    }
                    break;
                case 10 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:394:65: '<<='
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal363=(Token)match(input,115,FOLLOW_115_in_assignment_operator3231); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal363_tree = (Object)adaptor.create(string_literal363);
                    adaptor.addChild(root_0, string_literal363_tree);
                    }

                    }
                    break;
                case 11 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:394:73: '>' '>='
                    {
                    root_0 = (Object)adaptor.nil();

                    char_literal364=(Token)match(input,GT,FOLLOW_GT_in_assignment_operator3235); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal364_tree = (Object)adaptor.create(char_literal364);
                    adaptor.addChild(root_0, char_literal364_tree);
                    }
                    string_literal365=(Token)match(input,116,FOLLOW_116_in_assignment_operator3237); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal365_tree = (Object)adaptor.create(string_literal365);
                    adaptor.addChild(root_0, string_literal365_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 93, assignment_operator_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "assignment_operator"

    public static class pre_increment_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "pre_increment_expression"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:395:1: pre_increment_expression : '++' unary_expression ;
    public final CSharpParser.pre_increment_expression_return pre_increment_expression() throws RecognitionException {
        CSharpParser.pre_increment_expression_return retval = new CSharpParser.pre_increment_expression_return();
        retval.start = input.LT(1);
        int pre_increment_expression_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal366=null;
        CSharpParser.unary_expression_return unary_expression367 = null;


        Object string_literal366_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 94) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:395:25: ( '++' unary_expression )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:396:3: '++' unary_expression
            {
            root_0 = (Object)adaptor.nil();

            string_literal366=(Token)match(input,102,FOLLOW_102_in_pre_increment_expression3247); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal366_tree = (Object)adaptor.create(string_literal366);
            adaptor.addChild(root_0, string_literal366_tree);
            }
            pushFollow(FOLLOW_unary_expression_in_pre_increment_expression3251);
            unary_expression367=unary_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression367.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 94, pre_increment_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "pre_increment_expression"

    public static class pre_decrement_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "pre_decrement_expression"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:397:1: pre_decrement_expression : '--' unary_expression ;
    public final CSharpParser.pre_decrement_expression_return pre_decrement_expression() throws RecognitionException {
        CSharpParser.pre_decrement_expression_return retval = new CSharpParser.pre_decrement_expression_return();
        retval.start = input.LT(1);
        int pre_decrement_expression_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal368=null;
        CSharpParser.unary_expression_return unary_expression369 = null;


        Object string_literal368_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 95) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:397:25: ( '--' unary_expression )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:398:3: '--' unary_expression
            {
            root_0 = (Object)adaptor.nil();

            string_literal368=(Token)match(input,103,FOLLOW_103_in_pre_decrement_expression3261); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal368_tree = (Object)adaptor.create(string_literal368);
            adaptor.addChild(root_0, string_literal368_tree);
            }
            pushFollow(FOLLOW_unary_expression_in_pre_decrement_expression3265);
            unary_expression369=unary_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression369.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 95, pre_decrement_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "pre_decrement_expression"

    public static class pointer_indirection_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "pointer_indirection_expression"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:399:1: pointer_indirection_expression : '*' unary_expression ;
    public final CSharpParser.pointer_indirection_expression_return pointer_indirection_expression() throws RecognitionException {
        CSharpParser.pointer_indirection_expression_return retval = new CSharpParser.pointer_indirection_expression_return();
        retval.start = input.LT(1);
        int pointer_indirection_expression_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal370=null;
        CSharpParser.unary_expression_return unary_expression371 = null;


        Object char_literal370_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 96) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:399:31: ( '*' unary_expression )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:400:3: '*' unary_expression
            {
            root_0 = (Object)adaptor.nil();

            char_literal370=(Token)match(input,100,FOLLOW_100_in_pointer_indirection_expression3274); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal370_tree = (Object)adaptor.create(char_literal370);
            adaptor.addChild(root_0, char_literal370_tree);
            }
            pushFollow(FOLLOW_unary_expression_in_pointer_indirection_expression3278);
            unary_expression371=unary_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression371.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 96, pointer_indirection_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "pointer_indirection_expression"

    public static class addressof_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "addressof_expression"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:401:1: addressof_expression : '&' unary_expression ;
    public final CSharpParser.addressof_expression_return addressof_expression() throws RecognitionException {
        CSharpParser.addressof_expression_return retval = new CSharpParser.addressof_expression_return();
        retval.start = input.LT(1);
        int addressof_expression_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal372=null;
        CSharpParser.unary_expression_return unary_expression373 = null;


        Object char_literal372_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 97) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:401:21: ( '&' unary_expression )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:402:3: '&' unary_expression
            {
            root_0 = (Object)adaptor.nil();

            char_literal372=(Token)match(input,117,FOLLOW_117_in_addressof_expression3287); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal372_tree = (Object)adaptor.create(char_literal372);
            adaptor.addChild(root_0, char_literal372_tree);
            }
            pushFollow(FOLLOW_unary_expression_in_addressof_expression3291);
            unary_expression373=unary_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression373.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 97, addressof_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "addressof_expression"

    public static class non_assignment_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "non_assignment_expression"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:404:1: non_assignment_expression : ( ( anonymous_function_signature '=>' )=> lambda_expression | ( query_expression )=> query_expression | conditional_expression );
    public final CSharpParser.non_assignment_expression_return non_assignment_expression() throws RecognitionException {
        CSharpParser.non_assignment_expression_return retval = new CSharpParser.non_assignment_expression_return();
        retval.start = input.LT(1);
        int non_assignment_expression_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.lambda_expression_return lambda_expression374 = null;

        CSharpParser.query_expression_return query_expression375 = null;

        CSharpParser.conditional_expression_return conditional_expression376 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 98) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:404:26: ( ( anonymous_function_signature '=>' )=> lambda_expression | ( query_expression )=> query_expression | conditional_expression )
            int alt107=3;
            alt107 = dfa107.predict(input);
            switch (alt107) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:406:3: ( anonymous_function_signature '=>' )=> lambda_expression
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_lambda_expression_in_non_assignment_expression3314);
                    lambda_expression374=lambda_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, lambda_expression374.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:407:5: ( query_expression )=> query_expression
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_query_expression_in_non_assignment_expression3326);
                    query_expression375=query_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, query_expression375.getTree());

                    }
                    break;
                case 3 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:408:5: conditional_expression
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_conditional_expression_in_non_assignment_expression3333);
                    conditional_expression376=conditional_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, conditional_expression376.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 98, non_assignment_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "non_assignment_expression"

    public static class multiplicative_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "multiplicative_expression"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:415:1: multiplicative_expression : unary_expression ( ( '*' | '/' | '%' ) unary_expression )* ;
    public final CSharpParser.multiplicative_expression_return multiplicative_expression() throws RecognitionException {
        CSharpParser.multiplicative_expression_return retval = new CSharpParser.multiplicative_expression_return();
        retval.start = input.LT(1);
        int multiplicative_expression_StartIndex = input.index();
        Object root_0 = null;

        Token set378=null;
        CSharpParser.unary_expression_return unary_expression377 = null;

        CSharpParser.unary_expression_return unary_expression379 = null;


        Object set378_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 99) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:415:26: ( unary_expression ( ( '*' | '/' | '%' ) unary_expression )* )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:416:3: unary_expression ( ( '*' | '/' | '%' ) unary_expression )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_unary_expression_in_multiplicative_expression3349);
            unary_expression377=unary_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression377.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:416:20: ( ( '*' | '/' | '%' ) unary_expression )*
            loop108:
            do {
                int alt108=2;
                int LA108_0 = input.LA(1);

                if ( (LA108_0==100||(LA108_0>=118 && LA108_0<=119)) ) {
                    alt108=1;
                }


                switch (alt108) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:416:23: ( '*' | '/' | '%' ) unary_expression
            	    {
            	    set378=(Token)input.LT(1);
            	    if ( input.LA(1)==100||(input.LA(1)>=118 && input.LA(1)<=119) ) {
            	        input.consume();
            	        if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set378));
            	        state.errorRecovery=false;state.failed=false;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return retval;}
            	        MismatchedSetException mse = new MismatchedSetException(null,input);
            	        throw mse;
            	    }

            	    pushFollow(FOLLOW_unary_expression_in_multiplicative_expression3364);
            	    unary_expression379=unary_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression379.getTree());

            	    }
            	    break;

            	default :
            	    break loop108;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 99, multiplicative_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "multiplicative_expression"

    public static class additive_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "additive_expression"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:417:1: additive_expression : multiplicative_expression ( ( '+' | '-' ) multiplicative_expression )* ;
    public final CSharpParser.additive_expression_return additive_expression() throws RecognitionException {
        CSharpParser.additive_expression_return retval = new CSharpParser.additive_expression_return();
        retval.start = input.LT(1);
        int additive_expression_StartIndex = input.index();
        Object root_0 = null;

        Token set381=null;
        CSharpParser.multiplicative_expression_return multiplicative_expression380 = null;

        CSharpParser.multiplicative_expression_return multiplicative_expression382 = null;


        Object set381_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 100) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:417:20: ( multiplicative_expression ( ( '+' | '-' ) multiplicative_expression )* )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:418:3: multiplicative_expression ( ( '+' | '-' ) multiplicative_expression )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_multiplicative_expression_in_additive_expression3376);
            multiplicative_expression380=multiplicative_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, multiplicative_expression380.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:418:29: ( ( '+' | '-' ) multiplicative_expression )*
            loop109:
            do {
                int alt109=2;
                int LA109_0 = input.LA(1);

                if ( (LA109_0==MINUS||LA109_0==104) ) {
                    alt109=1;
                }


                switch (alt109) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:418:30: ( '+' | '-' ) multiplicative_expression
            	    {
            	    set381=(Token)input.LT(1);
            	    if ( input.LA(1)==MINUS||input.LA(1)==104 ) {
            	        input.consume();
            	        if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set381));
            	        state.errorRecovery=false;state.failed=false;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return retval;}
            	        MismatchedSetException mse = new MismatchedSetException(null,input);
            	        throw mse;
            	    }

            	    pushFollow(FOLLOW_multiplicative_expression_in_additive_expression3387);
            	    multiplicative_expression382=multiplicative_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, multiplicative_expression382.getTree());

            	    }
            	    break;

            	default :
            	    break loop109;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 100, additive_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "additive_expression"

    public static class shift_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "shift_expression"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:420:1: shift_expression : additive_expression ( ( '<<' | '>' '>' ) additive_expression )* ;
    public final CSharpParser.shift_expression_return shift_expression() throws RecognitionException {
        CSharpParser.shift_expression_return retval = new CSharpParser.shift_expression_return();
        retval.start = input.LT(1);
        int shift_expression_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal384=null;
        Token char_literal385=null;
        Token char_literal386=null;
        CSharpParser.additive_expression_return additive_expression383 = null;

        CSharpParser.additive_expression_return additive_expression387 = null;


        Object string_literal384_tree=null;
        Object char_literal385_tree=null;
        Object char_literal386_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 101) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:420:17: ( additive_expression ( ( '<<' | '>' '>' ) additive_expression )* )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:421:3: additive_expression ( ( '<<' | '>' '>' ) additive_expression )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_additive_expression_in_shift_expression3399);
            additive_expression383=additive_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, additive_expression383.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:421:23: ( ( '<<' | '>' '>' ) additive_expression )*
            loop111:
            do {
                int alt111=2;
                int LA111_0 = input.LA(1);

                if ( (LA111_0==GT) ) {
                    int LA111_1 = input.LA(2);

                    if ( (LA111_1==GT) ) {
                        alt111=1;
                    }


                }
                else if ( (LA111_0==120) ) {
                    alt111=1;
                }


                switch (alt111) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:421:24: ( '<<' | '>' '>' ) additive_expression
            	    {
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:421:24: ( '<<' | '>' '>' )
            	    int alt110=2;
            	    int LA110_0 = input.LA(1);

            	    if ( (LA110_0==120) ) {
            	        alt110=1;
            	    }
            	    else if ( (LA110_0==GT) ) {
            	        alt110=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return retval;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 110, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt110) {
            	        case 1 :
            	            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:421:25: '<<'
            	            {
            	            string_literal384=(Token)match(input,120,FOLLOW_120_in_shift_expression3403); if (state.failed) return retval;
            	            if ( state.backtracking==0 ) {
            	            string_literal384_tree = (Object)adaptor.create(string_literal384);
            	            adaptor.addChild(root_0, string_literal384_tree);
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:421:30: '>' '>'
            	            {
            	            char_literal385=(Token)match(input,GT,FOLLOW_GT_in_shift_expression3405); if (state.failed) return retval;
            	            if ( state.backtracking==0 ) {
            	            char_literal385_tree = (Object)adaptor.create(char_literal385);
            	            adaptor.addChild(root_0, char_literal385_tree);
            	            }
            	            char_literal386=(Token)match(input,GT,FOLLOW_GT_in_shift_expression3407); if (state.failed) return retval;
            	            if ( state.backtracking==0 ) {
            	            char_literal386_tree = (Object)adaptor.create(char_literal386);
            	            adaptor.addChild(root_0, char_literal386_tree);
            	            }

            	            }
            	            break;

            	    }

            	    pushFollow(FOLLOW_additive_expression_in_shift_expression3410);
            	    additive_expression387=additive_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, additive_expression387.getTree());

            	    }
            	    break;

            	default :
            	    break loop111;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 101, shift_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "shift_expression"

    public static class relational_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "relational_expression"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:422:1: relational_expression : shift_expression ( ( ( '<' | '>' | '>=' | '<=' ) shift_expression ) | ( ( 'is' | 'as' ) non_nullable_type ) )* ;
    public final CSharpParser.relational_expression_return relational_expression() throws RecognitionException {
        CSharpParser.relational_expression_return retval = new CSharpParser.relational_expression_return();
        retval.start = input.LT(1);
        int relational_expression_StartIndex = input.index();
        Object root_0 = null;

        Token set389=null;
        Token set391=null;
        CSharpParser.shift_expression_return shift_expression388 = null;

        CSharpParser.shift_expression_return shift_expression390 = null;

        CSharpParser.non_nullable_type_return non_nullable_type392 = null;


        Object set389_tree=null;
        Object set391_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 102) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:422:22: ( shift_expression ( ( ( '<' | '>' | '>=' | '<=' ) shift_expression ) | ( ( 'is' | 'as' ) non_nullable_type ) )* )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:423:3: shift_expression ( ( ( '<' | '>' | '>=' | '<=' ) shift_expression ) | ( ( 'is' | 'as' ) non_nullable_type ) )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_shift_expression_in_relational_expression3421);
            shift_expression388=shift_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, shift_expression388.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:424:5: ( ( ( '<' | '>' | '>=' | '<=' ) shift_expression ) | ( ( 'is' | 'as' ) non_nullable_type ) )*
            loop112:
            do {
                int alt112=3;
                int LA112_0 = input.LA(1);

                if ( (LA112_0==GT||LA112_0==99||LA112_0==116||LA112_0==121) ) {
                    alt112=1;
                }
                else if ( ((LA112_0>=122 && LA112_0<=123)) ) {
                    alt112=2;
                }


                switch (alt112) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:424:7: ( ( '<' | '>' | '>=' | '<=' ) shift_expression )
            	    {
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:424:7: ( ( '<' | '>' | '>=' | '<=' ) shift_expression )
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:424:8: ( '<' | '>' | '>=' | '<=' ) shift_expression
            	    {
            	    set389=(Token)input.LT(1);
            	    if ( input.LA(1)==GT||input.LA(1)==99||input.LA(1)==116||input.LA(1)==121 ) {
            	        input.consume();
            	        if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set389));
            	        state.errorRecovery=false;state.failed=false;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return retval;}
            	        MismatchedSetException mse = new MismatchedSetException(null,input);
            	        throw mse;
            	    }

            	    pushFollow(FOLLOW_shift_expression_in_relational_expression3441);
            	    shift_expression390=shift_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, shift_expression390.getTree());

            	    }


            	    }
            	    break;
            	case 2 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:425:9: ( ( 'is' | 'as' ) non_nullable_type )
            	    {
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:425:9: ( ( 'is' | 'as' ) non_nullable_type )
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:425:10: ( 'is' | 'as' ) non_nullable_type
            	    {
            	    set391=(Token)input.LT(1);
            	    if ( (input.LA(1)>=122 && input.LA(1)<=123) ) {
            	        input.consume();
            	        if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set391));
            	        state.errorRecovery=false;state.failed=false;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return retval;}
            	        MismatchedSetException mse = new MismatchedSetException(null,input);
            	        throw mse;
            	    }

            	    pushFollow(FOLLOW_non_nullable_type_in_relational_expression3461);
            	    non_nullable_type392=non_nullable_type();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, non_nullable_type392.getTree());

            	    }


            	    }
            	    break;

            	default :
            	    break loop112;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 102, relational_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "relational_expression"

    public static class equality_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "equality_expression"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:427:1: equality_expression : relational_expression ( ( '==' | '!=' ) relational_expression )* ;
    public final CSharpParser.equality_expression_return equality_expression() throws RecognitionException {
        CSharpParser.equality_expression_return retval = new CSharpParser.equality_expression_return();
        retval.start = input.LT(1);
        int equality_expression_StartIndex = input.index();
        Object root_0 = null;

        Token set394=null;
        CSharpParser.relational_expression_return relational_expression393 = null;

        CSharpParser.relational_expression_return relational_expression395 = null;


        Object set394_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 103) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:427:20: ( relational_expression ( ( '==' | '!=' ) relational_expression )* )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:428:3: relational_expression ( ( '==' | '!=' ) relational_expression )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_relational_expression_in_equality_expression3478);
            relational_expression393=relational_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, relational_expression393.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:429:6: ( ( '==' | '!=' ) relational_expression )*
            loop113:
            do {
                int alt113=2;
                int LA113_0 = input.LA(1);

                if ( ((LA113_0>=124 && LA113_0<=125)) ) {
                    alt113=1;
                }


                switch (alt113) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:429:7: ( '==' | '!=' ) relational_expression
            	    {
            	    set394=(Token)input.LT(1);
            	    if ( (input.LA(1)>=124 && input.LA(1)<=125) ) {
            	        input.consume();
            	        if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set394));
            	        state.errorRecovery=false;state.failed=false;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return retval;}
            	        MismatchedSetException mse = new MismatchedSetException(null,input);
            	        throw mse;
            	    }

            	    pushFollow(FOLLOW_relational_expression_in_equality_expression3494);
            	    relational_expression395=relational_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, relational_expression395.getTree());

            	    }
            	    break;

            	default :
            	    break loop113;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 103, equality_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "equality_expression"

    public static class and_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "and_expression"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:430:1: and_expression : equality_expression ( '&' equality_expression )* ;
    public final CSharpParser.and_expression_return and_expression() throws RecognitionException {
        CSharpParser.and_expression_return retval = new CSharpParser.and_expression_return();
        retval.start = input.LT(1);
        int and_expression_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal397=null;
        CSharpParser.equality_expression_return equality_expression396 = null;

        CSharpParser.equality_expression_return equality_expression398 = null;


        Object char_literal397_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 104) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:430:15: ( equality_expression ( '&' equality_expression )* )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:431:3: equality_expression ( '&' equality_expression )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_equality_expression_in_and_expression3505);
            equality_expression396=equality_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, equality_expression396.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:431:23: ( '&' equality_expression )*
            loop114:
            do {
                int alt114=2;
                int LA114_0 = input.LA(1);

                if ( (LA114_0==117) ) {
                    alt114=1;
                }


                switch (alt114) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:431:24: '&' equality_expression
            	    {
            	    char_literal397=(Token)match(input,117,FOLLOW_117_in_and_expression3508); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal397_tree = (Object)adaptor.create(char_literal397);
            	    adaptor.addChild(root_0, char_literal397_tree);
            	    }
            	    pushFollow(FOLLOW_equality_expression_in_and_expression3512);
            	    equality_expression398=equality_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, equality_expression398.getTree());

            	    }
            	    break;

            	default :
            	    break loop114;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 104, and_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "and_expression"

    public static class exclusive_or_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "exclusive_or_expression"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:432:1: exclusive_or_expression : and_expression ( '^' and_expression )* ;
    public final CSharpParser.exclusive_or_expression_return exclusive_or_expression() throws RecognitionException {
        CSharpParser.exclusive_or_expression_return retval = new CSharpParser.exclusive_or_expression_return();
        retval.start = input.LT(1);
        int exclusive_or_expression_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal400=null;
        CSharpParser.and_expression_return and_expression399 = null;

        CSharpParser.and_expression_return and_expression401 = null;


        Object char_literal400_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 105) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:432:24: ( and_expression ( '^' and_expression )* )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:433:3: and_expression ( '^' and_expression )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_and_expression_in_exclusive_or_expression3523);
            and_expression399=and_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, and_expression399.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:433:18: ( '^' and_expression )*
            loop115:
            do {
                int alt115=2;
                int LA115_0 = input.LA(1);

                if ( (LA115_0==126) ) {
                    alt115=1;
                }


                switch (alt115) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:433:19: '^' and_expression
            	    {
            	    char_literal400=(Token)match(input,126,FOLLOW_126_in_exclusive_or_expression3526); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal400_tree = (Object)adaptor.create(char_literal400);
            	    adaptor.addChild(root_0, char_literal400_tree);
            	    }
            	    pushFollow(FOLLOW_and_expression_in_exclusive_or_expression3530);
            	    and_expression401=and_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, and_expression401.getTree());

            	    }
            	    break;

            	default :
            	    break loop115;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 105, exclusive_or_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "exclusive_or_expression"

    public static class inclusive_or_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "inclusive_or_expression"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:434:1: inclusive_or_expression : exclusive_or_expression ( '|' exclusive_or_expression )* ;
    public final CSharpParser.inclusive_or_expression_return inclusive_or_expression() throws RecognitionException {
        CSharpParser.inclusive_or_expression_return retval = new CSharpParser.inclusive_or_expression_return();
        retval.start = input.LT(1);
        int inclusive_or_expression_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal403=null;
        CSharpParser.exclusive_or_expression_return exclusive_or_expression402 = null;

        CSharpParser.exclusive_or_expression_return exclusive_or_expression404 = null;


        Object char_literal403_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 106) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:434:24: ( exclusive_or_expression ( '|' exclusive_or_expression )* )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:435:3: exclusive_or_expression ( '|' exclusive_or_expression )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_exclusive_or_expression_in_inclusive_or_expression3541);
            exclusive_or_expression402=exclusive_or_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, exclusive_or_expression402.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:435:29: ( '|' exclusive_or_expression )*
            loop116:
            do {
                int alt116=2;
                int LA116_0 = input.LA(1);

                if ( (LA116_0==127) ) {
                    alt116=1;
                }


                switch (alt116) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:435:30: '|' exclusive_or_expression
            	    {
            	    char_literal403=(Token)match(input,127,FOLLOW_127_in_inclusive_or_expression3546); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal403_tree = (Object)adaptor.create(char_literal403);
            	    adaptor.addChild(root_0, char_literal403_tree);
            	    }
            	    pushFollow(FOLLOW_exclusive_or_expression_in_inclusive_or_expression3550);
            	    exclusive_or_expression404=exclusive_or_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, exclusive_or_expression404.getTree());

            	    }
            	    break;

            	default :
            	    break loop116;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 106, inclusive_or_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "inclusive_or_expression"

    public static class conditional_and_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "conditional_and_expression"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:436:1: conditional_and_expression : inclusive_or_expression ( '&&' inclusive_or_expression )* ;
    public final CSharpParser.conditional_and_expression_return conditional_and_expression() throws RecognitionException {
        CSharpParser.conditional_and_expression_return retval = new CSharpParser.conditional_and_expression_return();
        retval.start = input.LT(1);
        int conditional_and_expression_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal406=null;
        CSharpParser.inclusive_or_expression_return inclusive_or_expression405 = null;

        CSharpParser.inclusive_or_expression_return inclusive_or_expression407 = null;


        Object string_literal406_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 107) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:436:27: ( inclusive_or_expression ( '&&' inclusive_or_expression )* )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:437:3: inclusive_or_expression ( '&&' inclusive_or_expression )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_inclusive_or_expression_in_conditional_and_expression3561);
            inclusive_or_expression405=inclusive_or_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, inclusive_or_expression405.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:437:29: ( '&&' inclusive_or_expression )*
            loop117:
            do {
                int alt117=2;
                int LA117_0 = input.LA(1);

                if ( (LA117_0==128) ) {
                    alt117=1;
                }


                switch (alt117) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:437:30: '&&' inclusive_or_expression
            	    {
            	    string_literal406=(Token)match(input,128,FOLLOW_128_in_conditional_and_expression3566); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    string_literal406_tree = (Object)adaptor.create(string_literal406);
            	    adaptor.addChild(root_0, string_literal406_tree);
            	    }
            	    pushFollow(FOLLOW_inclusive_or_expression_in_conditional_and_expression3570);
            	    inclusive_or_expression407=inclusive_or_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, inclusive_or_expression407.getTree());

            	    }
            	    break;

            	default :
            	    break loop117;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 107, conditional_and_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "conditional_and_expression"

    public static class conditional_or_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "conditional_or_expression"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:438:1: conditional_or_expression : conditional_and_expression ( '||' conditional_and_expression )* ;
    public final CSharpParser.conditional_or_expression_return conditional_or_expression() throws RecognitionException {
        CSharpParser.conditional_or_expression_return retval = new CSharpParser.conditional_or_expression_return();
        retval.start = input.LT(1);
        int conditional_or_expression_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal409=null;
        CSharpParser.conditional_and_expression_return conditional_and_expression408 = null;

        CSharpParser.conditional_and_expression_return conditional_and_expression410 = null;


        Object string_literal409_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 108) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:438:26: ( conditional_and_expression ( '||' conditional_and_expression )* )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:439:3: conditional_and_expression ( '||' conditional_and_expression )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_conditional_and_expression_in_conditional_or_expression3581);
            conditional_and_expression408=conditional_and_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, conditional_and_expression408.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:439:31: ( '||' conditional_and_expression )*
            loop118:
            do {
                int alt118=2;
                int LA118_0 = input.LA(1);

                if ( (LA118_0==129) ) {
                    alt118=1;
                }


                switch (alt118) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:439:32: '||' conditional_and_expression
            	    {
            	    string_literal409=(Token)match(input,129,FOLLOW_129_in_conditional_or_expression3585); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    string_literal409_tree = (Object)adaptor.create(string_literal409);
            	    adaptor.addChild(root_0, string_literal409_tree);
            	    }
            	    pushFollow(FOLLOW_conditional_and_expression_in_conditional_or_expression3589);
            	    conditional_and_expression410=conditional_and_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, conditional_and_expression410.getTree());

            	    }
            	    break;

            	default :
            	    break loop118;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 108, conditional_or_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "conditional_or_expression"

    public static class null_coalescing_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "null_coalescing_expression"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:441:1: null_coalescing_expression : conditional_or_expression ( '??' conditional_or_expression )* ;
    public final CSharpParser.null_coalescing_expression_return null_coalescing_expression() throws RecognitionException {
        CSharpParser.null_coalescing_expression_return retval = new CSharpParser.null_coalescing_expression_return();
        retval.start = input.LT(1);
        int null_coalescing_expression_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal412=null;
        CSharpParser.conditional_or_expression_return conditional_or_expression411 = null;

        CSharpParser.conditional_or_expression_return conditional_or_expression413 = null;


        Object string_literal412_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 109) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:441:27: ( conditional_or_expression ( '??' conditional_or_expression )* )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:442:3: conditional_or_expression ( '??' conditional_or_expression )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_conditional_or_expression_in_null_coalescing_expression3601);
            conditional_or_expression411=conditional_or_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, conditional_or_expression411.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:442:31: ( '??' conditional_or_expression )*
            loop119:
            do {
                int alt119=2;
                int LA119_0 = input.LA(1);

                if ( (LA119_0==130) ) {
                    alt119=1;
                }


                switch (alt119) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:442:32: '??' conditional_or_expression
            	    {
            	    string_literal412=(Token)match(input,130,FOLLOW_130_in_null_coalescing_expression3606); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    string_literal412_tree = (Object)adaptor.create(string_literal412);
            	    adaptor.addChild(root_0, string_literal412_tree);
            	    }
            	    pushFollow(FOLLOW_conditional_or_expression_in_null_coalescing_expression3610);
            	    conditional_or_expression413=conditional_or_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, conditional_or_expression413.getTree());

            	    }
            	    break;

            	default :
            	    break loop119;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 109, null_coalescing_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "null_coalescing_expression"

    public static class conditional_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "conditional_expression"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:443:1: conditional_expression : null_coalescing_expression ( '?' expression ':' expression )? ;
    public final CSharpParser.conditional_expression_return conditional_expression() throws RecognitionException {
        CSharpParser.conditional_expression_return retval = new CSharpParser.conditional_expression_return();
        retval.start = input.LT(1);
        int conditional_expression_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal415=null;
        Token char_literal417=null;
        CSharpParser.null_coalescing_expression_return null_coalescing_expression414 = null;

        CSharpParser.expression_return expression416 = null;

        CSharpParser.expression_return expression418 = null;


        Object char_literal415_tree=null;
        Object char_literal417_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 110) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:443:23: ( null_coalescing_expression ( '?' expression ':' expression )? )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:444:3: null_coalescing_expression ( '?' expression ':' expression )?
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_null_coalescing_expression_in_conditional_expression3621);
            null_coalescing_expression414=null_coalescing_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, null_coalescing_expression414.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:444:32: ( '?' expression ':' expression )?
            int alt120=2;
            int LA120_0 = input.LA(1);

            if ( (LA120_0==101) ) {
                alt120=1;
            }
            switch (alt120) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:444:33: '?' expression ':' expression
                    {
                    char_literal415=(Token)match(input,101,FOLLOW_101_in_conditional_expression3626); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal415_tree = (Object)adaptor.create(char_literal415);
                    adaptor.addChild(root_0, char_literal415_tree);
                    }
                    pushFollow(FOLLOW_expression_in_conditional_expression3630);
                    expression416=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression416.getTree());
                    char_literal417=(Token)match(input,90,FOLLOW_90_in_conditional_expression3634); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal417_tree = (Object)adaptor.create(char_literal417);
                    adaptor.addChild(root_0, char_literal417_tree);
                    }
                    pushFollow(FOLLOW_expression_in_conditional_expression3638);
                    expression418=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression418.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 110, conditional_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "conditional_expression"

    public static class lambda_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "lambda_expression"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:449:1: lambda_expression : anonymous_function_signature '=>' anonymous_function_body ;
    public final CSharpParser.lambda_expression_return lambda_expression() throws RecognitionException {
        CSharpParser.lambda_expression_return retval = new CSharpParser.lambda_expression_return();
        retval.start = input.LT(1);
        int lambda_expression_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal420=null;
        CSharpParser.anonymous_function_signature_return anonymous_function_signature419 = null;

        CSharpParser.anonymous_function_body_return anonymous_function_body421 = null;


        Object string_literal420_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 111) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:449:18: ( anonymous_function_signature '=>' anonymous_function_body )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:450:3: anonymous_function_signature '=>' anonymous_function_body
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_anonymous_function_signature_in_lambda_expression3659);
            anonymous_function_signature419=anonymous_function_signature();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, anonymous_function_signature419.getTree());
            string_literal420=(Token)match(input,131,FOLLOW_131_in_lambda_expression3663); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal420_tree = (Object)adaptor.create(string_literal420);
            adaptor.addChild(root_0, string_literal420_tree);
            }
            pushFollow(FOLLOW_anonymous_function_body_in_lambda_expression3667);
            anonymous_function_body421=anonymous_function_body();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, anonymous_function_body421.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 111, lambda_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "lambda_expression"

    public static class anonymous_function_signature_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "anonymous_function_signature"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:451:1: anonymous_function_signature : ( '(' ( explicit_anonymous_function_parameter_list | implicit_anonymous_function_parameter_list )? ')' | implicit_anonymous_function_parameter_list );
    public final CSharpParser.anonymous_function_signature_return anonymous_function_signature() throws RecognitionException {
        CSharpParser.anonymous_function_signature_return retval = new CSharpParser.anonymous_function_signature_return();
        retval.start = input.LT(1);
        int anonymous_function_signature_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal422=null;
        Token char_literal425=null;
        CSharpParser.explicit_anonymous_function_parameter_list_return explicit_anonymous_function_parameter_list423 = null;

        CSharpParser.implicit_anonymous_function_parameter_list_return implicit_anonymous_function_parameter_list424 = null;

        CSharpParser.implicit_anonymous_function_parameter_list_return implicit_anonymous_function_parameter_list426 = null;


        Object char_literal422_tree=null;
        Object char_literal425_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 112) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:451:29: ( '(' ( explicit_anonymous_function_parameter_list | implicit_anonymous_function_parameter_list )? ')' | implicit_anonymous_function_parameter_list )
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( (LA122_0==88) ) {
                alt122=1;
            }
            else if ( (LA122_0==IDENTIFIER||LA122_0==65||(LA122_0>=132 && LA122_0<=133)||(LA122_0>=135 && LA122_0<=148)||(LA122_0>=150 && LA122_0<=152)||LA122_0==154||(LA122_0>=157 && LA122_0<=159)||LA122_0==170||(LA122_0>=177 && LA122_0<=178)||LA122_0==195||LA122_0==202) ) {
                alt122=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 122, 0, input);

                throw nvae;
            }
            switch (alt122) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:452:3: '(' ( explicit_anonymous_function_parameter_list | implicit_anonymous_function_parameter_list )? ')'
                    {
                    root_0 = (Object)adaptor.nil();

                    char_literal422=(Token)match(input,88,FOLLOW_88_in_anonymous_function_signature3675); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal422_tree = (Object)adaptor.create(char_literal422);
                    adaptor.addChild(root_0, char_literal422_tree);
                    }
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:452:7: ( explicit_anonymous_function_parameter_list | implicit_anonymous_function_parameter_list )?
                    int alt121=3;
                    int LA121_0 = input.LA(1);

                    if ( (LA121_0==82||(LA121_0>=91 && LA121_0<=92)||(LA121_0>=160 && LA121_0<=168)||(LA121_0>=196 && LA121_0<=201)) ) {
                        alt121=1;
                    }
                    else if ( (LA121_0==IDENTIFIER||LA121_0==65||(LA121_0>=132 && LA121_0<=133)||(LA121_0>=135 && LA121_0<=148)||(LA121_0>=150 && LA121_0<=152)||LA121_0==154||(LA121_0>=157 && LA121_0<=159)||LA121_0==170||(LA121_0>=177 && LA121_0<=178)||LA121_0==195||LA121_0==202) ) {
                        int LA121_2 = input.LA(2);

                        if ( (LA121_2==IDENTIFIER||LA121_2==DOT||LA121_2==65||LA121_2==84||LA121_2==86||(LA121_2>=99 && LA121_2<=101)||(LA121_2>=132 && LA121_2<=133)||(LA121_2>=135 && LA121_2<=148)||(LA121_2>=150 && LA121_2<=152)||LA121_2==154||(LA121_2>=157 && LA121_2<=159)||LA121_2==170||(LA121_2>=177 && LA121_2<=178)||LA121_2==195||LA121_2==202) ) {
                            alt121=1;
                        }
                        else if ( (LA121_2==RPAREN||LA121_2==89) ) {
                            alt121=2;
                        }
                    }
                    switch (alt121) {
                        case 1 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:452:8: explicit_anonymous_function_parameter_list
                            {
                            pushFollow(FOLLOW_explicit_anonymous_function_parameter_list_in_anonymous_function_signature3678);
                            explicit_anonymous_function_parameter_list423=explicit_anonymous_function_parameter_list();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, explicit_anonymous_function_parameter_list423.getTree());

                            }
                            break;
                        case 2 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:453:7: implicit_anonymous_function_parameter_list
                            {
                            pushFollow(FOLLOW_implicit_anonymous_function_parameter_list_in_anonymous_function_signature3686);
                            implicit_anonymous_function_parameter_list424=implicit_anonymous_function_parameter_list();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, implicit_anonymous_function_parameter_list424.getTree());

                            }
                            break;

                    }

                    char_literal425=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_anonymous_function_signature3691); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal425_tree = (Object)adaptor.create(char_literal425);
                    adaptor.addChild(root_0, char_literal425_tree);
                    }

                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:454:5: implicit_anonymous_function_parameter_list
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_implicit_anonymous_function_parameter_list_in_anonymous_function_signature3697);
                    implicit_anonymous_function_parameter_list426=implicit_anonymous_function_parameter_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, implicit_anonymous_function_parameter_list426.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 112, anonymous_function_signature_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "anonymous_function_signature"

    public static class implicit_anonymous_function_parameter_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "implicit_anonymous_function_parameter_list"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:456:1: implicit_anonymous_function_parameter_list : implicit_anonymous_function_parameter ( ',' implicit_anonymous_function_parameter )* ;
    public final CSharpParser.implicit_anonymous_function_parameter_list_return implicit_anonymous_function_parameter_list() throws RecognitionException {
        CSharpParser.implicit_anonymous_function_parameter_list_return retval = new CSharpParser.implicit_anonymous_function_parameter_list_return();
        retval.start = input.LT(1);
        int implicit_anonymous_function_parameter_list_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal428=null;
        CSharpParser.implicit_anonymous_function_parameter_return implicit_anonymous_function_parameter427 = null;

        CSharpParser.implicit_anonymous_function_parameter_return implicit_anonymous_function_parameter429 = null;


        Object char_literal428_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 113) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:456:43: ( implicit_anonymous_function_parameter ( ',' implicit_anonymous_function_parameter )* )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:457:3: implicit_anonymous_function_parameter ( ',' implicit_anonymous_function_parameter )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_implicit_anonymous_function_parameter_in_implicit_anonymous_function_parameter_list3708);
            implicit_anonymous_function_parameter427=implicit_anonymous_function_parameter();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, implicit_anonymous_function_parameter427.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:457:43: ( ',' implicit_anonymous_function_parameter )*
            loop123:
            do {
                int alt123=2;
                int LA123_0 = input.LA(1);

                if ( (LA123_0==89) ) {
                    alt123=1;
                }


                switch (alt123) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:457:44: ',' implicit_anonymous_function_parameter
            	    {
            	    char_literal428=(Token)match(input,89,FOLLOW_89_in_implicit_anonymous_function_parameter_list3713); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal428_tree = (Object)adaptor.create(char_literal428);
            	    adaptor.addChild(root_0, char_literal428_tree);
            	    }
            	    pushFollow(FOLLOW_implicit_anonymous_function_parameter_in_implicit_anonymous_function_parameter_list3717);
            	    implicit_anonymous_function_parameter429=implicit_anonymous_function_parameter();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, implicit_anonymous_function_parameter429.getTree());

            	    }
            	    break;

            	default :
            	    break loop123;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 113, implicit_anonymous_function_parameter_list_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "implicit_anonymous_function_parameter_list"

    public static class implicit_anonymous_function_parameter_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "implicit_anonymous_function_parameter"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:458:1: implicit_anonymous_function_parameter : identifier ;
    public final CSharpParser.implicit_anonymous_function_parameter_return implicit_anonymous_function_parameter() throws RecognitionException {
        CSharpParser.implicit_anonymous_function_parameter_return retval = new CSharpParser.implicit_anonymous_function_parameter_return();
        retval.start = input.LT(1);
        int implicit_anonymous_function_parameter_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.identifier_return identifier430 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 114) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:458:38: ( identifier )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:459:3: identifier
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_identifier_in_implicit_anonymous_function_parameter3728);
            identifier430=identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier430.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 114, implicit_anonymous_function_parameter_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "implicit_anonymous_function_parameter"

    public static class anonymous_function_body_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "anonymous_function_body"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:460:1: anonymous_function_body : ( expression | block );
    public final CSharpParser.anonymous_function_body_return anonymous_function_body() throws RecognitionException {
        CSharpParser.anonymous_function_body_return retval = new CSharpParser.anonymous_function_body_return();
        retval.start = input.LT(1);
        int anonymous_function_body_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.expression_return expression431 = null;

        CSharpParser.block_return block432 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 115) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:460:24: ( expression | block )
            int alt124=2;
            int LA124_0 = input.LA(1);

            if ( ((LA124_0>=IDENTIFIER && LA124_0<=NULL)||LA124_0==MINUS||LA124_0==65||LA124_0==68||LA124_0==83||LA124_0==85||LA124_0==88||(LA124_0>=93 && LA124_0<=98)||LA124_0==100||(LA124_0>=102 && LA124_0<=106)||LA124_0==117||(LA124_0>=132 && LA124_0<=133)||(LA124_0>=135 && LA124_0<=148)||(LA124_0>=150 && LA124_0<=152)||LA124_0==154||(LA124_0>=157 && LA124_0<=168)||LA124_0==170||(LA124_0>=177 && LA124_0<=178)||(LA124_0>=195 && LA124_0<=202)) ) {
                alt124=1;
            }
            else if ( (LA124_0==SEMI||LA124_0==62) ) {
                alt124=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 124, 0, input);

                throw nvae;
            }
            switch (alt124) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:461:3: expression
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_expression_in_anonymous_function_body3736);
                    expression431=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression431.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:462:5: block
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_block_in_anonymous_function_body3742);
                    block432=block();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, block432.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 115, anonymous_function_body_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "anonymous_function_body"

    public static class query_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "query_expression"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:467:1: query_expression : from_clause query_body ;
    public final CSharpParser.query_expression_return query_expression() throws RecognitionException {
        CSharpParser.query_expression_return retval = new CSharpParser.query_expression_return();
        retval.start = input.LT(1);
        int query_expression_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.from_clause_return from_clause433 = null;

        CSharpParser.query_body_return query_body434 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 116) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:467:17: ( from_clause query_body )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:468:3: from_clause query_body
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_from_clause_in_query_expression3755);
            from_clause433=from_clause();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, from_clause433.getTree());
            pushFollow(FOLLOW_query_body_in_query_expression3759);
            query_body434=query_body();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, query_body434.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 116, query_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "query_expression"

    public static class query_body_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "query_body"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:469:1: query_body : ( query_body_clauses )? select_or_group_clause ( ( 'into' )=> query_continuation )? ;
    public final CSharpParser.query_body_return query_body() throws RecognitionException {
        CSharpParser.query_body_return retval = new CSharpParser.query_body_return();
        retval.start = input.LT(1);
        int query_body_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.query_body_clauses_return query_body_clauses435 = null;

        CSharpParser.select_or_group_clause_return select_or_group_clause436 = null;

        CSharpParser.query_continuation_return query_continuation437 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 117) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:469:11: ( ( query_body_clauses )? select_or_group_clause ( ( 'into' )=> query_continuation )? )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:471:3: ( query_body_clauses )? select_or_group_clause ( ( 'into' )=> query_continuation )?
            {
            root_0 = (Object)adaptor.nil();

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:471:3: ( query_body_clauses )?
            int alt125=2;
            int LA125_0 = input.LA(1);

            if ( (LA125_0==133||LA125_0==135||(LA125_0>=138 && LA125_0<=139)||LA125_0==145) ) {
                alt125=1;
            }
            switch (alt125) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:471:3: query_body_clauses
                    {
                    pushFollow(FOLLOW_query_body_clauses_in_query_body3771);
                    query_body_clauses435=query_body_clauses();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, query_body_clauses435.getTree());

                    }
                    break;

            }

            pushFollow(FOLLOW_select_or_group_clause_in_query_body3776);
            select_or_group_clause436=select_or_group_clause();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, select_or_group_clause436.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:471:50: ( ( 'into' )=> query_continuation )?
            int alt126=2;
            int LA126_0 = input.LA(1);

            if ( (LA126_0==132) ) {
                int LA126_1 = input.LA(2);

                if ( (synpred23_cs()) ) {
                    alt126=1;
                }
            }
            switch (alt126) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:471:51: ( 'into' )=> query_continuation
                    {
                    pushFollow(FOLLOW_query_continuation_in_query_body3787);
                    query_continuation437=query_continuation();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, query_continuation437.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 117, query_body_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "query_body"

    public static class query_continuation_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "query_continuation"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:472:1: query_continuation : 'into' identifier query_body ;
    public final CSharpParser.query_continuation_return query_continuation() throws RecognitionException {
        CSharpParser.query_continuation_return retval = new CSharpParser.query_continuation_return();
        retval.start = input.LT(1);
        int query_continuation_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal438=null;
        CSharpParser.identifier_return identifier439 = null;

        CSharpParser.query_body_return query_body440 = null;


        Object string_literal438_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 118) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:472:19: ( 'into' identifier query_body )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:473:3: 'into' identifier query_body
            {
            root_0 = (Object)adaptor.nil();

            string_literal438=(Token)match(input,132,FOLLOW_132_in_query_continuation3798); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal438_tree = (Object)adaptor.create(string_literal438);
            adaptor.addChild(root_0, string_literal438_tree);
            }
            pushFollow(FOLLOW_identifier_in_query_continuation3802);
            identifier439=identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier439.getTree());
            pushFollow(FOLLOW_query_body_in_query_continuation3806);
            query_body440=query_body();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, query_body440.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 118, query_continuation_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "query_continuation"

    public static class query_body_clauses_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "query_body_clauses"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:474:1: query_body_clauses : ( query_body_clause )+ ;
    public final CSharpParser.query_body_clauses_return query_body_clauses() throws RecognitionException {
        CSharpParser.query_body_clauses_return retval = new CSharpParser.query_body_clauses_return();
        retval.start = input.LT(1);
        int query_body_clauses_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.query_body_clause_return query_body_clause441 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 119) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:474:19: ( ( query_body_clause )+ )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:475:3: ( query_body_clause )+
            {
            root_0 = (Object)adaptor.nil();

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:475:3: ( query_body_clause )+
            int cnt127=0;
            loop127:
            do {
                int alt127=2;
                int LA127_0 = input.LA(1);

                if ( (LA127_0==133||LA127_0==135||(LA127_0>=138 && LA127_0<=139)||LA127_0==145) ) {
                    alt127=1;
                }


                switch (alt127) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:475:3: query_body_clause
            	    {
            	    pushFollow(FOLLOW_query_body_clause_in_query_body_clauses3814);
            	    query_body_clause441=query_body_clause();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, query_body_clause441.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt127 >= 1 ) break loop127;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(127, input);
                        throw eee;
                }
                cnt127++;
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 119, query_body_clauses_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "query_body_clauses"

    public static class query_body_clause_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "query_body_clause"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:476:1: query_body_clause : ( from_clause | let_clause | where_clause | join_clause | orderby_clause );
    public final CSharpParser.query_body_clause_return query_body_clause() throws RecognitionException {
        CSharpParser.query_body_clause_return retval = new CSharpParser.query_body_clause_return();
        retval.start = input.LT(1);
        int query_body_clause_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.from_clause_return from_clause442 = null;

        CSharpParser.let_clause_return let_clause443 = null;

        CSharpParser.where_clause_return where_clause444 = null;

        CSharpParser.join_clause_return join_clause445 = null;

        CSharpParser.orderby_clause_return orderby_clause446 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 120) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:476:18: ( from_clause | let_clause | where_clause | join_clause | orderby_clause )
            int alt128=5;
            switch ( input.LA(1) ) {
            case 133:
                {
                alt128=1;
                }
                break;
            case 138:
                {
                alt128=2;
                }
                break;
            case 145:
                {
                alt128=3;
                }
                break;
            case 135:
                {
                alt128=4;
                }
                break;
            case 139:
                {
                alt128=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 128, 0, input);

                throw nvae;
            }

            switch (alt128) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:477:3: from_clause
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_from_clause_in_query_body_clause3824);
                    from_clause442=from_clause();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, from_clause442.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:478:5: let_clause
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_let_clause_in_query_body_clause3830);
                    let_clause443=let_clause();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, let_clause443.getTree());

                    }
                    break;
                case 3 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:479:5: where_clause
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_where_clause_in_query_body_clause3836);
                    where_clause444=where_clause();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, where_clause444.getTree());

                    }
                    break;
                case 4 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:480:5: join_clause
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_join_clause_in_query_body_clause3842);
                    join_clause445=join_clause();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, join_clause445.getTree());

                    }
                    break;
                case 5 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:481:5: orderby_clause
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_orderby_clause_in_query_body_clause3848);
                    orderby_clause446=orderby_clause();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, orderby_clause446.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 120, query_body_clause_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "query_body_clause"

    public static class from_clause_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "from_clause"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:482:1: from_clause : 'from' ( type )? identifier 'in' expression ;
    public final CSharpParser.from_clause_return from_clause() throws RecognitionException {
        CSharpParser.from_clause_return retval = new CSharpParser.from_clause_return();
        retval.start = input.LT(1);
        int from_clause_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal447=null;
        Token string_literal450=null;
        CSharpParser.type_return type448 = null;

        CSharpParser.identifier_return identifier449 = null;

        CSharpParser.expression_return expression451 = null;


        Object string_literal447_tree=null;
        Object string_literal450_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 121) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:482:12: ( 'from' ( type )? identifier 'in' expression )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:483:3: 'from' ( type )? identifier 'in' expression
            {
            root_0 = (Object)adaptor.nil();

            string_literal447=(Token)match(input,133,FOLLOW_133_in_from_clause3856); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal447_tree = (Object)adaptor.create(string_literal447);
            adaptor.addChild(root_0, string_literal447_tree);
            }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:483:12: ( type )?
            int alt129=2;
            int LA129_0 = input.LA(1);

            if ( (LA129_0==82||(LA129_0>=160 && LA129_0<=168)||(LA129_0>=196 && LA129_0<=201)) ) {
                alt129=1;
            }
            else if ( (LA129_0==IDENTIFIER||LA129_0==65||(LA129_0>=132 && LA129_0<=133)||(LA129_0>=135 && LA129_0<=148)||(LA129_0>=150 && LA129_0<=152)||LA129_0==154||(LA129_0>=157 && LA129_0<=159)||LA129_0==170||(LA129_0>=177 && LA129_0<=178)||LA129_0==195||LA129_0==202) ) {
                int LA129_2 = input.LA(2);

                if ( (LA129_2==IDENTIFIER||LA129_2==DOT||LA129_2==65||LA129_2==84||LA129_2==86||(LA129_2>=99 && LA129_2<=101)||(LA129_2>=132 && LA129_2<=133)||(LA129_2>=135 && LA129_2<=148)||(LA129_2>=150 && LA129_2<=152)||LA129_2==154||(LA129_2>=157 && LA129_2<=159)||LA129_2==170||(LA129_2>=177 && LA129_2<=178)||LA129_2==195||LA129_2==202) ) {
                    alt129=1;
                }
            }
            switch (alt129) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:483:12: type
                    {
                    pushFollow(FOLLOW_type_in_from_clause3860);
                    type448=type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type448.getTree());

                    }
                    break;

            }

            pushFollow(FOLLOW_identifier_in_from_clause3865);
            identifier449=identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier449.getTree());
            string_literal450=(Token)match(input,134,FOLLOW_134_in_from_clause3869); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal450_tree = (Object)adaptor.create(string_literal450);
            adaptor.addChild(root_0, string_literal450_tree);
            }
            pushFollow(FOLLOW_expression_in_from_clause3873);
            expression451=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression451.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 121, from_clause_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "from_clause"

    public static class join_clause_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "join_clause"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:484:1: join_clause : 'join' ( type )? identifier 'in' expression 'on' expression 'equals' expression ( 'into' identifier )? ;
    public final CSharpParser.join_clause_return join_clause() throws RecognitionException {
        CSharpParser.join_clause_return retval = new CSharpParser.join_clause_return();
        retval.start = input.LT(1);
        int join_clause_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal452=null;
        Token string_literal455=null;
        Token string_literal457=null;
        Token string_literal459=null;
        Token string_literal461=null;
        CSharpParser.type_return type453 = null;

        CSharpParser.identifier_return identifier454 = null;

        CSharpParser.expression_return expression456 = null;

        CSharpParser.expression_return expression458 = null;

        CSharpParser.expression_return expression460 = null;

        CSharpParser.identifier_return identifier462 = null;


        Object string_literal452_tree=null;
        Object string_literal455_tree=null;
        Object string_literal457_tree=null;
        Object string_literal459_tree=null;
        Object string_literal461_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 122) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:484:12: ( 'join' ( type )? identifier 'in' expression 'on' expression 'equals' expression ( 'into' identifier )? )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:485:3: 'join' ( type )? identifier 'in' expression 'on' expression 'equals' expression ( 'into' identifier )?
            {
            root_0 = (Object)adaptor.nil();

            string_literal452=(Token)match(input,135,FOLLOW_135_in_join_clause3882); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal452_tree = (Object)adaptor.create(string_literal452);
            adaptor.addChild(root_0, string_literal452_tree);
            }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:485:12: ( type )?
            int alt130=2;
            int LA130_0 = input.LA(1);

            if ( (LA130_0==82||(LA130_0>=160 && LA130_0<=168)||(LA130_0>=196 && LA130_0<=201)) ) {
                alt130=1;
            }
            else if ( (LA130_0==IDENTIFIER||LA130_0==65||(LA130_0>=132 && LA130_0<=133)||(LA130_0>=135 && LA130_0<=148)||(LA130_0>=150 && LA130_0<=152)||LA130_0==154||(LA130_0>=157 && LA130_0<=159)||LA130_0==170||(LA130_0>=177 && LA130_0<=178)||LA130_0==195||LA130_0==202) ) {
                int LA130_2 = input.LA(2);

                if ( (LA130_2==IDENTIFIER||LA130_2==DOT||LA130_2==65||LA130_2==84||LA130_2==86||(LA130_2>=99 && LA130_2<=101)||(LA130_2>=132 && LA130_2<=133)||(LA130_2>=135 && LA130_2<=148)||(LA130_2>=150 && LA130_2<=152)||LA130_2==154||(LA130_2>=157 && LA130_2<=159)||LA130_2==170||(LA130_2>=177 && LA130_2<=178)||LA130_2==195||LA130_2==202) ) {
                    alt130=1;
                }
            }
            switch (alt130) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:485:12: type
                    {
                    pushFollow(FOLLOW_type_in_join_clause3886);
                    type453=type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type453.getTree());

                    }
                    break;

            }

            pushFollow(FOLLOW_identifier_in_join_clause3891);
            identifier454=identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier454.getTree());
            string_literal455=(Token)match(input,134,FOLLOW_134_in_join_clause3895); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal455_tree = (Object)adaptor.create(string_literal455);
            adaptor.addChild(root_0, string_literal455_tree);
            }
            pushFollow(FOLLOW_expression_in_join_clause3899);
            expression456=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression456.getTree());
            string_literal457=(Token)match(input,136,FOLLOW_136_in_join_clause3903); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal457_tree = (Object)adaptor.create(string_literal457);
            adaptor.addChild(root_0, string_literal457_tree);
            }
            pushFollow(FOLLOW_expression_in_join_clause3907);
            expression458=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression458.getTree());
            string_literal459=(Token)match(input,137,FOLLOW_137_in_join_clause3911); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal459_tree = (Object)adaptor.create(string_literal459);
            adaptor.addChild(root_0, string_literal459_tree);
            }
            pushFollow(FOLLOW_expression_in_join_clause3915);
            expression460=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression460.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:485:95: ( 'into' identifier )?
            int alt131=2;
            int LA131_0 = input.LA(1);

            if ( (LA131_0==132) ) {
                alt131=1;
            }
            switch (alt131) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:485:96: 'into' identifier
                    {
                    string_literal461=(Token)match(input,132,FOLLOW_132_in_join_clause3918); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal461_tree = (Object)adaptor.create(string_literal461);
                    adaptor.addChild(root_0, string_literal461_tree);
                    }
                    pushFollow(FOLLOW_identifier_in_join_clause3920);
                    identifier462=identifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier462.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 122, join_clause_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "join_clause"

    public static class let_clause_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "let_clause"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:486:1: let_clause : 'let' identifier '=' expression ;
    public final CSharpParser.let_clause_return let_clause() throws RecognitionException {
        CSharpParser.let_clause_return retval = new CSharpParser.let_clause_return();
        retval.start = input.LT(1);
        int let_clause_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal463=null;
        Token char_literal465=null;
        CSharpParser.identifier_return identifier464 = null;

        CSharpParser.expression_return expression466 = null;


        Object string_literal463_tree=null;
        Object char_literal465_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 123) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:486:11: ( 'let' identifier '=' expression )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:487:3: 'let' identifier '=' expression
            {
            root_0 = (Object)adaptor.nil();

            string_literal463=(Token)match(input,138,FOLLOW_138_in_let_clause3931); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal463_tree = (Object)adaptor.create(string_literal463);
            adaptor.addChild(root_0, string_literal463_tree);
            }
            pushFollow(FOLLOW_identifier_in_let_clause3935);
            identifier464=identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier464.getTree());
            char_literal465=(Token)match(input,66,FOLLOW_66_in_let_clause3939); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal465_tree = (Object)adaptor.create(char_literal465);
            adaptor.addChild(root_0, char_literal465_tree);
            }
            pushFollow(FOLLOW_expression_in_let_clause3943);
            expression466=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression466.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 123, let_clause_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "let_clause"

    public static class orderby_clause_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "orderby_clause"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:488:1: orderby_clause : 'orderby' ordering_list ;
    public final CSharpParser.orderby_clause_return orderby_clause() throws RecognitionException {
        CSharpParser.orderby_clause_return retval = new CSharpParser.orderby_clause_return();
        retval.start = input.LT(1);
        int orderby_clause_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal467=null;
        CSharpParser.ordering_list_return ordering_list468 = null;


        Object string_literal467_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 124) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:488:15: ( 'orderby' ordering_list )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:489:3: 'orderby' ordering_list
            {
            root_0 = (Object)adaptor.nil();

            string_literal467=(Token)match(input,139,FOLLOW_139_in_orderby_clause3951); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal467_tree = (Object)adaptor.create(string_literal467);
            adaptor.addChild(root_0, string_literal467_tree);
            }
            pushFollow(FOLLOW_ordering_list_in_orderby_clause3955);
            ordering_list468=ordering_list();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, ordering_list468.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 124, orderby_clause_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "orderby_clause"

    public static class ordering_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "ordering_list"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:490:1: ordering_list : ordering ( ',' ordering )* ;
    public final CSharpParser.ordering_list_return ordering_list() throws RecognitionException {
        CSharpParser.ordering_list_return retval = new CSharpParser.ordering_list_return();
        retval.start = input.LT(1);
        int ordering_list_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal470=null;
        CSharpParser.ordering_return ordering469 = null;

        CSharpParser.ordering_return ordering471 = null;


        Object char_literal470_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 125) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:490:14: ( ordering ( ',' ordering )* )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:491:3: ordering ( ',' ordering )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_ordering_in_ordering_list3964);
            ordering469=ordering();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, ordering469.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:491:14: ( ',' ordering )*
            loop132:
            do {
                int alt132=2;
                int LA132_0 = input.LA(1);

                if ( (LA132_0==89) ) {
                    alt132=1;
                }


                switch (alt132) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:491:15: ',' ordering
            	    {
            	    char_literal470=(Token)match(input,89,FOLLOW_89_in_ordering_list3969); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal470_tree = (Object)adaptor.create(char_literal470);
            	    adaptor.addChild(root_0, char_literal470_tree);
            	    }
            	    pushFollow(FOLLOW_ordering_in_ordering_list3973);
            	    ordering471=ordering();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, ordering471.getTree());

            	    }
            	    break;

            	default :
            	    break loop132;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 125, ordering_list_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "ordering_list"

    public static class ordering_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "ordering"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:492:1: ordering : expression ordering_direction ;
    public final CSharpParser.ordering_return ordering() throws RecognitionException {
        CSharpParser.ordering_return retval = new CSharpParser.ordering_return();
        retval.start = input.LT(1);
        int ordering_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.expression_return expression472 = null;

        CSharpParser.ordering_direction_return ordering_direction473 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 126) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:492:9: ( expression ordering_direction )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:493:3: expression ordering_direction
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_expression_in_ordering3984);
            expression472=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression472.getTree());
            pushFollow(FOLLOW_ordering_direction_in_ordering3989);
            ordering_direction473=ordering_direction();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, ordering_direction473.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 126, ordering_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "ordering"

    public static class ordering_direction_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "ordering_direction"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:495:1: ordering_direction : ( 'ascending' | 'descending' );
    public final CSharpParser.ordering_direction_return ordering_direction() throws RecognitionException {
        CSharpParser.ordering_direction_return retval = new CSharpParser.ordering_direction_return();
        retval.start = input.LT(1);
        int ordering_direction_StartIndex = input.index();
        Object root_0 = null;

        Token set474=null;

        Object set474_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 127) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:495:19: ( 'ascending' | 'descending' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:
            {
            root_0 = (Object)adaptor.nil();

            set474=(Token)input.LT(1);
            if ( (input.LA(1)>=140 && input.LA(1)<=141) ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set474));
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 127, ordering_direction_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "ordering_direction"

    public static class select_or_group_clause_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "select_or_group_clause"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:498:1: select_or_group_clause : ( select_clause | group_clause );
    public final CSharpParser.select_or_group_clause_return select_or_group_clause() throws RecognitionException {
        CSharpParser.select_or_group_clause_return retval = new CSharpParser.select_or_group_clause_return();
        retval.start = input.LT(1);
        int select_or_group_clause_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.select_clause_return select_clause475 = null;

        CSharpParser.group_clause_return group_clause476 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 128) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:498:23: ( select_clause | group_clause )
            int alt133=2;
            int LA133_0 = input.LA(1);

            if ( (LA133_0==142) ) {
                alt133=1;
            }
            else if ( (LA133_0==143) ) {
                alt133=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 133, 0, input);

                throw nvae;
            }
            switch (alt133) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:499:3: select_clause
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_select_clause_in_select_or_group_clause4015);
                    select_clause475=select_clause();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, select_clause475.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:500:5: group_clause
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_group_clause_in_select_or_group_clause4021);
                    group_clause476=group_clause();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, group_clause476.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 128, select_or_group_clause_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "select_or_group_clause"

    public static class select_clause_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "select_clause"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:501:1: select_clause : 'select' expression ;
    public final CSharpParser.select_clause_return select_clause() throws RecognitionException {
        CSharpParser.select_clause_return retval = new CSharpParser.select_clause_return();
        retval.start = input.LT(1);
        int select_clause_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal477=null;
        CSharpParser.expression_return expression478 = null;


        Object string_literal477_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 129) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:501:14: ( 'select' expression )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:502:3: 'select' expression
            {
            root_0 = (Object)adaptor.nil();

            string_literal477=(Token)match(input,142,FOLLOW_142_in_select_clause4030); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal477_tree = (Object)adaptor.create(string_literal477);
            adaptor.addChild(root_0, string_literal477_tree);
            }
            pushFollow(FOLLOW_expression_in_select_clause4034);
            expression478=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression478.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 129, select_clause_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "select_clause"

    public static class group_clause_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "group_clause"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:503:1: group_clause : 'group' expression 'by' expression ;
    public final CSharpParser.group_clause_return group_clause() throws RecognitionException {
        CSharpParser.group_clause_return retval = new CSharpParser.group_clause_return();
        retval.start = input.LT(1);
        int group_clause_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal479=null;
        Token string_literal481=null;
        CSharpParser.expression_return expression480 = null;

        CSharpParser.expression_return expression482 = null;


        Object string_literal479_tree=null;
        Object string_literal481_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 130) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:503:13: ( 'group' expression 'by' expression )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:504:3: 'group' expression 'by' expression
            {
            root_0 = (Object)adaptor.nil();

            string_literal479=(Token)match(input,143,FOLLOW_143_in_group_clause4043); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal479_tree = (Object)adaptor.create(string_literal479);
            adaptor.addChild(root_0, string_literal479_tree);
            }
            pushFollow(FOLLOW_expression_in_group_clause4047);
            expression480=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression480.getTree());
            string_literal481=(Token)match(input,144,FOLLOW_144_in_group_clause4051); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal481_tree = (Object)adaptor.create(string_literal481);
            adaptor.addChild(root_0, string_literal481_tree);
            }
            pushFollow(FOLLOW_expression_in_group_clause4055);
            expression482=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression482.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 130, group_clause_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "group_clause"

    public static class where_clause_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "where_clause"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:505:1: where_clause : 'where' boolean_expression ;
    public final CSharpParser.where_clause_return where_clause() throws RecognitionException {
        CSharpParser.where_clause_return retval = new CSharpParser.where_clause_return();
        retval.start = input.LT(1);
        int where_clause_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal483=null;
        CSharpParser.boolean_expression_return boolean_expression484 = null;


        Object string_literal483_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 131) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:505:13: ( 'where' boolean_expression )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:506:3: 'where' boolean_expression
            {
            root_0 = (Object)adaptor.nil();

            string_literal483=(Token)match(input,145,FOLLOW_145_in_where_clause4064); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal483_tree = (Object)adaptor.create(string_literal483);
            adaptor.addChild(root_0, string_literal483_tree);
            }
            pushFollow(FOLLOW_boolean_expression_in_where_clause4068);
            boolean_expression484=boolean_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, boolean_expression484.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 131, where_clause_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "where_clause"

    public static class boolean_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "boolean_expression"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:507:1: boolean_expression : expression ;
    public final CSharpParser.boolean_expression_return boolean_expression() throws RecognitionException {
        CSharpParser.boolean_expression_return retval = new CSharpParser.boolean_expression_return();
        retval.start = input.LT(1);
        int boolean_expression_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.expression_return expression485 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 132) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:507:19: ( expression )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:508:3: expression
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_expression_in_boolean_expression4077);
            expression485=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression485.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 132, boolean_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "boolean_expression"

    public static class global_attributes_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "global_attributes"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:513:1: global_attributes : ( global_attribute )+ ;
    public final CSharpParser.global_attributes_return global_attributes() throws RecognitionException {
        CSharpParser.global_attributes_return retval = new CSharpParser.global_attributes_return();
        retval.start = input.LT(1);
        int global_attributes_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.global_attribute_return global_attribute486 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 133) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:513:18: ( ( global_attribute )+ )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:514:3: ( global_attribute )+
            {
            root_0 = (Object)adaptor.nil();

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:514:3: ( global_attribute )+
            int cnt134=0;
            loop134:
            do {
                int alt134=2;
                int LA134_0 = input.LA(1);

                if ( (LA134_0==86) ) {
                    int LA134_2 = input.LA(2);

                    if ( ((LA134_2>=146 && LA134_2<=147)) ) {
                        int LA134_3 = input.LA(3);

                        if ( (LA134_3==90) ) {
                            alt134=1;
                        }


                    }


                }


                switch (alt134) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:514:3: global_attribute
            	    {
            	    pushFollow(FOLLOW_global_attribute_in_global_attributes4090);
            	    global_attribute486=global_attribute();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, global_attribute486.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt134 >= 1 ) break loop134;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(134, input);
                        throw eee;
                }
                cnt134++;
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 133, global_attributes_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "global_attributes"

    public static class global_attribute_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "global_attribute"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:515:1: global_attribute : '[' global_attribute_target_specifier attribute_list ( ',' )? ']' ;
    public final CSharpParser.global_attribute_return global_attribute() throws RecognitionException {
        CSharpParser.global_attribute_return retval = new CSharpParser.global_attribute_return();
        retval.start = input.LT(1);
        int global_attribute_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal487=null;
        Token char_literal490=null;
        Token char_literal491=null;
        CSharpParser.global_attribute_target_specifier_return global_attribute_target_specifier488 = null;

        CSharpParser.attribute_list_return attribute_list489 = null;


        Object char_literal487_tree=null;
        Object char_literal490_tree=null;
        Object char_literal491_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 134) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:515:17: ( '[' global_attribute_target_specifier attribute_list ( ',' )? ']' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:516:3: '[' global_attribute_target_specifier attribute_list ( ',' )? ']'
            {
            root_0 = (Object)adaptor.nil();

            char_literal487=(Token)match(input,86,FOLLOW_86_in_global_attribute4101); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal487_tree = (Object)adaptor.create(char_literal487);
            adaptor.addChild(root_0, char_literal487_tree);
            }
            pushFollow(FOLLOW_global_attribute_target_specifier_in_global_attribute4105);
            global_attribute_target_specifier488=global_attribute_target_specifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, global_attribute_target_specifier488.getTree());
            pushFollow(FOLLOW_attribute_list_in_global_attribute4109);
            attribute_list489=attribute_list();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, attribute_list489.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:516:62: ( ',' )?
            int alt135=2;
            int LA135_0 = input.LA(1);

            if ( (LA135_0==89) ) {
                alt135=1;
            }
            switch (alt135) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:516:62: ','
                    {
                    char_literal490=(Token)match(input,89,FOLLOW_89_in_global_attribute4113); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal490_tree = (Object)adaptor.create(char_literal490);
                    adaptor.addChild(root_0, char_literal490_tree);
                    }

                    }
                    break;

            }

            char_literal491=(Token)match(input,87,FOLLOW_87_in_global_attribute4118); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal491_tree = (Object)adaptor.create(char_literal491);
            adaptor.addChild(root_0, char_literal491_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 134, global_attribute_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "global_attribute"

    public static class global_attribute_target_specifier_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "global_attribute_target_specifier"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:517:1: global_attribute_target_specifier : global_attribute_target ':' ;
    public final CSharpParser.global_attribute_target_specifier_return global_attribute_target_specifier() throws RecognitionException {
        CSharpParser.global_attribute_target_specifier_return retval = new CSharpParser.global_attribute_target_specifier_return();
        retval.start = input.LT(1);
        int global_attribute_target_specifier_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal493=null;
        CSharpParser.global_attribute_target_return global_attribute_target492 = null;


        Object char_literal493_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 135) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:517:34: ( global_attribute_target ':' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:518:3: global_attribute_target ':'
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_global_attribute_target_in_global_attribute_target_specifier4128);
            global_attribute_target492=global_attribute_target();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, global_attribute_target492.getTree());
            char_literal493=(Token)match(input,90,FOLLOW_90_in_global_attribute_target_specifier4132); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal493_tree = (Object)adaptor.create(char_literal493);
            adaptor.addChild(root_0, char_literal493_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 135, global_attribute_target_specifier_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "global_attribute_target_specifier"

    public static class global_attribute_target_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "global_attribute_target"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:519:1: global_attribute_target : ( 'assembly' | 'module' );
    public final CSharpParser.global_attribute_target_return global_attribute_target() throws RecognitionException {
        CSharpParser.global_attribute_target_return retval = new CSharpParser.global_attribute_target_return();
        retval.start = input.LT(1);
        int global_attribute_target_StartIndex = input.index();
        Object root_0 = null;

        Token set494=null;

        Object set494_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 136) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:519:24: ( 'assembly' | 'module' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:
            {
            root_0 = (Object)adaptor.nil();

            set494=(Token)input.LT(1);
            if ( (input.LA(1)>=146 && input.LA(1)<=147) ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set494));
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 136, global_attribute_target_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "global_attribute_target"

    public static class attributes_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "attributes"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:521:1: attributes : attribute_sections ;
    public final CSharpParser.attributes_return attributes() throws RecognitionException {
        CSharpParser.attributes_return retval = new CSharpParser.attributes_return();
        retval.start = input.LT(1);
        int attributes_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.attribute_sections_return attribute_sections495 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 137) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:521:11: ( attribute_sections )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:522:3: attribute_sections
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_attribute_sections_in_attributes4156);
            attribute_sections495=attribute_sections();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, attribute_sections495.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 137, attributes_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "attributes"

    public static class attribute_sections_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "attribute_sections"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:523:1: attribute_sections : ( attribute_section )+ ;
    public final CSharpParser.attribute_sections_return attribute_sections() throws RecognitionException {
        CSharpParser.attribute_sections_return retval = new CSharpParser.attribute_sections_return();
        retval.start = input.LT(1);
        int attribute_sections_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.attribute_section_return attribute_section496 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 138) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:523:19: ( ( attribute_section )+ )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:524:3: ( attribute_section )+
            {
            root_0 = (Object)adaptor.nil();

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:524:3: ( attribute_section )+
            int cnt136=0;
            loop136:
            do {
                int alt136=2;
                int LA136_0 = input.LA(1);

                if ( (LA136_0==86) ) {
                    alt136=1;
                }


                switch (alt136) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:524:3: attribute_section
            	    {
            	    pushFollow(FOLLOW_attribute_section_in_attribute_sections4166);
            	    attribute_section496=attribute_section();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, attribute_section496.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt136 >= 1 ) break loop136;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(136, input);
                        throw eee;
                }
                cnt136++;
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 138, attribute_sections_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "attribute_sections"

    public static class attribute_section_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "attribute_section"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:525:1: attribute_section : '[' ( attribute_target_specifier )? attribute_list ( ',' )? ']' ;
    public final CSharpParser.attribute_section_return attribute_section() throws RecognitionException {
        CSharpParser.attribute_section_return retval = new CSharpParser.attribute_section_return();
        retval.start = input.LT(1);
        int attribute_section_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal497=null;
        Token char_literal500=null;
        Token char_literal501=null;
        CSharpParser.attribute_target_specifier_return attribute_target_specifier498 = null;

        CSharpParser.attribute_list_return attribute_list499 = null;


        Object char_literal497_tree=null;
        Object char_literal500_tree=null;
        Object char_literal501_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 139) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:525:18: ( '[' ( attribute_target_specifier )? attribute_list ( ',' )? ']' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:526:3: '[' ( attribute_target_specifier )? attribute_list ( ',' )? ']'
            {
            root_0 = (Object)adaptor.nil();

            char_literal497=(Token)match(input,86,FOLLOW_86_in_attribute_section4177); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal497_tree = (Object)adaptor.create(char_literal497);
            adaptor.addChild(root_0, char_literal497_tree);
            }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:526:9: ( attribute_target_specifier )?
            int alt137=2;
            int LA137_0 = input.LA(1);

            if ( (LA137_0==148||(LA137_0>=150 && LA137_0<=152)||LA137_0==154) ) {
                int LA137_1 = input.LA(2);

                if ( (LA137_1==90) ) {
                    alt137=1;
                }
            }
            else if ( (LA137_0==149||LA137_0==153) ) {
                alt137=1;
            }
            switch (alt137) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:526:9: attribute_target_specifier
                    {
                    pushFollow(FOLLOW_attribute_target_specifier_in_attribute_section4181);
                    attribute_target_specifier498=attribute_target_specifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attribute_target_specifier498.getTree());

                    }
                    break;

            }

            pushFollow(FOLLOW_attribute_list_in_attribute_section4186);
            attribute_list499=attribute_list();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, attribute_list499.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:526:56: ( ',' )?
            int alt138=2;
            int LA138_0 = input.LA(1);

            if ( (LA138_0==89) ) {
                alt138=1;
            }
            switch (alt138) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:526:56: ','
                    {
                    char_literal500=(Token)match(input,89,FOLLOW_89_in_attribute_section4190); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal500_tree = (Object)adaptor.create(char_literal500);
                    adaptor.addChild(root_0, char_literal500_tree);
                    }

                    }
                    break;

            }

            char_literal501=(Token)match(input,87,FOLLOW_87_in_attribute_section4195); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal501_tree = (Object)adaptor.create(char_literal501);
            adaptor.addChild(root_0, char_literal501_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 139, attribute_section_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "attribute_section"

    public static class attribute_target_specifier_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "attribute_target_specifier"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:527:1: attribute_target_specifier : attribute_target ':' ;
    public final CSharpParser.attribute_target_specifier_return attribute_target_specifier() throws RecognitionException {
        CSharpParser.attribute_target_specifier_return retval = new CSharpParser.attribute_target_specifier_return();
        retval.start = input.LT(1);
        int attribute_target_specifier_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal503=null;
        CSharpParser.attribute_target_return attribute_target502 = null;


        Object char_literal503_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 140) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:527:27: ( attribute_target ':' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:528:3: attribute_target ':'
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_attribute_target_in_attribute_target_specifier4205);
            attribute_target502=attribute_target();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, attribute_target502.getTree());
            char_literal503=(Token)match(input,90,FOLLOW_90_in_attribute_target_specifier4209); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal503_tree = (Object)adaptor.create(char_literal503);
            adaptor.addChild(root_0, char_literal503_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 140, attribute_target_specifier_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "attribute_target_specifier"

    public static class attribute_target_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "attribute_target"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:529:1: attribute_target : ( 'field' | 'event' | 'method' | 'param' | 'property' | 'return' | 'type' );
    public final CSharpParser.attribute_target_return attribute_target() throws RecognitionException {
        CSharpParser.attribute_target_return retval = new CSharpParser.attribute_target_return();
        retval.start = input.LT(1);
        int attribute_target_StartIndex = input.index();
        Object root_0 = null;

        Token set504=null;

        Object set504_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 141) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:529:17: ( 'field' | 'event' | 'method' | 'param' | 'property' | 'return' | 'type' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:
            {
            root_0 = (Object)adaptor.nil();

            set504=(Token)input.LT(1);
            if ( (input.LA(1)>=148 && input.LA(1)<=154) ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set504));
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 141, attribute_target_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "attribute_target"

    public static class attribute_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "attribute_list"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:531:1: attribute_list : attribute ( ',' attribute )* ;
    public final CSharpParser.attribute_list_return attribute_list() throws RecognitionException {
        CSharpParser.attribute_list_return retval = new CSharpParser.attribute_list_return();
        retval.start = input.LT(1);
        int attribute_list_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal506=null;
        CSharpParser.attribute_return attribute505 = null;

        CSharpParser.attribute_return attribute507 = null;


        Object char_literal506_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 142) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:531:15: ( attribute ( ',' attribute )* )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:532:3: attribute ( ',' attribute )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_attribute_in_attribute_list4253);
            attribute505=attribute();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, attribute505.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:532:13: ( ',' attribute )*
            loop139:
            do {
                int alt139=2;
                int LA139_0 = input.LA(1);

                if ( (LA139_0==89) ) {
                    int LA139_1 = input.LA(2);

                    if ( (LA139_1==IDENTIFIER||LA139_1==65||(LA139_1>=132 && LA139_1<=133)||(LA139_1>=135 && LA139_1<=148)||(LA139_1>=150 && LA139_1<=152)||LA139_1==154||(LA139_1>=157 && LA139_1<=159)||LA139_1==170||(LA139_1>=177 && LA139_1<=178)||LA139_1==195||LA139_1==202) ) {
                        alt139=1;
                    }


                }


                switch (alt139) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:532:14: ',' attribute
            	    {
            	    char_literal506=(Token)match(input,89,FOLLOW_89_in_attribute_list4256); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal506_tree = (Object)adaptor.create(char_literal506);
            	    adaptor.addChild(root_0, char_literal506_tree);
            	    }
            	    pushFollow(FOLLOW_attribute_in_attribute_list4258);
            	    attribute507=attribute();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, attribute507.getTree());

            	    }
            	    break;

            	default :
            	    break loop139;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 142, attribute_list_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "attribute_list"

    public static class attribute_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "attribute"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:533:1: attribute : type_name ( attribute_arguments )? ;
    public final CSharpParser.attribute_return attribute() throws RecognitionException {
        CSharpParser.attribute_return retval = new CSharpParser.attribute_return();
        retval.start = input.LT(1);
        int attribute_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.type_name_return type_name508 = null;

        CSharpParser.attribute_arguments_return attribute_arguments509 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 143) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:533:10: ( type_name ( attribute_arguments )? )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:534:3: type_name ( attribute_arguments )?
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_type_name_in_attribute4271);
            type_name508=type_name();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type_name508.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:534:15: ( attribute_arguments )?
            int alt140=2;
            int LA140_0 = input.LA(1);

            if ( (LA140_0==88) ) {
                alt140=1;
            }
            switch (alt140) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:534:15: attribute_arguments
                    {
                    pushFollow(FOLLOW_attribute_arguments_in_attribute4275);
                    attribute_arguments509=attribute_arguments();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attribute_arguments509.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 143, attribute_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "attribute"

    public static class attribute_arguments_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "attribute_arguments"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:536:1: attribute_arguments : '(' ( ')' | ( positional_argument ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )* ) ')' ) ;
    public final CSharpParser.attribute_arguments_return attribute_arguments() throws RecognitionException {
        CSharpParser.attribute_arguments_return retval = new CSharpParser.attribute_arguments_return();
        retval.start = input.LT(1);
        int attribute_arguments_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal510=null;
        Token char_literal511=null;
        Token char_literal514=null;
        Token char_literal516=null;
        CSharpParser.positional_argument_return positional_argument512 = null;

        CSharpParser.named_argument_return named_argument513 = null;

        CSharpParser.positional_argument_return positional_argument515 = null;


        Object char_literal510_tree=null;
        Object char_literal511_tree=null;
        Object char_literal514_tree=null;
        Object char_literal516_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 144) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:536:20: ( '(' ( ')' | ( positional_argument ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )* ) ')' ) )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:537:3: '(' ( ')' | ( positional_argument ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )* ) ')' )
            {
            root_0 = (Object)adaptor.nil();

            char_literal510=(Token)match(input,88,FOLLOW_88_in_attribute_arguments4287); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal510_tree = (Object)adaptor.create(char_literal510);
            adaptor.addChild(root_0, char_literal510_tree);
            }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:537:9: ( ')' | ( positional_argument ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )* ) ')' )
            int alt142=2;
            int LA142_0 = input.LA(1);

            if ( (LA142_0==RPAREN) ) {
                alt142=1;
            }
            else if ( ((LA142_0>=IDENTIFIER && LA142_0<=NULL)||LA142_0==MINUS||LA142_0==65||LA142_0==68||LA142_0==83||LA142_0==85||LA142_0==88||(LA142_0>=93 && LA142_0<=98)||LA142_0==100||(LA142_0>=102 && LA142_0<=106)||LA142_0==117||(LA142_0>=132 && LA142_0<=133)||(LA142_0>=135 && LA142_0<=148)||(LA142_0>=150 && LA142_0<=152)||LA142_0==154||(LA142_0>=157 && LA142_0<=168)||LA142_0==170||(LA142_0>=177 && LA142_0<=178)||(LA142_0>=195 && LA142_0<=202)) ) {
                alt142=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 142, 0, input);

                throw nvae;
            }
            switch (alt142) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:537:10: ')'
                    {
                    char_literal511=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_attribute_arguments4292); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal511_tree = (Object)adaptor.create(char_literal511);
                    adaptor.addChild(root_0, char_literal511_tree);
                    }

                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:538:10: ( positional_argument ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )* ) ')'
                    {
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:538:10: ( positional_argument ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )* )
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:538:11: positional_argument ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )*
                    {
                    pushFollow(FOLLOW_positional_argument_in_attribute_arguments4324);
                    positional_argument512=positional_argument();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, positional_argument512.getTree());
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:538:33: ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )*
                    loop141:
                    do {
                        int alt141=3;
                        int LA141_0 = input.LA(1);

                        if ( (LA141_0==IDENTIFIER||LA141_0==65||(LA141_0>=132 && LA141_0<=133)||(LA141_0>=135 && LA141_0<=148)||(LA141_0>=150 && LA141_0<=152)||LA141_0==154||(LA141_0>=157 && LA141_0<=159)||LA141_0==170||(LA141_0>=177 && LA141_0<=178)||LA141_0==195||LA141_0==202) && (synpred24_cs())) {
                            alt141=1;
                        }
                        else if ( (LA141_0==89) ) {
                            alt141=2;
                        }


                        switch (alt141) {
                    	case 1 :
                    	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:538:34: ( ',' identifier '=' )=> named_argument
                    	    {
                    	    pushFollow(FOLLOW_named_argument_in_attribute_arguments4343);
                    	    named_argument513=named_argument();

                    	    state._fsp--;
                    	    if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) adaptor.addChild(root_0, named_argument513.getTree());

                    	    }
                    	    break;
                    	case 2 :
                    	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:539:23: ',' positional_argument
                    	    {
                    	    char_literal514=(Token)match(input,89,FOLLOW_89_in_attribute_arguments4367); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    char_literal514_tree = (Object)adaptor.create(char_literal514);
                    	    adaptor.addChild(root_0, char_literal514_tree);
                    	    }
                    	    pushFollow(FOLLOW_positional_argument_in_attribute_arguments4369);
                    	    positional_argument515=positional_argument();

                    	    state._fsp--;
                    	    if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) adaptor.addChild(root_0, positional_argument515.getTree());

                    	    }
                    	    break;

                    	default :
                    	    break loop141;
                        }
                    } while (true);


                    }

                    char_literal516=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_attribute_arguments4383); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal516_tree = (Object)adaptor.create(char_literal516);
                    adaptor.addChild(root_0, char_literal516_tree);
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 144, attribute_arguments_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "attribute_arguments"

    public static class positional_argument_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "positional_argument_list"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:542:1: positional_argument_list : positional_argument ( ',' positional_argument )* ;
    public final CSharpParser.positional_argument_list_return positional_argument_list() throws RecognitionException {
        CSharpParser.positional_argument_list_return retval = new CSharpParser.positional_argument_list_return();
        retval.start = input.LT(1);
        int positional_argument_list_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal518=null;
        CSharpParser.positional_argument_return positional_argument517 = null;

        CSharpParser.positional_argument_return positional_argument519 = null;


        Object char_literal518_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 145) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:542:25: ( positional_argument ( ',' positional_argument )* )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:543:3: positional_argument ( ',' positional_argument )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_positional_argument_in_positional_argument_list4401);
            positional_argument517=positional_argument();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, positional_argument517.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:543:23: ( ',' positional_argument )*
            loop143:
            do {
                int alt143=2;
                int LA143_0 = input.LA(1);

                if ( (LA143_0==89) ) {
                    alt143=1;
                }


                switch (alt143) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:543:24: ',' positional_argument
            	    {
            	    char_literal518=(Token)match(input,89,FOLLOW_89_in_positional_argument_list4404); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal518_tree = (Object)adaptor.create(char_literal518);
            	    adaptor.addChild(root_0, char_literal518_tree);
            	    }
            	    pushFollow(FOLLOW_positional_argument_in_positional_argument_list4406);
            	    positional_argument519=positional_argument();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, positional_argument519.getTree());

            	    }
            	    break;

            	default :
            	    break loop143;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 145, positional_argument_list_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "positional_argument_list"

    public static class positional_argument_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "positional_argument"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:544:1: positional_argument : attribute_argument_expression ;
    public final CSharpParser.positional_argument_return positional_argument() throws RecognitionException {
        CSharpParser.positional_argument_return retval = new CSharpParser.positional_argument_return();
        retval.start = input.LT(1);
        int positional_argument_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.attribute_argument_expression_return attribute_argument_expression520 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 146) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:544:20: ( attribute_argument_expression )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:545:3: attribute_argument_expression
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_attribute_argument_expression_in_positional_argument4418);
            attribute_argument_expression520=attribute_argument_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, attribute_argument_expression520.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 146, positional_argument_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "positional_argument"

    public static class named_argument_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "named_argument_list"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:546:1: named_argument_list : named_argument ( ',' named_argument )* ;
    public final CSharpParser.named_argument_list_return named_argument_list() throws RecognitionException {
        CSharpParser.named_argument_list_return retval = new CSharpParser.named_argument_list_return();
        retval.start = input.LT(1);
        int named_argument_list_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal522=null;
        CSharpParser.named_argument_return named_argument521 = null;

        CSharpParser.named_argument_return named_argument523 = null;


        Object char_literal522_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 147) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:546:20: ( named_argument ( ',' named_argument )* )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:547:3: named_argument ( ',' named_argument )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_named_argument_in_named_argument_list4428);
            named_argument521=named_argument();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, named_argument521.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:547:18: ( ',' named_argument )*
            loop144:
            do {
                int alt144=2;
                int LA144_0 = input.LA(1);

                if ( (LA144_0==89) ) {
                    alt144=1;
                }


                switch (alt144) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:547:19: ',' named_argument
            	    {
            	    char_literal522=(Token)match(input,89,FOLLOW_89_in_named_argument_list4431); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal522_tree = (Object)adaptor.create(char_literal522);
            	    adaptor.addChild(root_0, char_literal522_tree);
            	    }
            	    pushFollow(FOLLOW_named_argument_in_named_argument_list4433);
            	    named_argument523=named_argument();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, named_argument523.getTree());

            	    }
            	    break;

            	default :
            	    break loop144;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 147, named_argument_list_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "named_argument_list"

    public static class named_argument_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "named_argument"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:548:1: named_argument : identifier '=' attribute_argument_expression ;
    public final CSharpParser.named_argument_return named_argument() throws RecognitionException {
        CSharpParser.named_argument_return retval = new CSharpParser.named_argument_return();
        retval.start = input.LT(1);
        int named_argument_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal525=null;
        CSharpParser.identifier_return identifier524 = null;

        CSharpParser.attribute_argument_expression_return attribute_argument_expression526 = null;


        Object char_literal525_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 148) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:548:15: ( identifier '=' attribute_argument_expression )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:549:3: identifier '=' attribute_argument_expression
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_identifier_in_named_argument4445);
            identifier524=identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier524.getTree());
            char_literal525=(Token)match(input,66,FOLLOW_66_in_named_argument4449); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal525_tree = (Object)adaptor.create(char_literal525);
            adaptor.addChild(root_0, char_literal525_tree);
            }
            pushFollow(FOLLOW_attribute_argument_expression_in_named_argument4453);
            attribute_argument_expression526=attribute_argument_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, attribute_argument_expression526.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 148, named_argument_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "named_argument"

    public static class attribute_argument_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "attribute_argument_expression"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:550:1: attribute_argument_expression : expression ;
    public final CSharpParser.attribute_argument_expression_return attribute_argument_expression() throws RecognitionException {
        CSharpParser.attribute_argument_expression_return retval = new CSharpParser.attribute_argument_expression_return();
        retval.start = input.LT(1);
        int attribute_argument_expression_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.expression_return expression527 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 149) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:550:30: ( expression )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:551:3: expression
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_expression_in_attribute_argument_expression4463);
            expression527=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression527.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 149, attribute_argument_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "attribute_argument_expression"

    public static class class_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "class_declaration"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:557:1: class_declaration : 'class' type_or_generic ( class_base )? ( type_parameter_constraints_clauses )? class_body ( ';' )? ;
    public final CSharpParser.class_declaration_return class_declaration() throws RecognitionException {
        CSharpParser.class_declaration_return retval = new CSharpParser.class_declaration_return();
        retval.start = input.LT(1);
        int class_declaration_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal528=null;
        Token char_literal533=null;
        CSharpParser.type_or_generic_return type_or_generic529 = null;

        CSharpParser.class_base_return class_base530 = null;

        CSharpParser.type_parameter_constraints_clauses_return type_parameter_constraints_clauses531 = null;

        CSharpParser.class_body_return class_body532 = null;


        Object string_literal528_tree=null;
        Object char_literal533_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 150) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:557:18: ( 'class' type_or_generic ( class_base )? ( type_parameter_constraints_clauses )? class_body ( ';' )? )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:558:3: 'class' type_or_generic ( class_base )? ( type_parameter_constraints_clauses )? class_body ( ';' )?
            {
            root_0 = (Object)adaptor.nil();

            string_literal528=(Token)match(input,155,FOLLOW_155_in_class_declaration4477); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal528_tree = (Object)adaptor.create(string_literal528);
            adaptor.addChild(root_0, string_literal528_tree);
            }
            pushFollow(FOLLOW_type_or_generic_in_class_declaration4480);
            type_or_generic529=type_or_generic();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type_or_generic529.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:558:30: ( class_base )?
            int alt145=2;
            int LA145_0 = input.LA(1);

            if ( (LA145_0==90) ) {
                alt145=1;
            }
            switch (alt145) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:558:30: class_base
                    {
                    pushFollow(FOLLOW_class_base_in_class_declaration4484);
                    class_base530=class_base();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, class_base530.getTree());

                    }
                    break;

            }

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:558:44: ( type_parameter_constraints_clauses )?
            int alt146=2;
            int LA146_0 = input.LA(1);

            if ( (LA146_0==145) ) {
                alt146=1;
            }
            switch (alt146) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:558:44: type_parameter_constraints_clauses
                    {
                    pushFollow(FOLLOW_type_parameter_constraints_clauses_in_class_declaration4489);
                    type_parameter_constraints_clauses531=type_parameter_constraints_clauses();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_constraints_clauses531.getTree());

                    }
                    break;

            }

            pushFollow(FOLLOW_class_body_in_class_declaration4494);
            class_body532=class_body();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, class_body532.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:558:95: ( ';' )?
            int alt147=2;
            int LA147_0 = input.LA(1);

            if ( (LA147_0==SEMI) ) {
                alt147=1;
            }
            switch (alt147) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:558:95: ';'
                    {
                    char_literal533=(Token)match(input,SEMI,FOLLOW_SEMI_in_class_declaration4498); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal533_tree = (Object)adaptor.create(char_literal533);
                    adaptor.addChild(root_0, char_literal533_tree);
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 150, class_declaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "class_declaration"

    public static class class_base_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "class_base"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:559:1: class_base : ':' interface_type_list ;
    public final CSharpParser.class_base_return class_base() throws RecognitionException {
        CSharpParser.class_base_return retval = new CSharpParser.class_base_return();
        retval.start = input.LT(1);
        int class_base_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal534=null;
        CSharpParser.interface_type_list_return interface_type_list535 = null;


        Object char_literal534_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 151) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:559:11: ( ':' interface_type_list )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:562:3: ':' interface_type_list
            {
            root_0 = (Object)adaptor.nil();

            char_literal534=(Token)match(input,90,FOLLOW_90_in_class_base4514); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal534_tree = (Object)adaptor.create(char_literal534);
            adaptor.addChild(root_0, char_literal534_tree);
            }
            pushFollow(FOLLOW_interface_type_list_in_class_base4518);
            interface_type_list535=interface_type_list();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_type_list535.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 151, class_base_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "class_base"

    public static class interface_type_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "interface_type_list"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:564:1: interface_type_list : type ( ',' type )* ;
    public final CSharpParser.interface_type_list_return interface_type_list() throws RecognitionException {
        CSharpParser.interface_type_list_return retval = new CSharpParser.interface_type_list_return();
        retval.start = input.LT(1);
        int interface_type_list_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal537=null;
        CSharpParser.type_return type536 = null;

        CSharpParser.type_return type538 = null;


        Object char_literal537_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 152) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:564:20: ( type ( ',' type )* )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:565:3: type ( ',' type )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_type_in_interface_type_list4530);
            type536=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type536.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:565:8: ( ',' type )*
            loop148:
            do {
                int alt148=2;
                int LA148_0 = input.LA(1);

                if ( (LA148_0==89) ) {
                    alt148=1;
                }


                switch (alt148) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:565:9: ',' type
            	    {
            	    char_literal537=(Token)match(input,89,FOLLOW_89_in_interface_type_list4533); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal537_tree = (Object)adaptor.create(char_literal537);
            	    adaptor.addChild(root_0, char_literal537_tree);
            	    }
            	    pushFollow(FOLLOW_type_in_interface_type_list4537);
            	    type538=type();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, type538.getTree());

            	    }
            	    break;

            	default :
            	    break loop148;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 152, interface_type_list_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "interface_type_list"

    public static class class_body_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "class_body"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:567:1: class_body : '{' ( class_member_declarations )? '}' ;
    public final CSharpParser.class_body_return class_body() throws RecognitionException {
        CSharpParser.class_body_return retval = new CSharpParser.class_body_return();
        retval.start = input.LT(1);
        int class_body_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal539=null;
        Token char_literal541=null;
        CSharpParser.class_member_declarations_return class_member_declarations540 = null;


        Object char_literal539_tree=null;
        Object char_literal541_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 153) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:567:11: ( '{' ( class_member_declarations )? '}' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:568:3: '{' ( class_member_declarations )? '}'
            {
            root_0 = (Object)adaptor.nil();

            char_literal539=(Token)match(input,62,FOLLOW_62_in_class_body4549); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal539_tree = (Object)adaptor.create(char_literal539);
            adaptor.addChild(root_0, char_literal539_tree);
            }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:568:9: ( class_member_declarations )?
            int alt149=2;
            int LA149_0 = input.LA(1);

            if ( (LA149_0==IDENTIFIER||LA149_0==ENUM||(LA149_0>=64 && LA149_0<=65)||(LA149_0>=67 && LA149_0<=82)||LA149_0==86||LA149_0==97||LA149_0==106||(LA149_0>=132 && LA149_0<=133)||(LA149_0>=135 && LA149_0<=152)||(LA149_0>=154 && LA149_0<=155)||(LA149_0>=157 && LA149_0<=170)||LA149_0==172||(LA149_0>=174 && LA149_0<=175)||(LA149_0>=177 && LA149_0<=178)||(LA149_0>=195 && LA149_0<=202)) ) {
                alt149=1;
            }
            switch (alt149) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:568:9: class_member_declarations
                    {
                    pushFollow(FOLLOW_class_member_declarations_in_class_body4553);
                    class_member_declarations540=class_member_declarations();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, class_member_declarations540.getTree());

                    }
                    break;

            }

            char_literal541=(Token)match(input,63,FOLLOW_63_in_class_body4558); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal541_tree = (Object)adaptor.create(char_literal541);
            adaptor.addChild(root_0, char_literal541_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 153, class_body_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "class_body"

    public static class class_member_declarations_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "class_member_declarations"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:569:1: class_member_declarations : ( class_member_declaration )+ ;
    public final CSharpParser.class_member_declarations_return class_member_declarations() throws RecognitionException {
        CSharpParser.class_member_declarations_return retval = new CSharpParser.class_member_declarations_return();
        retval.start = input.LT(1);
        int class_member_declarations_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.class_member_declaration_return class_member_declaration542 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 154) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:569:26: ( ( class_member_declaration )+ )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:570:3: ( class_member_declaration )+
            {
            root_0 = (Object)adaptor.nil();

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:570:3: ( class_member_declaration )+
            int cnt150=0;
            loop150:
            do {
                int alt150=2;
                int LA150_0 = input.LA(1);

                if ( (LA150_0==IDENTIFIER||LA150_0==ENUM||(LA150_0>=64 && LA150_0<=65)||(LA150_0>=67 && LA150_0<=82)||LA150_0==86||LA150_0==97||LA150_0==106||(LA150_0>=132 && LA150_0<=133)||(LA150_0>=135 && LA150_0<=152)||(LA150_0>=154 && LA150_0<=155)||(LA150_0>=157 && LA150_0<=170)||LA150_0==172||(LA150_0>=174 && LA150_0<=175)||(LA150_0>=177 && LA150_0<=178)||(LA150_0>=195 && LA150_0<=202)) ) {
                    alt150=1;
                }


                switch (alt150) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:570:3: class_member_declaration
            	    {
            	    pushFollow(FOLLOW_class_member_declaration_in_class_member_declarations4567);
            	    class_member_declaration542=class_member_declaration();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, class_member_declaration542.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt150 >= 1 ) break loop150;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(150, input);
                        throw eee;
                }
                cnt150++;
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 154, class_member_declarations_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "class_member_declarations"

    public static class constant_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "constant_declaration"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:573:1: constant_declaration : 'const' type constant_declarators ';' ;
    public final CSharpParser.constant_declaration_return constant_declaration() throws RecognitionException {
        CSharpParser.constant_declaration_return retval = new CSharpParser.constant_declaration_return();
        retval.start = input.LT(1);
        int constant_declaration_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal543=null;
        Token char_literal546=null;
        CSharpParser.type_return type544 = null;

        CSharpParser.constant_declarators_return constant_declarators545 = null;


        Object string_literal543_tree=null;
        Object char_literal546_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 155) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:573:21: ( 'const' type constant_declarators ';' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:574:3: 'const' type constant_declarators ';'
            {
            root_0 = (Object)adaptor.nil();

            string_literal543=(Token)match(input,81,FOLLOW_81_in_constant_declaration4579); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal543_tree = (Object)adaptor.create(string_literal543);
            adaptor.addChild(root_0, string_literal543_tree);
            }
            pushFollow(FOLLOW_type_in_constant_declaration4583);
            type544=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type544.getTree());
            pushFollow(FOLLOW_constant_declarators_in_constant_declaration4587);
            constant_declarators545=constant_declarators();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, constant_declarators545.getTree());
            char_literal546=(Token)match(input,SEMI,FOLLOW_SEMI_in_constant_declaration4591); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal546_tree = (Object)adaptor.create(char_literal546);
            adaptor.addChild(root_0, char_literal546_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 155, constant_declaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "constant_declaration"

    public static class constant_declarators_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "constant_declarators"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:575:1: constant_declarators : constant_declarator ( ',' constant_declarator )* ;
    public final CSharpParser.constant_declarators_return constant_declarators() throws RecognitionException {
        CSharpParser.constant_declarators_return retval = new CSharpParser.constant_declarators_return();
        retval.start = input.LT(1);
        int constant_declarators_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal548=null;
        CSharpParser.constant_declarator_return constant_declarator547 = null;

        CSharpParser.constant_declarator_return constant_declarator549 = null;


        Object char_literal548_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 156) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:575:21: ( constant_declarator ( ',' constant_declarator )* )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:576:3: constant_declarator ( ',' constant_declarator )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_constant_declarator_in_constant_declarators4600);
            constant_declarator547=constant_declarator();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, constant_declarator547.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:576:23: ( ',' constant_declarator )*
            loop151:
            do {
                int alt151=2;
                int LA151_0 = input.LA(1);

                if ( (LA151_0==89) ) {
                    alt151=1;
                }


                switch (alt151) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:576:24: ',' constant_declarator
            	    {
            	    char_literal548=(Token)match(input,89,FOLLOW_89_in_constant_declarators4603); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal548_tree = (Object)adaptor.create(char_literal548);
            	    adaptor.addChild(root_0, char_literal548_tree);
            	    }
            	    pushFollow(FOLLOW_constant_declarator_in_constant_declarators4605);
            	    constant_declarator549=constant_declarator();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, constant_declarator549.getTree());

            	    }
            	    break;

            	default :
            	    break loop151;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 156, constant_declarators_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "constant_declarators"

    public static class constant_declarator_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "constant_declarator"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:577:1: constant_declarator : identifier ( '=' constant_expression )? ;
    public final CSharpParser.constant_declarator_return constant_declarator() throws RecognitionException {
        CSharpParser.constant_declarator_return retval = new CSharpParser.constant_declarator_return();
        retval.start = input.LT(1);
        int constant_declarator_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal551=null;
        CSharpParser.identifier_return identifier550 = null;

        CSharpParser.constant_expression_return constant_expression552 = null;


        Object char_literal551_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 157) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:577:20: ( identifier ( '=' constant_expression )? )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:578:3: identifier ( '=' constant_expression )?
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_identifier_in_constant_declarator4616);
            identifier550=identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier550.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:578:16: ( '=' constant_expression )?
            int alt152=2;
            int LA152_0 = input.LA(1);

            if ( (LA152_0==66) ) {
                alt152=1;
            }
            switch (alt152) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:578:17: '=' constant_expression
                    {
                    char_literal551=(Token)match(input,66,FOLLOW_66_in_constant_declarator4621); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal551_tree = (Object)adaptor.create(char_literal551);
                    adaptor.addChild(root_0, char_literal551_tree);
                    }
                    pushFollow(FOLLOW_constant_expression_in_constant_declarator4625);
                    constant_expression552=constant_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, constant_expression552.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 157, constant_declarator_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "constant_declarator"

    public static class constant_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "constant_expression"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:579:1: constant_expression : expression ;
    public final CSharpParser.constant_expression_return constant_expression() throws RecognitionException {
        CSharpParser.constant_expression_return retval = new CSharpParser.constant_expression_return();
        retval.start = input.LT(1);
        int constant_expression_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.expression_return expression553 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 158) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:579:20: ( expression )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:580:3: expression
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_expression_in_constant_expression4636);
            expression553=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression553.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 158, constant_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "constant_expression"

    public static class field_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "field_declaration"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:583:1: field_declaration : variable_declarators ';' ;
    public final CSharpParser.field_declaration_return field_declaration() throws RecognitionException {
        CSharpParser.field_declaration_return retval = new CSharpParser.field_declaration_return();
        retval.start = input.LT(1);
        int field_declaration_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal555=null;
        CSharpParser.variable_declarators_return variable_declarators554 = null;


        Object char_literal555_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 159) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:583:18: ( variable_declarators ';' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:584:3: variable_declarators ';'
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_variable_declarators_in_field_declaration4646);
            variable_declarators554=variable_declarators();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, variable_declarators554.getTree());
            char_literal555=(Token)match(input,SEMI,FOLLOW_SEMI_in_field_declaration4650); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal555_tree = (Object)adaptor.create(char_literal555);
            adaptor.addChild(root_0, char_literal555_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 159, field_declaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "field_declaration"

    public static class variable_declarators_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "variable_declarators"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:585:1: variable_declarators : variable_declarator ( ',' variable_declarator )* ;
    public final CSharpParser.variable_declarators_return variable_declarators() throws RecognitionException {
        CSharpParser.variable_declarators_return retval = new CSharpParser.variable_declarators_return();
        retval.start = input.LT(1);
        int variable_declarators_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal557=null;
        CSharpParser.variable_declarator_return variable_declarator556 = null;

        CSharpParser.variable_declarator_return variable_declarator558 = null;


        Object char_literal557_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 160) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:585:21: ( variable_declarator ( ',' variable_declarator )* )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:586:3: variable_declarator ( ',' variable_declarator )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_variable_declarator_in_variable_declarators4660);
            variable_declarator556=variable_declarator();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, variable_declarator556.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:586:23: ( ',' variable_declarator )*
            loop153:
            do {
                int alt153=2;
                int LA153_0 = input.LA(1);

                if ( (LA153_0==89) ) {
                    alt153=1;
                }


                switch (alt153) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:586:24: ',' variable_declarator
            	    {
            	    char_literal557=(Token)match(input,89,FOLLOW_89_in_variable_declarators4663); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal557_tree = (Object)adaptor.create(char_literal557);
            	    adaptor.addChild(root_0, char_literal557_tree);
            	    }
            	    pushFollow(FOLLOW_variable_declarator_in_variable_declarators4667);
            	    variable_declarator558=variable_declarator();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, variable_declarator558.getTree());

            	    }
            	    break;

            	default :
            	    break loop153;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 160, variable_declarators_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "variable_declarators"

    public static class variable_declarator_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "variable_declarator"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:587:1: variable_declarator : type_name ( '=' variable_initializer )? ;
    public final CSharpParser.variable_declarator_return variable_declarator() throws RecognitionException {
        CSharpParser.variable_declarator_return retval = new CSharpParser.variable_declarator_return();
        retval.start = input.LT(1);
        int variable_declarator_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal560=null;
        CSharpParser.type_name_return type_name559 = null;

        CSharpParser.variable_initializer_return variable_initializer561 = null;


        Object char_literal560_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 161) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:587:20: ( type_name ( '=' variable_initializer )? )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:588:3: type_name ( '=' variable_initializer )?
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_type_name_in_variable_declarator4678);
            type_name559=type_name();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type_name559.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:588:13: ( '=' variable_initializer )?
            int alt154=2;
            int LA154_0 = input.LA(1);

            if ( (LA154_0==66) ) {
                alt154=1;
            }
            switch (alt154) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:588:14: '=' variable_initializer
                    {
                    char_literal560=(Token)match(input,66,FOLLOW_66_in_variable_declarator4681); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal560_tree = (Object)adaptor.create(char_literal560);
                    adaptor.addChild(root_0, char_literal560_tree);
                    }
                    pushFollow(FOLLOW_variable_initializer_in_variable_declarator4685);
                    variable_initializer561=variable_initializer();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, variable_initializer561.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 161, variable_declarator_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "variable_declarator"

    public static class method_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "method_declaration"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:591:1: method_declaration : method_header method_body ;
    public final CSharpParser.method_declaration_return method_declaration() throws RecognitionException {
        CSharpParser.method_declaration_return retval = new CSharpParser.method_declaration_return();
        retval.start = input.LT(1);
        int method_declaration_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.method_header_return method_header562 = null;

        CSharpParser.method_body_return method_body563 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 162) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:591:19: ( method_header method_body )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:592:3: method_header method_body
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_method_header_in_method_declaration4701);
            method_header562=method_header();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, method_header562.getTree());
            pushFollow(FOLLOW_method_body_in_method_declaration4705);
            method_body563=method_body();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, method_body563.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 162, method_declaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "method_declaration"

    public static class method_header_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "method_header"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:593:1: method_header : member_name '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )? ;
    public final CSharpParser.method_header_return method_header() throws RecognitionException {
        CSharpParser.method_header_return retval = new CSharpParser.method_header_return();
        retval.start = input.LT(1);
        int method_header_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal565=null;
        Token char_literal567=null;
        CSharpParser.member_name_return member_name564 = null;

        CSharpParser.formal_parameter_list_return formal_parameter_list566 = null;

        CSharpParser.type_parameter_constraints_clauses_return type_parameter_constraints_clauses568 = null;


        Object char_literal565_tree=null;
        Object char_literal567_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 163) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:593:14: ( member_name '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )? )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:594:3: member_name '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )?
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_member_name_in_method_header4714);
            member_name564=member_name();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, member_name564.getTree());
            char_literal565=(Token)match(input,88,FOLLOW_88_in_method_header4717); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal565_tree = (Object)adaptor.create(char_literal565);
            adaptor.addChild(root_0, char_literal565_tree);
            }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:594:22: ( formal_parameter_list )?
            int alt155=2;
            int LA155_0 = input.LA(1);

            if ( (LA155_0==IDENTIFIER||LA155_0==65||(LA155_0>=82 && LA155_0<=83)||LA155_0==86||(LA155_0>=91 && LA155_0<=92)||(LA155_0>=132 && LA155_0<=133)||(LA155_0>=135 && LA155_0<=148)||(LA155_0>=150 && LA155_0<=152)||LA155_0==154||(LA155_0>=157 && LA155_0<=168)||(LA155_0>=170 && LA155_0<=171)||(LA155_0>=177 && LA155_0<=178)||(LA155_0>=195 && LA155_0<=202)) ) {
                alt155=1;
            }
            switch (alt155) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:594:22: formal_parameter_list
                    {
                    pushFollow(FOLLOW_formal_parameter_list_in_method_header4721);
                    formal_parameter_list566=formal_parameter_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, formal_parameter_list566.getTree());

                    }
                    break;

            }

            char_literal567=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_method_header4726); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal567_tree = (Object)adaptor.create(char_literal567);
            adaptor.addChild(root_0, char_literal567_tree);
            }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:594:53: ( type_parameter_constraints_clauses )?
            int alt156=2;
            int LA156_0 = input.LA(1);

            if ( (LA156_0==145) ) {
                alt156=1;
            }
            switch (alt156) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:594:53: type_parameter_constraints_clauses
                    {
                    pushFollow(FOLLOW_type_parameter_constraints_clauses_in_method_header4730);
                    type_parameter_constraints_clauses568=type_parameter_constraints_clauses();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_constraints_clauses568.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 163, method_header_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "method_header"

    public static class method_body_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "method_body"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:595:1: method_body : block ;
    public final CSharpParser.method_body_return method_body() throws RecognitionException {
        CSharpParser.method_body_return retval = new CSharpParser.method_body_return();
        retval.start = input.LT(1);
        int method_body_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.block_return block569 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 164) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:595:12: ( block )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:596:3: block
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_block_in_method_body4740);
            block569=block();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, block569.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 164, method_body_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "method_body"

    public static class member_name_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "member_name"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:597:1: member_name : qid ;
    public final CSharpParser.member_name_return member_name() throws RecognitionException {
        CSharpParser.member_name_return retval = new CSharpParser.member_name_return();
        retval.start = input.LT(1);
        int member_name_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.qid_return qid570 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 165) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:597:12: ( qid )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:598:3: qid
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_qid_in_member_name4749);
            qid570=qid();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, qid570.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 165, member_name_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "member_name"

    public static class property_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "property_declaration"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:601:1: property_declaration : member_name '{' accessor_declarations '}' ;
    public final CSharpParser.property_declaration_return property_declaration() throws RecognitionException {
        CSharpParser.property_declaration_return retval = new CSharpParser.property_declaration_return();
        retval.start = input.LT(1);
        int property_declaration_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal572=null;
        Token char_literal574=null;
        CSharpParser.member_name_return member_name571 = null;

        CSharpParser.accessor_declarations_return accessor_declarations573 = null;


        Object char_literal572_tree=null;
        Object char_literal574_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 166) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:601:21: ( member_name '{' accessor_declarations '}' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:602:3: member_name '{' accessor_declarations '}'
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_member_name_in_property_declaration4763);
            member_name571=member_name();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, member_name571.getTree());
            char_literal572=(Token)match(input,62,FOLLOW_62_in_property_declaration4767); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal572_tree = (Object)adaptor.create(char_literal572);
            adaptor.addChild(root_0, char_literal572_tree);
            }
            pushFollow(FOLLOW_accessor_declarations_in_property_declaration4771);
            accessor_declarations573=accessor_declarations();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, accessor_declarations573.getTree());
            char_literal574=(Token)match(input,63,FOLLOW_63_in_property_declaration4775); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal574_tree = (Object)adaptor.create(char_literal574);
            adaptor.addChild(root_0, char_literal574_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 166, property_declaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "property_declaration"

    public static class accessor_declarations_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "accessor_declarations"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:603:1: accessor_declarations : ( attributes )? ( get_accessor_declaration ( attributes )? ( set_accessor_declaration )? | set_accessor_declaration ( attributes )? ( get_accessor_declaration )? ) ;
    public final CSharpParser.accessor_declarations_return accessor_declarations() throws RecognitionException {
        CSharpParser.accessor_declarations_return retval = new CSharpParser.accessor_declarations_return();
        retval.start = input.LT(1);
        int accessor_declarations_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.attributes_return attributes575 = null;

        CSharpParser.get_accessor_declaration_return get_accessor_declaration576 = null;

        CSharpParser.attributes_return attributes577 = null;

        CSharpParser.set_accessor_declaration_return set_accessor_declaration578 = null;

        CSharpParser.set_accessor_declaration_return set_accessor_declaration579 = null;

        CSharpParser.attributes_return attributes580 = null;

        CSharpParser.get_accessor_declaration_return get_accessor_declaration581 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 167) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:603:22: ( ( attributes )? ( get_accessor_declaration ( attributes )? ( set_accessor_declaration )? | set_accessor_declaration ( attributes )? ( get_accessor_declaration )? ) )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:604:3: ( attributes )? ( get_accessor_declaration ( attributes )? ( set_accessor_declaration )? | set_accessor_declaration ( attributes )? ( get_accessor_declaration )? )
            {
            root_0 = (Object)adaptor.nil();

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:604:3: ( attributes )?
            int alt157=2;
            int LA157_0 = input.LA(1);

            if ( (LA157_0==86) ) {
                alt157=1;
            }
            switch (alt157) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:604:3: attributes
                    {
                    pushFollow(FOLLOW_attributes_in_accessor_declarations4784);
                    attributes575=attributes();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes575.getTree());

                    }
                    break;

            }

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:605:5: ( get_accessor_declaration ( attributes )? ( set_accessor_declaration )? | set_accessor_declaration ( attributes )? ( get_accessor_declaration )? )
            int alt162=2;
            switch ( input.LA(1) ) {
            case 69:
            case 70:
            case 71:
            case 72:
                {
                int LA162_1 = input.LA(2);

                if ( (LA162_1==156) ) {
                    alt162=1;
                }
                else if ( (LA162_1==157) ) {
                    alt162=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 162, 1, input);

                    throw nvae;
                }
                }
                break;
            case 156:
                {
                alt162=1;
                }
                break;
            case 157:
                {
                alt162=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 162, 0, input);

                throw nvae;
            }

            switch (alt162) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:605:6: get_accessor_declaration ( attributes )? ( set_accessor_declaration )?
                    {
                    pushFollow(FOLLOW_get_accessor_declaration_in_accessor_declarations4792);
                    get_accessor_declaration576=get_accessor_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, get_accessor_declaration576.getTree());
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:605:33: ( attributes )?
                    int alt158=2;
                    int LA158_0 = input.LA(1);

                    if ( (LA158_0==86) ) {
                        alt158=1;
                    }
                    switch (alt158) {
                        case 1 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:605:33: attributes
                            {
                            pushFollow(FOLLOW_attributes_in_accessor_declarations4796);
                            attributes577=attributes();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes577.getTree());

                            }
                            break;

                    }

                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:605:47: ( set_accessor_declaration )?
                    int alt159=2;
                    int LA159_0 = input.LA(1);

                    if ( ((LA159_0>=69 && LA159_0<=72)||LA159_0==157) ) {
                        alt159=1;
                    }
                    switch (alt159) {
                        case 1 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:605:47: set_accessor_declaration
                            {
                            pushFollow(FOLLOW_set_accessor_declaration_in_accessor_declarations4801);
                            set_accessor_declaration578=set_accessor_declaration();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, set_accessor_declaration578.getTree());

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:606:7: set_accessor_declaration ( attributes )? ( get_accessor_declaration )?
                    {
                    pushFollow(FOLLOW_set_accessor_declaration_in_accessor_declarations4810);
                    set_accessor_declaration579=set_accessor_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, set_accessor_declaration579.getTree());
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:606:34: ( attributes )?
                    int alt160=2;
                    int LA160_0 = input.LA(1);

                    if ( (LA160_0==86) ) {
                        alt160=1;
                    }
                    switch (alt160) {
                        case 1 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:606:34: attributes
                            {
                            pushFollow(FOLLOW_attributes_in_accessor_declarations4814);
                            attributes580=attributes();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes580.getTree());

                            }
                            break;

                    }

                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:606:48: ( get_accessor_declaration )?
                    int alt161=2;
                    int LA161_0 = input.LA(1);

                    if ( ((LA161_0>=69 && LA161_0<=72)||LA161_0==156) ) {
                        alt161=1;
                    }
                    switch (alt161) {
                        case 1 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:606:48: get_accessor_declaration
                            {
                            pushFollow(FOLLOW_get_accessor_declaration_in_accessor_declarations4819);
                            get_accessor_declaration581=get_accessor_declaration();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, get_accessor_declaration581.getTree());

                            }
                            break;

                    }


                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 167, accessor_declarations_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "accessor_declarations"

    public static class get_accessor_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "get_accessor_declaration"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:607:1: get_accessor_declaration : ( accessor_modifier )? 'get' accessor_body ;
    public final CSharpParser.get_accessor_declaration_return get_accessor_declaration() throws RecognitionException {
        CSharpParser.get_accessor_declaration_return retval = new CSharpParser.get_accessor_declaration_return();
        retval.start = input.LT(1);
        int get_accessor_declaration_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal583=null;
        CSharpParser.accessor_modifier_return accessor_modifier582 = null;

        CSharpParser.accessor_body_return accessor_body584 = null;


        Object string_literal583_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 168) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:607:25: ( ( accessor_modifier )? 'get' accessor_body )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:608:3: ( accessor_modifier )? 'get' accessor_body
            {
            root_0 = (Object)adaptor.nil();

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:608:3: ( accessor_modifier )?
            int alt163=2;
            int LA163_0 = input.LA(1);

            if ( ((LA163_0>=69 && LA163_0<=72)) ) {
                alt163=1;
            }
            switch (alt163) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:608:3: accessor_modifier
                    {
                    pushFollow(FOLLOW_accessor_modifier_in_get_accessor_declaration4830);
                    accessor_modifier582=accessor_modifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, accessor_modifier582.getTree());

                    }
                    break;

            }

            string_literal583=(Token)match(input,156,FOLLOW_156_in_get_accessor_declaration4835); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal583_tree = (Object)adaptor.create(string_literal583);
            adaptor.addChild(root_0, string_literal583_tree);
            }
            pushFollow(FOLLOW_accessor_body_in_get_accessor_declaration4839);
            accessor_body584=accessor_body();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, accessor_body584.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 168, get_accessor_declaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "get_accessor_declaration"

    public static class set_accessor_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "set_accessor_declaration"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:609:1: set_accessor_declaration : ( accessor_modifier )? 'set' accessor_body ;
    public final CSharpParser.set_accessor_declaration_return set_accessor_declaration() throws RecognitionException {
        CSharpParser.set_accessor_declaration_return retval = new CSharpParser.set_accessor_declaration_return();
        retval.start = input.LT(1);
        int set_accessor_declaration_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal586=null;
        CSharpParser.accessor_modifier_return accessor_modifier585 = null;

        CSharpParser.accessor_body_return accessor_body587 = null;


        Object string_literal586_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 169) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:609:25: ( ( accessor_modifier )? 'set' accessor_body )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:610:3: ( accessor_modifier )? 'set' accessor_body
            {
            root_0 = (Object)adaptor.nil();

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:610:3: ( accessor_modifier )?
            int alt164=2;
            int LA164_0 = input.LA(1);

            if ( ((LA164_0>=69 && LA164_0<=72)) ) {
                alt164=1;
            }
            switch (alt164) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:610:3: accessor_modifier
                    {
                    pushFollow(FOLLOW_accessor_modifier_in_set_accessor_declaration4848);
                    accessor_modifier585=accessor_modifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, accessor_modifier585.getTree());

                    }
                    break;

            }

            string_literal586=(Token)match(input,157,FOLLOW_157_in_set_accessor_declaration4853); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal586_tree = (Object)adaptor.create(string_literal586);
            adaptor.addChild(root_0, string_literal586_tree);
            }
            pushFollow(FOLLOW_accessor_body_in_set_accessor_declaration4857);
            accessor_body587=accessor_body();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, accessor_body587.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 169, set_accessor_declaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "set_accessor_declaration"

    public static class accessor_modifier_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "accessor_modifier"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:611:1: accessor_modifier : ( 'public' | 'protected' | 'private' | 'internal' );
    public final CSharpParser.accessor_modifier_return accessor_modifier() throws RecognitionException {
        CSharpParser.accessor_modifier_return retval = new CSharpParser.accessor_modifier_return();
        retval.start = input.LT(1);
        int accessor_modifier_StartIndex = input.index();
        Object root_0 = null;

        Token set588=null;

        Object set588_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 170) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:611:18: ( 'public' | 'protected' | 'private' | 'internal' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:
            {
            root_0 = (Object)adaptor.nil();

            set588=(Token)input.LT(1);
            if ( (input.LA(1)>=69 && input.LA(1)<=72) ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set588));
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 170, accessor_modifier_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "accessor_modifier"

    public static class accessor_body_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "accessor_body"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:613:1: accessor_body : block ;
    public final CSharpParser.accessor_body_return accessor_body() throws RecognitionException {
        CSharpParser.accessor_body_return retval = new CSharpParser.accessor_body_return();
        retval.start = input.LT(1);
        int accessor_body_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.block_return block589 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 171) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:613:14: ( block )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:614:3: block
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_block_in_accessor_body4887);
            block589=block();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, block589.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 171, accessor_body_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "accessor_body"

    public static class event_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "event_declaration"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:617:1: event_declaration : 'event' type ( ( member_name '{' )=> member_name '{' event_accessor_declarations '}' | variable_declarators ';' ) ;
    public final CSharpParser.event_declaration_return event_declaration() throws RecognitionException {
        CSharpParser.event_declaration_return retval = new CSharpParser.event_declaration_return();
        retval.start = input.LT(1);
        int event_declaration_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal590=null;
        Token char_literal593=null;
        Token char_literal595=null;
        Token char_literal597=null;
        CSharpParser.type_return type591 = null;

        CSharpParser.member_name_return member_name592 = null;

        CSharpParser.event_accessor_declarations_return event_accessor_declarations594 = null;

        CSharpParser.variable_declarators_return variable_declarators596 = null;


        Object string_literal590_tree=null;
        Object char_literal593_tree=null;
        Object char_literal595_tree=null;
        Object char_literal597_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 172) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:617:18: ( 'event' type ( ( member_name '{' )=> member_name '{' event_accessor_declarations '}' | variable_declarators ';' ) )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:618:3: 'event' type ( ( member_name '{' )=> member_name '{' event_accessor_declarations '}' | variable_declarators ';' )
            {
            root_0 = (Object)adaptor.nil();

            string_literal590=(Token)match(input,149,FOLLOW_149_in_event_declaration4898); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal590_tree = (Object)adaptor.create(string_literal590);
            adaptor.addChild(root_0, string_literal590_tree);
            }
            pushFollow(FOLLOW_type_in_event_declaration4902);
            type591=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type591.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:619:5: ( ( member_name '{' )=> member_name '{' event_accessor_declarations '}' | variable_declarators ';' )
            int alt165=2;
            int LA165_0 = input.LA(1);

            if ( ((LA165_0>=160 && LA165_0<=168)||(LA165_0>=196 && LA165_0<=201)) && (synpred25_cs())) {
                alt165=1;
            }
            else if ( (LA165_0==IDENTIFIER||LA165_0==65||(LA165_0>=132 && LA165_0<=133)||(LA165_0>=135 && LA165_0<=148)||(LA165_0>=150 && LA165_0<=152)||LA165_0==154||(LA165_0>=157 && LA165_0<=159)||LA165_0==170||(LA165_0>=177 && LA165_0<=178)||LA165_0==195||LA165_0==202) ) {
                int LA165_2 = input.LA(2);

                if ( (synpred25_cs()) ) {
                    alt165=1;
                }
                else if ( (true) ) {
                    alt165=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 165, 2, input);

                    throw nvae;
                }
            }
            else if ( ((LA165_0>=Real_literal && LA165_0<=NULL)) && (synpred25_cs())) {
                alt165=1;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 165, 0, input);

                throw nvae;
            }
            switch (alt165) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:619:6: ( member_name '{' )=> member_name '{' event_accessor_declarations '}'
                    {
                    pushFollow(FOLLOW_member_name_in_event_declaration4919);
                    member_name592=member_name();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, member_name592.getTree());
                    char_literal593=(Token)match(input,62,FOLLOW_62_in_event_declaration4923); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal593_tree = (Object)adaptor.create(char_literal593);
                    adaptor.addChild(root_0, char_literal593_tree);
                    }
                    pushFollow(FOLLOW_event_accessor_declarations_in_event_declaration4927);
                    event_accessor_declarations594=event_accessor_declarations();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, event_accessor_declarations594.getTree());
                    char_literal595=(Token)match(input,63,FOLLOW_63_in_event_declaration4931); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal595_tree = (Object)adaptor.create(char_literal595);
                    adaptor.addChild(root_0, char_literal595_tree);
                    }

                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:620:7: variable_declarators ';'
                    {
                    pushFollow(FOLLOW_variable_declarators_in_event_declaration4939);
                    variable_declarators596=variable_declarators();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, variable_declarators596.getTree());
                    char_literal597=(Token)match(input,SEMI,FOLLOW_SEMI_in_event_declaration4943); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal597_tree = (Object)adaptor.create(char_literal597);
                    adaptor.addChild(root_0, char_literal597_tree);
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 172, event_declaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "event_declaration"

    public static class event_modifiers_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "event_modifiers"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:622:1: event_modifiers : ( modifier )+ ;
    public final CSharpParser.event_modifiers_return event_modifiers() throws RecognitionException {
        CSharpParser.event_modifiers_return retval = new CSharpParser.event_modifiers_return();
        retval.start = input.LT(1);
        int event_modifiers_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.modifier_return modifier598 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 173) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:622:16: ( ( modifier )+ )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:623:3: ( modifier )+
            {
            root_0 = (Object)adaptor.nil();

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:623:3: ( modifier )+
            int cnt166=0;
            loop166:
            do {
                int alt166=2;
                int LA166_0 = input.LA(1);

                if ( (LA166_0==64||(LA166_0>=68 && LA166_0<=80)) ) {
                    alt166=1;
                }


                switch (alt166) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:623:3: modifier
            	    {
            	    pushFollow(FOLLOW_modifier_in_event_modifiers4958);
            	    modifier598=modifier();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, modifier598.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt166 >= 1 ) break loop166;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(166, input);
                        throw eee;
                }
                cnt166++;
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 173, event_modifiers_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "event_modifiers"

    public static class event_accessor_declarations_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "event_accessor_declarations"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:624:1: event_accessor_declarations : ( attributes )? ( ( add_accessor_declaration ( attributes )? remove_accessor_declaration ) | ( remove_accessor_declaration ( attributes )? add_accessor_declaration ) ) ;
    public final CSharpParser.event_accessor_declarations_return event_accessor_declarations() throws RecognitionException {
        CSharpParser.event_accessor_declarations_return retval = new CSharpParser.event_accessor_declarations_return();
        retval.start = input.LT(1);
        int event_accessor_declarations_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.attributes_return attributes599 = null;

        CSharpParser.add_accessor_declaration_return add_accessor_declaration600 = null;

        CSharpParser.attributes_return attributes601 = null;

        CSharpParser.remove_accessor_declaration_return remove_accessor_declaration602 = null;

        CSharpParser.remove_accessor_declaration_return remove_accessor_declaration603 = null;

        CSharpParser.attributes_return attributes604 = null;

        CSharpParser.add_accessor_declaration_return add_accessor_declaration605 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 174) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:624:28: ( ( attributes )? ( ( add_accessor_declaration ( attributes )? remove_accessor_declaration ) | ( remove_accessor_declaration ( attributes )? add_accessor_declaration ) ) )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:625:3: ( attributes )? ( ( add_accessor_declaration ( attributes )? remove_accessor_declaration ) | ( remove_accessor_declaration ( attributes )? add_accessor_declaration ) )
            {
            root_0 = (Object)adaptor.nil();

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:625:3: ( attributes )?
            int alt167=2;
            int LA167_0 = input.LA(1);

            if ( (LA167_0==86) ) {
                alt167=1;
            }
            switch (alt167) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:625:3: attributes
                    {
                    pushFollow(FOLLOW_attributes_in_event_accessor_declarations4968);
                    attributes599=attributes();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes599.getTree());

                    }
                    break;

            }

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:625:17: ( ( add_accessor_declaration ( attributes )? remove_accessor_declaration ) | ( remove_accessor_declaration ( attributes )? add_accessor_declaration ) )
            int alt170=2;
            int LA170_0 = input.LA(1);

            if ( (LA170_0==158) ) {
                alt170=1;
            }
            else if ( (LA170_0==159) ) {
                alt170=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 170, 0, input);

                throw nvae;
            }
            switch (alt170) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:625:18: ( add_accessor_declaration ( attributes )? remove_accessor_declaration )
                    {
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:625:18: ( add_accessor_declaration ( attributes )? remove_accessor_declaration )
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:625:19: add_accessor_declaration ( attributes )? remove_accessor_declaration
                    {
                    pushFollow(FOLLOW_add_accessor_declaration_in_event_accessor_declarations4975);
                    add_accessor_declaration600=add_accessor_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, add_accessor_declaration600.getTree());
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:625:46: ( attributes )?
                    int alt168=2;
                    int LA168_0 = input.LA(1);

                    if ( (LA168_0==86) ) {
                        alt168=1;
                    }
                    switch (alt168) {
                        case 1 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:625:46: attributes
                            {
                            pushFollow(FOLLOW_attributes_in_event_accessor_declarations4979);
                            attributes601=attributes();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes601.getTree());

                            }
                            break;

                    }

                    pushFollow(FOLLOW_remove_accessor_declaration_in_event_accessor_declarations4984);
                    remove_accessor_declaration602=remove_accessor_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, remove_accessor_declaration602.getTree());

                    }


                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:626:19: ( remove_accessor_declaration ( attributes )? add_accessor_declaration )
                    {
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:626:19: ( remove_accessor_declaration ( attributes )? add_accessor_declaration )
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:626:20: remove_accessor_declaration ( attributes )? add_accessor_declaration
                    {
                    pushFollow(FOLLOW_remove_accessor_declaration_in_event_accessor_declarations5006);
                    remove_accessor_declaration603=remove_accessor_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, remove_accessor_declaration603.getTree());
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:626:50: ( attributes )?
                    int alt169=2;
                    int LA169_0 = input.LA(1);

                    if ( (LA169_0==86) ) {
                        alt169=1;
                    }
                    switch (alt169) {
                        case 1 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:626:50: attributes
                            {
                            pushFollow(FOLLOW_attributes_in_event_accessor_declarations5010);
                            attributes604=attributes();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes604.getTree());

                            }
                            break;

                    }

                    pushFollow(FOLLOW_add_accessor_declaration_in_event_accessor_declarations5015);
                    add_accessor_declaration605=add_accessor_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, add_accessor_declaration605.getTree());

                    }


                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 174, event_accessor_declarations_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "event_accessor_declarations"

    public static class add_accessor_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "add_accessor_declaration"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:627:1: add_accessor_declaration : 'add' block ;
    public final CSharpParser.add_accessor_declaration_return add_accessor_declaration() throws RecognitionException {
        CSharpParser.add_accessor_declaration_return retval = new CSharpParser.add_accessor_declaration_return();
        retval.start = input.LT(1);
        int add_accessor_declaration_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal606=null;
        CSharpParser.block_return block607 = null;


        Object string_literal606_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 175) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:627:25: ( 'add' block )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:628:3: 'add' block
            {
            root_0 = (Object)adaptor.nil();

            string_literal606=(Token)match(input,158,FOLLOW_158_in_add_accessor_declaration5026); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal606_tree = (Object)adaptor.create(string_literal606);
            adaptor.addChild(root_0, string_literal606_tree);
            }
            pushFollow(FOLLOW_block_in_add_accessor_declaration5030);
            block607=block();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, block607.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 175, add_accessor_declaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "add_accessor_declaration"

    public static class remove_accessor_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "remove_accessor_declaration"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:629:1: remove_accessor_declaration : 'remove' block ;
    public final CSharpParser.remove_accessor_declaration_return remove_accessor_declaration() throws RecognitionException {
        CSharpParser.remove_accessor_declaration_return retval = new CSharpParser.remove_accessor_declaration_return();
        retval.start = input.LT(1);
        int remove_accessor_declaration_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal608=null;
        CSharpParser.block_return block609 = null;


        Object string_literal608_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 176) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:629:28: ( 'remove' block )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:630:3: 'remove' block
            {
            root_0 = (Object)adaptor.nil();

            string_literal608=(Token)match(input,159,FOLLOW_159_in_remove_accessor_declaration5039); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal608_tree = (Object)adaptor.create(string_literal608);
            adaptor.addChild(root_0, string_literal608_tree);
            }
            pushFollow(FOLLOW_block_in_remove_accessor_declaration5043);
            block609=block();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, block609.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 176, remove_accessor_declaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "remove_accessor_declaration"

    public static class enum_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "enum_declaration"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:635:1: enum_declaration : 'enum' identifier ( enum_base )? enum_body ( ';' )? ;
    public final CSharpParser.enum_declaration_return enum_declaration() throws RecognitionException {
        CSharpParser.enum_declaration_return retval = new CSharpParser.enum_declaration_return();
        retval.start = input.LT(1);
        int enum_declaration_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal610=null;
        Token char_literal614=null;
        CSharpParser.identifier_return identifier611 = null;

        CSharpParser.enum_base_return enum_base612 = null;

        CSharpParser.enum_body_return enum_body613 = null;


        Object string_literal610_tree=null;
        Object char_literal614_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 177) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:635:17: ( 'enum' identifier ( enum_base )? enum_body ( ';' )? )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:636:3: 'enum' identifier ( enum_base )? enum_body ( ';' )?
            {
            root_0 = (Object)adaptor.nil();

            string_literal610=(Token)match(input,ENUM,FOLLOW_ENUM_in_enum_declaration5056); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal610_tree = (Object)adaptor.create(string_literal610);
            adaptor.addChild(root_0, string_literal610_tree);
            }
            pushFollow(FOLLOW_identifier_in_enum_declaration5060);
            identifier611=identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier611.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:636:25: ( enum_base )?
            int alt171=2;
            int LA171_0 = input.LA(1);

            if ( (LA171_0==90) ) {
                alt171=1;
            }
            switch (alt171) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:636:25: enum_base
                    {
                    pushFollow(FOLLOW_enum_base_in_enum_declaration5064);
                    enum_base612=enum_base();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, enum_base612.getTree());

                    }
                    break;

            }

            pushFollow(FOLLOW_enum_body_in_enum_declaration5069);
            enum_body613=enum_body();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, enum_body613.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:636:50: ( ';' )?
            int alt172=2;
            int LA172_0 = input.LA(1);

            if ( (LA172_0==SEMI) ) {
                alt172=1;
            }
            switch (alt172) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:636:50: ';'
                    {
                    char_literal614=(Token)match(input,SEMI,FOLLOW_SEMI_in_enum_declaration5073); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal614_tree = (Object)adaptor.create(char_literal614);
                    adaptor.addChild(root_0, char_literal614_tree);
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 177, enum_declaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "enum_declaration"

    public static class enum_base_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "enum_base"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:637:1: enum_base : ':' integral_type ;
    public final CSharpParser.enum_base_return enum_base() throws RecognitionException {
        CSharpParser.enum_base_return retval = new CSharpParser.enum_base_return();
        retval.start = input.LT(1);
        int enum_base_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal615=null;
        CSharpParser.integral_type_return integral_type616 = null;


        Object char_literal615_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 178) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:637:10: ( ':' integral_type )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:638:3: ':' integral_type
            {
            root_0 = (Object)adaptor.nil();

            char_literal615=(Token)match(input,90,FOLLOW_90_in_enum_base5083); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal615_tree = (Object)adaptor.create(char_literal615);
            adaptor.addChild(root_0, char_literal615_tree);
            }
            pushFollow(FOLLOW_integral_type_in_enum_base5087);
            integral_type616=integral_type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, integral_type616.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 178, enum_base_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "enum_base"

    public static class enum_body_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "enum_body"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:639:1: enum_body : '{' ( enum_member_declarations ( ',' )? )? '}' ;
    public final CSharpParser.enum_body_return enum_body() throws RecognitionException {
        CSharpParser.enum_body_return retval = new CSharpParser.enum_body_return();
        retval.start = input.LT(1);
        int enum_body_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal617=null;
        Token char_literal619=null;
        Token char_literal620=null;
        CSharpParser.enum_member_declarations_return enum_member_declarations618 = null;


        Object char_literal617_tree=null;
        Object char_literal619_tree=null;
        Object char_literal620_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 179) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:639:10: ( '{' ( enum_member_declarations ( ',' )? )? '}' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:640:3: '{' ( enum_member_declarations ( ',' )? )? '}'
            {
            root_0 = (Object)adaptor.nil();

            char_literal617=(Token)match(input,62,FOLLOW_62_in_enum_body5096); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal617_tree = (Object)adaptor.create(char_literal617);
            adaptor.addChild(root_0, char_literal617_tree);
            }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:640:7: ( enum_member_declarations ( ',' )? )?
            int alt174=2;
            int LA174_0 = input.LA(1);

            if ( (LA174_0==IDENTIFIER||LA174_0==65||LA174_0==86||(LA174_0>=132 && LA174_0<=133)||(LA174_0>=135 && LA174_0<=148)||(LA174_0>=150 && LA174_0<=152)||LA174_0==154||(LA174_0>=157 && LA174_0<=159)||LA174_0==170||(LA174_0>=177 && LA174_0<=178)||LA174_0==195||LA174_0==202) ) {
                alt174=1;
            }
            switch (alt174) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:640:8: enum_member_declarations ( ',' )?
                    {
                    pushFollow(FOLLOW_enum_member_declarations_in_enum_body5099);
                    enum_member_declarations618=enum_member_declarations();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, enum_member_declarations618.getTree());
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:640:33: ( ',' )?
                    int alt173=2;
                    int LA173_0 = input.LA(1);

                    if ( (LA173_0==89) ) {
                        alt173=1;
                    }
                    switch (alt173) {
                        case 1 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:640:33: ','
                            {
                            char_literal619=(Token)match(input,89,FOLLOW_89_in_enum_body5101); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            char_literal619_tree = (Object)adaptor.create(char_literal619);
                            adaptor.addChild(root_0, char_literal619_tree);
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            char_literal620=(Token)match(input,63,FOLLOW_63_in_enum_body5108); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal620_tree = (Object)adaptor.create(char_literal620);
            adaptor.addChild(root_0, char_literal620_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 179, enum_body_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "enum_body"

    public static class enum_member_declarations_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "enum_member_declarations"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:641:1: enum_member_declarations : enum_member_declaration ( ',' enum_member_declaration )* ;
    public final CSharpParser.enum_member_declarations_return enum_member_declarations() throws RecognitionException {
        CSharpParser.enum_member_declarations_return retval = new CSharpParser.enum_member_declarations_return();
        retval.start = input.LT(1);
        int enum_member_declarations_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal622=null;
        CSharpParser.enum_member_declaration_return enum_member_declaration621 = null;

        CSharpParser.enum_member_declaration_return enum_member_declaration623 = null;


        Object char_literal622_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 180) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:641:25: ( enum_member_declaration ( ',' enum_member_declaration )* )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:642:3: enum_member_declaration ( ',' enum_member_declaration )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_enum_member_declaration_in_enum_member_declarations5117);
            enum_member_declaration621=enum_member_declaration();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, enum_member_declaration621.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:642:27: ( ',' enum_member_declaration )*
            loop175:
            do {
                int alt175=2;
                int LA175_0 = input.LA(1);

                if ( (LA175_0==89) ) {
                    int LA175_1 = input.LA(2);

                    if ( (LA175_1==IDENTIFIER||LA175_1==65||LA175_1==86||(LA175_1>=132 && LA175_1<=133)||(LA175_1>=135 && LA175_1<=148)||(LA175_1>=150 && LA175_1<=152)||LA175_1==154||(LA175_1>=157 && LA175_1<=159)||LA175_1==170||(LA175_1>=177 && LA175_1<=178)||LA175_1==195||LA175_1==202) ) {
                        alt175=1;
                    }


                }


                switch (alt175) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:642:28: ',' enum_member_declaration
            	    {
            	    char_literal622=(Token)match(input,89,FOLLOW_89_in_enum_member_declarations5120); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal622_tree = (Object)adaptor.create(char_literal622);
            	    adaptor.addChild(root_0, char_literal622_tree);
            	    }
            	    pushFollow(FOLLOW_enum_member_declaration_in_enum_member_declarations5122);
            	    enum_member_declaration623=enum_member_declaration();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, enum_member_declaration623.getTree());

            	    }
            	    break;

            	default :
            	    break loop175;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 180, enum_member_declarations_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "enum_member_declarations"

    public static class enum_member_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "enum_member_declaration"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:643:1: enum_member_declaration : ( attributes )? identifier ( '=' expression )? ;
    public final CSharpParser.enum_member_declaration_return enum_member_declaration() throws RecognitionException {
        CSharpParser.enum_member_declaration_return retval = new CSharpParser.enum_member_declaration_return();
        retval.start = input.LT(1);
        int enum_member_declaration_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal626=null;
        CSharpParser.attributes_return attributes624 = null;

        CSharpParser.identifier_return identifier625 = null;

        CSharpParser.expression_return expression627 = null;


        Object char_literal626_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 181) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:643:24: ( ( attributes )? identifier ( '=' expression )? )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:644:3: ( attributes )? identifier ( '=' expression )?
            {
            root_0 = (Object)adaptor.nil();

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:644:3: ( attributes )?
            int alt176=2;
            int LA176_0 = input.LA(1);

            if ( (LA176_0==86) ) {
                alt176=1;
            }
            switch (alt176) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:644:3: attributes
                    {
                    pushFollow(FOLLOW_attributes_in_enum_member_declaration5133);
                    attributes624=attributes();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes624.getTree());

                    }
                    break;

            }

            pushFollow(FOLLOW_identifier_in_enum_member_declaration5138);
            identifier625=identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier625.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:644:30: ( '=' expression )?
            int alt177=2;
            int LA177_0 = input.LA(1);

            if ( (LA177_0==66) ) {
                alt177=1;
            }
            switch (alt177) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:644:31: '=' expression
                    {
                    char_literal626=(Token)match(input,66,FOLLOW_66_in_enum_member_declaration5143); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal626_tree = (Object)adaptor.create(char_literal626);
                    adaptor.addChild(root_0, char_literal626_tree);
                    }
                    pushFollow(FOLLOW_expression_in_enum_member_declaration5147);
                    expression627=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression627.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 181, enum_member_declaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "enum_member_declaration"

    public static class integral_type_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "integral_type"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:649:1: integral_type : ( 'sbyte' | 'byte' | 'short' | 'ushort' | 'int' | 'uint' | 'long' | 'ulong' | 'char' );
    public final CSharpParser.integral_type_return integral_type() throws RecognitionException {
        CSharpParser.integral_type_return retval = new CSharpParser.integral_type_return();
        retval.start = input.LT(1);
        int integral_type_StartIndex = input.index();
        Object root_0 = null;

        Token set628=null;

        Object set628_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 182) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:649:14: ( 'sbyte' | 'byte' | 'short' | 'ushort' | 'int' | 'uint' | 'long' | 'ulong' | 'char' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:
            {
            root_0 = (Object)adaptor.nil();

            set628=(Token)input.LT(1);
            if ( (input.LA(1)>=160 && input.LA(1)<=168) ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set628));
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 182, integral_type_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "integral_type"

    public static class delegate_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "delegate_declaration"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:653:1: delegate_declaration : 'delegate' return_type identifier ( variant_generic_parameter_list )? '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )? ';' ;
    public final CSharpParser.delegate_declaration_return delegate_declaration() throws RecognitionException {
        CSharpParser.delegate_declaration_return retval = new CSharpParser.delegate_declaration_return();
        retval.start = input.LT(1);
        int delegate_declaration_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal629=null;
        Token char_literal633=null;
        Token char_literal635=null;
        Token char_literal637=null;
        CSharpParser.return_type_return return_type630 = null;

        CSharpParser.identifier_return identifier631 = null;

        CSharpParser.variant_generic_parameter_list_return variant_generic_parameter_list632 = null;

        CSharpParser.formal_parameter_list_return formal_parameter_list634 = null;

        CSharpParser.type_parameter_constraints_clauses_return type_parameter_constraints_clauses636 = null;


        Object string_literal629_tree=null;
        Object char_literal633_tree=null;
        Object char_literal635_tree=null;
        Object char_literal637_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 183) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:653:21: ( 'delegate' return_type identifier ( variant_generic_parameter_list )? '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )? ';' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:654:3: 'delegate' return_type identifier ( variant_generic_parameter_list )? '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )? ';'
            {
            root_0 = (Object)adaptor.nil();

            string_literal629=(Token)match(input,97,FOLLOW_97_in_delegate_declaration5206); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal629_tree = (Object)adaptor.create(string_literal629);
            adaptor.addChild(root_0, string_literal629_tree);
            }
            pushFollow(FOLLOW_return_type_in_delegate_declaration5210);
            return_type630=return_type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, return_type630.getTree());
            pushFollow(FOLLOW_identifier_in_delegate_declaration5214);
            identifier631=identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier631.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:654:42: ( variant_generic_parameter_list )?
            int alt178=2;
            int LA178_0 = input.LA(1);

            if ( (LA178_0==99) ) {
                alt178=1;
            }
            switch (alt178) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:654:42: variant_generic_parameter_list
                    {
                    pushFollow(FOLLOW_variant_generic_parameter_list_in_delegate_declaration5217);
                    variant_generic_parameter_list632=variant_generic_parameter_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, variant_generic_parameter_list632.getTree());

                    }
                    break;

            }

            char_literal633=(Token)match(input,88,FOLLOW_88_in_delegate_declaration5227); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal633_tree = (Object)adaptor.create(char_literal633);
            adaptor.addChild(root_0, char_literal633_tree);
            }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:655:11: ( formal_parameter_list )?
            int alt179=2;
            int LA179_0 = input.LA(1);

            if ( (LA179_0==IDENTIFIER||LA179_0==65||(LA179_0>=82 && LA179_0<=83)||LA179_0==86||(LA179_0>=91 && LA179_0<=92)||(LA179_0>=132 && LA179_0<=133)||(LA179_0>=135 && LA179_0<=148)||(LA179_0>=150 && LA179_0<=152)||LA179_0==154||(LA179_0>=157 && LA179_0<=168)||(LA179_0>=170 && LA179_0<=171)||(LA179_0>=177 && LA179_0<=178)||(LA179_0>=195 && LA179_0<=202)) ) {
                alt179=1;
            }
            switch (alt179) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:655:11: formal_parameter_list
                    {
                    pushFollow(FOLLOW_formal_parameter_list_in_delegate_declaration5231);
                    formal_parameter_list634=formal_parameter_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, formal_parameter_list634.getTree());

                    }
                    break;

            }

            char_literal635=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_delegate_declaration5236); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal635_tree = (Object)adaptor.create(char_literal635);
            adaptor.addChild(root_0, char_literal635_tree);
            }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:655:42: ( type_parameter_constraints_clauses )?
            int alt180=2;
            int LA180_0 = input.LA(1);

            if ( (LA180_0==145) ) {
                alt180=1;
            }
            switch (alt180) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:655:42: type_parameter_constraints_clauses
                    {
                    pushFollow(FOLLOW_type_parameter_constraints_clauses_in_delegate_declaration5240);
                    type_parameter_constraints_clauses636=type_parameter_constraints_clauses();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_constraints_clauses636.getTree());

                    }
                    break;

            }

            char_literal637=(Token)match(input,SEMI,FOLLOW_SEMI_in_delegate_declaration5245); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal637_tree = (Object)adaptor.create(char_literal637);
            adaptor.addChild(root_0, char_literal637_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 183, delegate_declaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "delegate_declaration"

    public static class delegate_modifiers_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "delegate_modifiers"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:656:1: delegate_modifiers : ( modifier )+ ;
    public final CSharpParser.delegate_modifiers_return delegate_modifiers() throws RecognitionException {
        CSharpParser.delegate_modifiers_return retval = new CSharpParser.delegate_modifiers_return();
        retval.start = input.LT(1);
        int delegate_modifiers_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.modifier_return modifier638 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 184) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:656:19: ( ( modifier )+ )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:657:3: ( modifier )+
            {
            root_0 = (Object)adaptor.nil();

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:657:3: ( modifier )+
            int cnt181=0;
            loop181:
            do {
                int alt181=2;
                int LA181_0 = input.LA(1);

                if ( (LA181_0==64||(LA181_0>=68 && LA181_0<=80)) ) {
                    alt181=1;
                }


                switch (alt181) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:657:3: modifier
            	    {
            	    pushFollow(FOLLOW_modifier_in_delegate_modifiers5254);
            	    modifier638=modifier();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, modifier638.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt181 >= 1 ) break loop181;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(181, input);
                        throw eee;
                }
                cnt181++;
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 184, delegate_modifiers_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "delegate_modifiers"

    public static class variant_generic_parameter_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "variant_generic_parameter_list"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:659:1: variant_generic_parameter_list : '<' variant_type_parameters '>' ;
    public final CSharpParser.variant_generic_parameter_list_return variant_generic_parameter_list() throws RecognitionException {
        CSharpParser.variant_generic_parameter_list_return retval = new CSharpParser.variant_generic_parameter_list_return();
        retval.start = input.LT(1);
        int variant_generic_parameter_list_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal639=null;
        Token char_literal641=null;
        CSharpParser.variant_type_parameters_return variant_type_parameters640 = null;


        Object char_literal639_tree=null;
        Object char_literal641_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 185) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:659:31: ( '<' variant_type_parameters '>' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:660:3: '<' variant_type_parameters '>'
            {
            root_0 = (Object)adaptor.nil();

            char_literal639=(Token)match(input,99,FOLLOW_99_in_variant_generic_parameter_list5265); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal639_tree = (Object)adaptor.create(char_literal639);
            adaptor.addChild(root_0, char_literal639_tree);
            }
            pushFollow(FOLLOW_variant_type_parameters_in_variant_generic_parameter_list5269);
            variant_type_parameters640=variant_type_parameters();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, variant_type_parameters640.getTree());
            char_literal641=(Token)match(input,GT,FOLLOW_GT_in_variant_generic_parameter_list5273); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal641_tree = (Object)adaptor.create(char_literal641);
            adaptor.addChild(root_0, char_literal641_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 185, variant_generic_parameter_list_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "variant_generic_parameter_list"

    public static class variant_type_parameters_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "variant_type_parameters"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:661:1: variant_type_parameters : variant_type_variable_name ( ',' variant_type_variable_name )* ;
    public final CSharpParser.variant_type_parameters_return variant_type_parameters() throws RecognitionException {
        CSharpParser.variant_type_parameters_return retval = new CSharpParser.variant_type_parameters_return();
        retval.start = input.LT(1);
        int variant_type_parameters_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal643=null;
        CSharpParser.variant_type_variable_name_return variant_type_variable_name642 = null;

        CSharpParser.variant_type_variable_name_return variant_type_variable_name644 = null;


        Object char_literal643_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 186) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:661:24: ( variant_type_variable_name ( ',' variant_type_variable_name )* )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:662:3: variant_type_variable_name ( ',' variant_type_variable_name )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_variant_type_variable_name_in_variant_type_parameters5282);
            variant_type_variable_name642=variant_type_variable_name();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, variant_type_variable_name642.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:662:30: ( ',' variant_type_variable_name )*
            loop182:
            do {
                int alt182=2;
                int LA182_0 = input.LA(1);

                if ( (LA182_0==89) ) {
                    alt182=1;
                }


                switch (alt182) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:662:31: ',' variant_type_variable_name
            	    {
            	    char_literal643=(Token)match(input,89,FOLLOW_89_in_variant_type_parameters5285); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal643_tree = (Object)adaptor.create(char_literal643);
            	    adaptor.addChild(root_0, char_literal643_tree);
            	    }
            	    pushFollow(FOLLOW_variant_type_variable_name_in_variant_type_parameters5287);
            	    variant_type_variable_name644=variant_type_variable_name();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, variant_type_variable_name644.getTree());

            	    }
            	    break;

            	default :
            	    break loop182;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 186, variant_type_parameters_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "variant_type_parameters"

    public static class variant_type_variable_name_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "variant_type_variable_name"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:663:1: variant_type_variable_name : ( attributes )? ( variance_annotation )? type_variable_name ;
    public final CSharpParser.variant_type_variable_name_return variant_type_variable_name() throws RecognitionException {
        CSharpParser.variant_type_variable_name_return retval = new CSharpParser.variant_type_variable_name_return();
        retval.start = input.LT(1);
        int variant_type_variable_name_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.attributes_return attributes645 = null;

        CSharpParser.variance_annotation_return variance_annotation646 = null;

        CSharpParser.type_variable_name_return type_variable_name647 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 187) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:663:27: ( ( attributes )? ( variance_annotation )? type_variable_name )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:664:3: ( attributes )? ( variance_annotation )? type_variable_name
            {
            root_0 = (Object)adaptor.nil();

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:664:3: ( attributes )?
            int alt183=2;
            int LA183_0 = input.LA(1);

            if ( (LA183_0==86) ) {
                alt183=1;
            }
            switch (alt183) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:664:3: attributes
                    {
                    pushFollow(FOLLOW_attributes_in_variant_type_variable_name5298);
                    attributes645=attributes();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes645.getTree());

                    }
                    break;

            }

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:664:17: ( variance_annotation )?
            int alt184=2;
            int LA184_0 = input.LA(1);

            if ( (LA184_0==91||LA184_0==134) ) {
                alt184=1;
            }
            switch (alt184) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:664:17: variance_annotation
                    {
                    pushFollow(FOLLOW_variance_annotation_in_variant_type_variable_name5303);
                    variance_annotation646=variance_annotation();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, variance_annotation646.getTree());

                    }
                    break;

            }

            pushFollow(FOLLOW_type_variable_name_in_variant_type_variable_name5308);
            type_variable_name647=type_variable_name();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type_variable_name647.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 187, variant_type_variable_name_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "variant_type_variable_name"

    public static class variance_annotation_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "variance_annotation"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:665:1: variance_annotation : ( 'in' | 'out' );
    public final CSharpParser.variance_annotation_return variance_annotation() throws RecognitionException {
        CSharpParser.variance_annotation_return retval = new CSharpParser.variance_annotation_return();
        retval.start = input.LT(1);
        int variance_annotation_StartIndex = input.index();
        Object root_0 = null;

        Token set648=null;

        Object set648_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 188) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:665:20: ( 'in' | 'out' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:
            {
            root_0 = (Object)adaptor.nil();

            set648=(Token)input.LT(1);
            if ( input.LA(1)==91||input.LA(1)==134 ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set648));
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 188, variance_annotation_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "variance_annotation"

    public static class type_parameter_constraints_clauses_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "type_parameter_constraints_clauses"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:668:1: type_parameter_constraints_clauses : type_parameter_constraints_clause ( ',' type_parameter_constraints_clause )* ;
    public final CSharpParser.type_parameter_constraints_clauses_return type_parameter_constraints_clauses() throws RecognitionException {
        CSharpParser.type_parameter_constraints_clauses_return retval = new CSharpParser.type_parameter_constraints_clauses_return();
        retval.start = input.LT(1);
        int type_parameter_constraints_clauses_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal650=null;
        CSharpParser.type_parameter_constraints_clause_return type_parameter_constraints_clause649 = null;

        CSharpParser.type_parameter_constraints_clause_return type_parameter_constraints_clause651 = null;


        Object char_literal650_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 189) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:668:35: ( type_parameter_constraints_clause ( ',' type_parameter_constraints_clause )* )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:669:3: type_parameter_constraints_clause ( ',' type_parameter_constraints_clause )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_type_parameter_constraints_clause_in_type_parameter_constraints_clauses5331);
            type_parameter_constraints_clause649=type_parameter_constraints_clause();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_constraints_clause649.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:669:39: ( ',' type_parameter_constraints_clause )*
            loop185:
            do {
                int alt185=2;
                int LA185_0 = input.LA(1);

                if ( (LA185_0==89) ) {
                    alt185=1;
                }


                switch (alt185) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:669:40: ',' type_parameter_constraints_clause
            	    {
            	    char_literal650=(Token)match(input,89,FOLLOW_89_in_type_parameter_constraints_clauses5336); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal650_tree = (Object)adaptor.create(char_literal650);
            	    adaptor.addChild(root_0, char_literal650_tree);
            	    }
            	    pushFollow(FOLLOW_type_parameter_constraints_clause_in_type_parameter_constraints_clauses5340);
            	    type_parameter_constraints_clause651=type_parameter_constraints_clause();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_constraints_clause651.getTree());

            	    }
            	    break;

            	default :
            	    break loop185;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 189, type_parameter_constraints_clauses_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "type_parameter_constraints_clauses"

    public static class type_parameter_constraints_clause_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "type_parameter_constraints_clause"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:670:1: type_parameter_constraints_clause : 'where' type_variable_name ':' type_parameter_constraint_list ;
    public final CSharpParser.type_parameter_constraints_clause_return type_parameter_constraints_clause() throws RecognitionException {
        CSharpParser.type_parameter_constraints_clause_return retval = new CSharpParser.type_parameter_constraints_clause_return();
        retval.start = input.LT(1);
        int type_parameter_constraints_clause_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal652=null;
        Token char_literal654=null;
        CSharpParser.type_variable_name_return type_variable_name653 = null;

        CSharpParser.type_parameter_constraint_list_return type_parameter_constraint_list655 = null;


        Object string_literal652_tree=null;
        Object char_literal654_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 190) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:670:34: ( 'where' type_variable_name ':' type_parameter_constraint_list )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:671:3: 'where' type_variable_name ':' type_parameter_constraint_list
            {
            root_0 = (Object)adaptor.nil();

            string_literal652=(Token)match(input,145,FOLLOW_145_in_type_parameter_constraints_clause5351); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal652_tree = (Object)adaptor.create(string_literal652);
            adaptor.addChild(root_0, string_literal652_tree);
            }
            pushFollow(FOLLOW_type_variable_name_in_type_parameter_constraints_clause5355);
            type_variable_name653=type_variable_name();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type_variable_name653.getTree());
            char_literal654=(Token)match(input,90,FOLLOW_90_in_type_parameter_constraints_clause5359); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal654_tree = (Object)adaptor.create(char_literal654);
            adaptor.addChild(root_0, char_literal654_tree);
            }
            pushFollow(FOLLOW_type_parameter_constraint_list_in_type_parameter_constraints_clause5363);
            type_parameter_constraint_list655=type_parameter_constraint_list();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_constraint_list655.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 190, type_parameter_constraints_clause_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "type_parameter_constraints_clause"

    public static class type_parameter_constraint_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "type_parameter_constraint_list"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:673:1: type_parameter_constraint_list : ( ( 'class' | 'struct' ) ( ',' secondary_constraint_list )? ( ',' constructor_constraint )? | secondary_constraint_list ( ',' constructor_constraint )? | constructor_constraint );
    public final CSharpParser.type_parameter_constraint_list_return type_parameter_constraint_list() throws RecognitionException {
        CSharpParser.type_parameter_constraint_list_return retval = new CSharpParser.type_parameter_constraint_list_return();
        retval.start = input.LT(1);
        int type_parameter_constraint_list_StartIndex = input.index();
        Object root_0 = null;

        Token set656=null;
        Token char_literal657=null;
        Token char_literal659=null;
        Token char_literal662=null;
        CSharpParser.secondary_constraint_list_return secondary_constraint_list658 = null;

        CSharpParser.constructor_constraint_return constructor_constraint660 = null;

        CSharpParser.secondary_constraint_list_return secondary_constraint_list661 = null;

        CSharpParser.constructor_constraint_return constructor_constraint663 = null;

        CSharpParser.constructor_constraint_return constructor_constraint664 = null;


        Object set656_tree=null;
        Object char_literal657_tree=null;
        Object char_literal659_tree=null;
        Object char_literal662_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 191) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:673:31: ( ( 'class' | 'struct' ) ( ',' secondary_constraint_list )? ( ',' constructor_constraint )? | secondary_constraint_list ( ',' constructor_constraint )? | constructor_constraint )
            int alt189=3;
            switch ( input.LA(1) ) {
            case 155:
            case 169:
                {
                alt189=1;
                }
                break;
            case IDENTIFIER:
            case 65:
            case 132:
            case 133:
            case 135:
            case 136:
            case 137:
            case 138:
            case 139:
            case 140:
            case 141:
            case 142:
            case 143:
            case 144:
            case 145:
            case 146:
            case 147:
            case 148:
            case 150:
            case 151:
            case 152:
            case 154:
            case 157:
            case 158:
            case 159:
            case 170:
            case 177:
            case 178:
            case 195:
            case 202:
                {
                alt189=2;
                }
                break;
            case 68:
                {
                alt189=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 189, 0, input);

                throw nvae;
            }

            switch (alt189) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:674:5: ( 'class' | 'struct' ) ( ',' secondary_constraint_list )? ( ',' constructor_constraint )?
                    {
                    root_0 = (Object)adaptor.nil();

                    set656=(Token)input.LT(1);
                    if ( input.LA(1)==155||input.LA(1)==169 ) {
                        input.consume();
                        if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set656));
                        state.errorRecovery=false;state.failed=false;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }

                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:674:28: ( ',' secondary_constraint_list )?
                    int alt186=2;
                    int LA186_0 = input.LA(1);

                    if ( (LA186_0==89) ) {
                        int LA186_1 = input.LA(2);

                        if ( (LA186_1==145) ) {
                            int LA186_3 = input.LA(3);

                            if ( (LA186_3==DOT||LA186_3==SEMI||LA186_3==62||LA186_3==84||LA186_3==89||LA186_3==99) ) {
                                alt186=1;
                            }
                        }
                        else if ( (LA186_1==IDENTIFIER||LA186_1==65||(LA186_1>=132 && LA186_1<=133)||(LA186_1>=135 && LA186_1<=144)||(LA186_1>=146 && LA186_1<=148)||(LA186_1>=150 && LA186_1<=152)||LA186_1==154||(LA186_1>=157 && LA186_1<=159)||LA186_1==170||(LA186_1>=177 && LA186_1<=178)||LA186_1==195||LA186_1==202) ) {
                            alt186=1;
                        }
                    }
                    switch (alt186) {
                        case 1 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:674:29: ',' secondary_constraint_list
                            {
                            char_literal657=(Token)match(input,89,FOLLOW_89_in_type_parameter_constraint_list5437); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            char_literal657_tree = (Object)adaptor.create(char_literal657);
                            adaptor.addChild(root_0, char_literal657_tree);
                            }
                            pushFollow(FOLLOW_secondary_constraint_list_in_type_parameter_constraint_list5441);
                            secondary_constraint_list658=secondary_constraint_list();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, secondary_constraint_list658.getTree());

                            }
                            break;

                    }

                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:674:65: ( ',' constructor_constraint )?
                    int alt187=2;
                    int LA187_0 = input.LA(1);

                    if ( (LA187_0==89) ) {
                        int LA187_1 = input.LA(2);

                        if ( (LA187_1==68) ) {
                            alt187=1;
                        }
                    }
                    switch (alt187) {
                        case 1 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:674:66: ',' constructor_constraint
                            {
                            char_literal659=(Token)match(input,89,FOLLOW_89_in_type_parameter_constraint_list5448); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            char_literal659_tree = (Object)adaptor.create(char_literal659);
                            adaptor.addChild(root_0, char_literal659_tree);
                            }
                            pushFollow(FOLLOW_constructor_constraint_in_type_parameter_constraint_list5452);
                            constructor_constraint660=constructor_constraint();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, constructor_constraint660.getTree());

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:675:5: secondary_constraint_list ( ',' constructor_constraint )?
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_secondary_constraint_list_in_type_parameter_constraint_list5460);
                    secondary_constraint_list661=secondary_constraint_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, secondary_constraint_list661.getTree());
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:675:33: ( ',' constructor_constraint )?
                    int alt188=2;
                    int LA188_0 = input.LA(1);

                    if ( (LA188_0==89) ) {
                        int LA188_1 = input.LA(2);

                        if ( (LA188_1==68) ) {
                            alt188=1;
                        }
                    }
                    switch (alt188) {
                        case 1 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:675:34: ',' constructor_constraint
                            {
                            char_literal662=(Token)match(input,89,FOLLOW_89_in_type_parameter_constraint_list5465); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            char_literal662_tree = (Object)adaptor.create(char_literal662);
                            adaptor.addChild(root_0, char_literal662_tree);
                            }
                            pushFollow(FOLLOW_constructor_constraint_in_type_parameter_constraint_list5469);
                            constructor_constraint663=constructor_constraint();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, constructor_constraint663.getTree());

                            }
                            break;

                    }


                    }
                    break;
                case 3 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:676:5: constructor_constraint
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_constructor_constraint_in_type_parameter_constraint_list5477);
                    constructor_constraint664=constructor_constraint();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, constructor_constraint664.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 191, type_parameter_constraint_list_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "type_parameter_constraint_list"

    public static class secondary_constraint_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "secondary_constraint_list"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:681:1: secondary_constraint_list : secondary_constraint ( ',' secondary_constraint )* ;
    public final CSharpParser.secondary_constraint_list_return secondary_constraint_list() throws RecognitionException {
        CSharpParser.secondary_constraint_list_return retval = new CSharpParser.secondary_constraint_list_return();
        retval.start = input.LT(1);
        int secondary_constraint_list_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal666=null;
        CSharpParser.secondary_constraint_return secondary_constraint665 = null;

        CSharpParser.secondary_constraint_return secondary_constraint667 = null;


        Object char_literal666_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 192) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:681:26: ( secondary_constraint ( ',' secondary_constraint )* )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:682:3: secondary_constraint ( ',' secondary_constraint )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_secondary_constraint_in_secondary_constraint_list5490);
            secondary_constraint665=secondary_constraint();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, secondary_constraint665.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:682:24: ( ',' secondary_constraint )*
            loop190:
            do {
                int alt190=2;
                int LA190_0 = input.LA(1);

                if ( (LA190_0==89) ) {
                    int LA190_1 = input.LA(2);

                    if ( (LA190_1==145) ) {
                        int LA190_3 = input.LA(3);

                        if ( (LA190_3==DOT||LA190_3==SEMI||LA190_3==62||LA190_3==84||LA190_3==89||LA190_3==99) ) {
                            alt190=1;
                        }


                    }
                    else if ( (LA190_1==IDENTIFIER||LA190_1==65||(LA190_1>=132 && LA190_1<=133)||(LA190_1>=135 && LA190_1<=144)||(LA190_1>=146 && LA190_1<=148)||(LA190_1>=150 && LA190_1<=152)||LA190_1==154||(LA190_1>=157 && LA190_1<=159)||LA190_1==170||(LA190_1>=177 && LA190_1<=178)||LA190_1==195||LA190_1==202) ) {
                        alt190=1;
                    }


                }


                switch (alt190) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:682:25: ',' secondary_constraint
            	    {
            	    char_literal666=(Token)match(input,89,FOLLOW_89_in_secondary_constraint_list5493); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal666_tree = (Object)adaptor.create(char_literal666);
            	    adaptor.addChild(root_0, char_literal666_tree);
            	    }
            	    pushFollow(FOLLOW_secondary_constraint_in_secondary_constraint_list5495);
            	    secondary_constraint667=secondary_constraint();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, secondary_constraint667.getTree());

            	    }
            	    break;

            	default :
            	    break loop190;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 192, secondary_constraint_list_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "secondary_constraint_list"

    public static class secondary_constraint_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "secondary_constraint"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:683:1: secondary_constraint : type_name ;
    public final CSharpParser.secondary_constraint_return secondary_constraint() throws RecognitionException {
        CSharpParser.secondary_constraint_return retval = new CSharpParser.secondary_constraint_return();
        retval.start = input.LT(1);
        int secondary_constraint_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.type_name_return type_name668 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 193) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:683:21: ( type_name )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:684:3: type_name
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_type_name_in_secondary_constraint5506);
            type_name668=type_name();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type_name668.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 193, secondary_constraint_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "secondary_constraint"

    public static class type_variable_name_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "type_variable_name"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:685:1: type_variable_name : identifier ;
    public final CSharpParser.type_variable_name_return type_variable_name() throws RecognitionException {
        CSharpParser.type_variable_name_return retval = new CSharpParser.type_variable_name_return();
        retval.start = input.LT(1);
        int type_variable_name_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.identifier_return identifier669 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 194) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:685:19: ( identifier )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:686:3: identifier
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_identifier_in_type_variable_name5517);
            identifier669=identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier669.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 194, type_variable_name_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "type_variable_name"

    public static class constructor_constraint_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "constructor_constraint"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:687:1: constructor_constraint : 'new' '(' ')' ;
    public final CSharpParser.constructor_constraint_return constructor_constraint() throws RecognitionException {
        CSharpParser.constructor_constraint_return retval = new CSharpParser.constructor_constraint_return();
        retval.start = input.LT(1);
        int constructor_constraint_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal670=null;
        Token char_literal671=null;
        Token char_literal672=null;

        Object string_literal670_tree=null;
        Object char_literal671_tree=null;
        Object char_literal672_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 195) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:687:23: ( 'new' '(' ')' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:688:3: 'new' '(' ')'
            {
            root_0 = (Object)adaptor.nil();

            string_literal670=(Token)match(input,68,FOLLOW_68_in_constructor_constraint5526); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal670_tree = (Object)adaptor.create(string_literal670);
            adaptor.addChild(root_0, string_literal670_tree);
            }
            char_literal671=(Token)match(input,88,FOLLOW_88_in_constructor_constraint5530); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal671_tree = (Object)adaptor.create(char_literal671);
            adaptor.addChild(root_0, char_literal671_tree);
            }
            char_literal672=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_constructor_constraint5534); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal672_tree = (Object)adaptor.create(char_literal672);
            adaptor.addChild(root_0, char_literal672_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 195, constructor_constraint_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "constructor_constraint"

    public static class return_type_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "return_type"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:689:1: return_type : ( type | 'void' );
    public final CSharpParser.return_type_return return_type() throws RecognitionException {
        CSharpParser.return_type_return retval = new CSharpParser.return_type_return();
        retval.start = input.LT(1);
        int return_type_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal674=null;
        CSharpParser.type_return type673 = null;


        Object string_literal674_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 196) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:689:12: ( type | 'void' )
            int alt191=2;
            int LA191_0 = input.LA(1);

            if ( (LA191_0==IDENTIFIER||LA191_0==65||(LA191_0>=132 && LA191_0<=133)||(LA191_0>=135 && LA191_0<=148)||(LA191_0>=150 && LA191_0<=152)||LA191_0==154||(LA191_0>=157 && LA191_0<=168)||LA191_0==170||(LA191_0>=177 && LA191_0<=178)||(LA191_0>=195 && LA191_0<=202)) ) {
                alt191=1;
            }
            else if ( (LA191_0==82) ) {
                int LA191_2 = input.LA(2);

                if ( (LA191_2==IDENTIFIER||LA191_2==65||(LA191_2>=132 && LA191_2<=133)||(LA191_2>=135 && LA191_2<=148)||(LA191_2>=150 && LA191_2<=152)||LA191_2==154||(LA191_2>=157 && LA191_2<=159)||LA191_2==170||(LA191_2>=177 && LA191_2<=178)||LA191_2==195||LA191_2==202) ) {
                    alt191=2;
                }
                else if ( (LA191_2==100) ) {
                    alt191=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 191, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 191, 0, input);

                throw nvae;
            }
            switch (alt191) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:690:3: type
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_type_in_return_type5543);
                    type673=type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type673.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:691:6: 'void'
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal674=(Token)match(input,82,FOLLOW_82_in_return_type5550); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal674_tree = (Object)adaptor.create(string_literal674);
                    adaptor.addChild(root_0, string_literal674_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 196, return_type_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "return_type"

    public static class formal_parameter_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "formal_parameter_list"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:692:1: formal_parameter_list : formal_parameter ( ',' formal_parameter )* ;
    public final CSharpParser.formal_parameter_list_return formal_parameter_list() throws RecognitionException {
        CSharpParser.formal_parameter_list_return retval = new CSharpParser.formal_parameter_list_return();
        retval.start = input.LT(1);
        int formal_parameter_list_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal676=null;
        CSharpParser.formal_parameter_return formal_parameter675 = null;

        CSharpParser.formal_parameter_return formal_parameter677 = null;


        Object char_literal676_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 197) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:692:22: ( formal_parameter ( ',' formal_parameter )* )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:693:3: formal_parameter ( ',' formal_parameter )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_formal_parameter_in_formal_parameter_list5558);
            formal_parameter675=formal_parameter();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, formal_parameter675.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:693:20: ( ',' formal_parameter )*
            loop192:
            do {
                int alt192=2;
                int LA192_0 = input.LA(1);

                if ( (LA192_0==89) ) {
                    alt192=1;
                }


                switch (alt192) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:693:21: ',' formal_parameter
            	    {
            	    char_literal676=(Token)match(input,89,FOLLOW_89_in_formal_parameter_list5561); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal676_tree = (Object)adaptor.create(char_literal676);
            	    adaptor.addChild(root_0, char_literal676_tree);
            	    }
            	    pushFollow(FOLLOW_formal_parameter_in_formal_parameter_list5563);
            	    formal_parameter677=formal_parameter();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, formal_parameter677.getTree());

            	    }
            	    break;

            	default :
            	    break loop192;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 197, formal_parameter_list_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "formal_parameter_list"

    public static class formal_parameter_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "formal_parameter"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:694:1: formal_parameter : ( ( attributes )? ( fixed_parameter | parameter_array ) | '__arglist' );
    public final CSharpParser.formal_parameter_return formal_parameter() throws RecognitionException {
        CSharpParser.formal_parameter_return retval = new CSharpParser.formal_parameter_return();
        retval.start = input.LT(1);
        int formal_parameter_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal681=null;
        CSharpParser.attributes_return attributes678 = null;

        CSharpParser.fixed_parameter_return fixed_parameter679 = null;

        CSharpParser.parameter_array_return parameter_array680 = null;


        Object string_literal681_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 198) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:694:17: ( ( attributes )? ( fixed_parameter | parameter_array ) | '__arglist' )
            int alt195=2;
            int LA195_0 = input.LA(1);

            if ( (LA195_0==IDENTIFIER||LA195_0==65||(LA195_0>=82 && LA195_0<=83)||LA195_0==86||(LA195_0>=91 && LA195_0<=92)||(LA195_0>=132 && LA195_0<=133)||(LA195_0>=135 && LA195_0<=148)||(LA195_0>=150 && LA195_0<=152)||LA195_0==154||(LA195_0>=157 && LA195_0<=168)||LA195_0==171||(LA195_0>=177 && LA195_0<=178)||(LA195_0>=195 && LA195_0<=202)) ) {
                alt195=1;
            }
            else if ( (LA195_0==170) ) {
                int LA195_2 = input.LA(2);

                if ( (LA195_2==IDENTIFIER||LA195_2==DOT||LA195_2==65||LA195_2==84||LA195_2==86||(LA195_2>=99 && LA195_2<=101)||(LA195_2>=132 && LA195_2<=133)||(LA195_2>=135 && LA195_2<=148)||(LA195_2>=150 && LA195_2<=152)||LA195_2==154||(LA195_2>=157 && LA195_2<=159)||LA195_2==170||(LA195_2>=177 && LA195_2<=178)||LA195_2==195||LA195_2==202) ) {
                    alt195=1;
                }
                else if ( (LA195_2==RPAREN||LA195_2==87||LA195_2==89) ) {
                    alt195=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 195, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 195, 0, input);

                throw nvae;
            }
            switch (alt195) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:695:3: ( attributes )? ( fixed_parameter | parameter_array )
                    {
                    root_0 = (Object)adaptor.nil();

                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:695:3: ( attributes )?
                    int alt193=2;
                    int LA193_0 = input.LA(1);

                    if ( (LA193_0==86) ) {
                        alt193=1;
                    }
                    switch (alt193) {
                        case 1 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:695:3: attributes
                            {
                            pushFollow(FOLLOW_attributes_in_formal_parameter5574);
                            attributes678=attributes();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes678.getTree());

                            }
                            break;

                    }

                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:695:17: ( fixed_parameter | parameter_array )
                    int alt194=2;
                    int LA194_0 = input.LA(1);

                    if ( (LA194_0==IDENTIFIER||LA194_0==65||(LA194_0>=82 && LA194_0<=83)||(LA194_0>=91 && LA194_0<=92)||(LA194_0>=132 && LA194_0<=133)||(LA194_0>=135 && LA194_0<=148)||(LA194_0>=150 && LA194_0<=152)||LA194_0==154||(LA194_0>=157 && LA194_0<=168)||LA194_0==170||(LA194_0>=177 && LA194_0<=178)||(LA194_0>=195 && LA194_0<=202)) ) {
                        alt194=1;
                    }
                    else if ( (LA194_0==171) ) {
                        alt194=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 194, 0, input);

                        throw nvae;
                    }
                    switch (alt194) {
                        case 1 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:695:18: fixed_parameter
                            {
                            pushFollow(FOLLOW_fixed_parameter_in_formal_parameter5580);
                            fixed_parameter679=fixed_parameter();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, fixed_parameter679.getTree());

                            }
                            break;
                        case 2 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:695:36: parameter_array
                            {
                            pushFollow(FOLLOW_parameter_array_in_formal_parameter5584);
                            parameter_array680=parameter_array();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, parameter_array680.getTree());

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:696:5: '__arglist'
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal681=(Token)match(input,170,FOLLOW_170_in_formal_parameter5592); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal681_tree = (Object)adaptor.create(string_literal681);
                    adaptor.addChild(root_0, string_literal681_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 198, formal_parameter_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "formal_parameter"

    public static class fixed_parameters_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "fixed_parameters"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:697:1: fixed_parameters : fixed_parameter ( ',' fixed_parameter )* ;
    public final CSharpParser.fixed_parameters_return fixed_parameters() throws RecognitionException {
        CSharpParser.fixed_parameters_return retval = new CSharpParser.fixed_parameters_return();
        retval.start = input.LT(1);
        int fixed_parameters_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal683=null;
        CSharpParser.fixed_parameter_return fixed_parameter682 = null;

        CSharpParser.fixed_parameter_return fixed_parameter684 = null;


        Object char_literal683_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 199) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:697:17: ( fixed_parameter ( ',' fixed_parameter )* )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:698:3: fixed_parameter ( ',' fixed_parameter )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_fixed_parameter_in_fixed_parameters5602);
            fixed_parameter682=fixed_parameter();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, fixed_parameter682.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:698:21: ( ',' fixed_parameter )*
            loop196:
            do {
                int alt196=2;
                int LA196_0 = input.LA(1);

                if ( (LA196_0==89) ) {
                    alt196=1;
                }


                switch (alt196) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:698:22: ',' fixed_parameter
            	    {
            	    char_literal683=(Token)match(input,89,FOLLOW_89_in_fixed_parameters5607); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal683_tree = (Object)adaptor.create(char_literal683);
            	    adaptor.addChild(root_0, char_literal683_tree);
            	    }
            	    pushFollow(FOLLOW_fixed_parameter_in_fixed_parameters5611);
            	    fixed_parameter684=fixed_parameter();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, fixed_parameter684.getTree());

            	    }
            	    break;

            	default :
            	    break loop196;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 199, fixed_parameters_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "fixed_parameters"

    public static class fixed_parameter_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "fixed_parameter"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:700:1: fixed_parameter : ( parameter_modifier )? type identifier ( default_argument )? ;
    public final CSharpParser.fixed_parameter_return fixed_parameter() throws RecognitionException {
        CSharpParser.fixed_parameter_return retval = new CSharpParser.fixed_parameter_return();
        retval.start = input.LT(1);
        int fixed_parameter_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.parameter_modifier_return parameter_modifier685 = null;

        CSharpParser.type_return type686 = null;

        CSharpParser.identifier_return identifier687 = null;

        CSharpParser.default_argument_return default_argument688 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 200) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:700:16: ( ( parameter_modifier )? type identifier ( default_argument )? )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:701:3: ( parameter_modifier )? type identifier ( default_argument )?
            {
            root_0 = (Object)adaptor.nil();

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:701:3: ( parameter_modifier )?
            int alt197=2;
            int LA197_0 = input.LA(1);

            if ( (LA197_0==83||(LA197_0>=91 && LA197_0<=92)) ) {
                alt197=1;
            }
            switch (alt197) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:701:3: parameter_modifier
                    {
                    pushFollow(FOLLOW_parameter_modifier_in_fixed_parameter5623);
                    parameter_modifier685=parameter_modifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, parameter_modifier685.getTree());

                    }
                    break;

            }

            pushFollow(FOLLOW_type_in_fixed_parameter5628);
            type686=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type686.getTree());
            pushFollow(FOLLOW_identifier_in_fixed_parameter5632);
            identifier687=identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier687.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:701:45: ( default_argument )?
            int alt198=2;
            int LA198_0 = input.LA(1);

            if ( (LA198_0==66) ) {
                alt198=1;
            }
            switch (alt198) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:701:45: default_argument
                    {
                    pushFollow(FOLLOW_default_argument_in_fixed_parameter5636);
                    default_argument688=default_argument();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, default_argument688.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 200, fixed_parameter_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "fixed_parameter"

    public static class default_argument_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "default_argument"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:703:1: default_argument : '=' expression ;
    public final CSharpParser.default_argument_return default_argument() throws RecognitionException {
        CSharpParser.default_argument_return retval = new CSharpParser.default_argument_return();
        retval.start = input.LT(1);
        int default_argument_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal689=null;
        CSharpParser.expression_return expression690 = null;


        Object char_literal689_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 201) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:703:17: ( '=' expression )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:704:3: '=' expression
            {
            root_0 = (Object)adaptor.nil();

            char_literal689=(Token)match(input,66,FOLLOW_66_in_default_argument5647); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal689_tree = (Object)adaptor.create(char_literal689);
            adaptor.addChild(root_0, char_literal689_tree);
            }
            pushFollow(FOLLOW_expression_in_default_argument5649);
            expression690=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression690.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 201, default_argument_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "default_argument"

    public static class parameter_modifier_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "parameter_modifier"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:705:1: parameter_modifier : ( 'ref' | 'out' | 'this' );
    public final CSharpParser.parameter_modifier_return parameter_modifier() throws RecognitionException {
        CSharpParser.parameter_modifier_return retval = new CSharpParser.parameter_modifier_return();
        retval.start = input.LT(1);
        int parameter_modifier_StartIndex = input.index();
        Object root_0 = null;

        Token set691=null;

        Object set691_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 202) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:705:19: ( 'ref' | 'out' | 'this' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:
            {
            root_0 = (Object)adaptor.nil();

            set691=(Token)input.LT(1);
            if ( input.LA(1)==83||(input.LA(1)>=91 && input.LA(1)<=92) ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set691));
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 202, parameter_modifier_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "parameter_modifier"

    public static class parameter_array_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "parameter_array"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:707:1: parameter_array : 'params' type identifier ;
    public final CSharpParser.parameter_array_return parameter_array() throws RecognitionException {
        CSharpParser.parameter_array_return retval = new CSharpParser.parameter_array_return();
        retval.start = input.LT(1);
        int parameter_array_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal692=null;
        CSharpParser.type_return type693 = null;

        CSharpParser.identifier_return identifier694 = null;


        Object string_literal692_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 203) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:707:16: ( 'params' type identifier )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:708:3: 'params' type identifier
            {
            root_0 = (Object)adaptor.nil();

            string_literal692=(Token)match(input,171,FOLLOW_171_in_parameter_array5674); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal692_tree = (Object)adaptor.create(string_literal692);
            adaptor.addChild(root_0, string_literal692_tree);
            }
            pushFollow(FOLLOW_type_in_parameter_array5678);
            type693=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type693.getTree());
            pushFollow(FOLLOW_identifier_in_parameter_array5682);
            identifier694=identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier694.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 203, parameter_array_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "parameter_array"

    public static class interface_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "interface_declaration"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:711:1: interface_declaration : 'interface' identifier ( variant_generic_parameter_list )? ( interface_base )? ( type_parameter_constraints_clauses )? interface_body ( ';' )? ;
    public final CSharpParser.interface_declaration_return interface_declaration() throws RecognitionException {
        CSharpParser.interface_declaration_return retval = new CSharpParser.interface_declaration_return();
        retval.start = input.LT(1);
        int interface_declaration_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal695=null;
        Token char_literal701=null;
        CSharpParser.identifier_return identifier696 = null;

        CSharpParser.variant_generic_parameter_list_return variant_generic_parameter_list697 = null;

        CSharpParser.interface_base_return interface_base698 = null;

        CSharpParser.type_parameter_constraints_clauses_return type_parameter_constraints_clauses699 = null;

        CSharpParser.interface_body_return interface_body700 = null;


        Object string_literal695_tree=null;
        Object char_literal701_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 204) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:711:22: ( 'interface' identifier ( variant_generic_parameter_list )? ( interface_base )? ( type_parameter_constraints_clauses )? interface_body ( ';' )? )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:712:3: 'interface' identifier ( variant_generic_parameter_list )? ( interface_base )? ( type_parameter_constraints_clauses )? interface_body ( ';' )?
            {
            root_0 = (Object)adaptor.nil();

            string_literal695=(Token)match(input,172,FOLLOW_172_in_interface_declaration5693); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal695_tree = (Object)adaptor.create(string_literal695);
            adaptor.addChild(root_0, string_literal695_tree);
            }
            pushFollow(FOLLOW_identifier_in_interface_declaration5697);
            identifier696=identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier696.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:712:30: ( variant_generic_parameter_list )?
            int alt199=2;
            int LA199_0 = input.LA(1);

            if ( (LA199_0==99) ) {
                alt199=1;
            }
            switch (alt199) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:712:30: variant_generic_parameter_list
                    {
                    pushFollow(FOLLOW_variant_generic_parameter_list_in_interface_declaration5701);
                    variant_generic_parameter_list697=variant_generic_parameter_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, variant_generic_parameter_list697.getTree());

                    }
                    break;

            }

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:713:7: ( interface_base )?
            int alt200=2;
            int LA200_0 = input.LA(1);

            if ( (LA200_0==90) ) {
                alt200=1;
            }
            switch (alt200) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:713:7: interface_base
                    {
                    pushFollow(FOLLOW_interface_base_in_interface_declaration5711);
                    interface_base698=interface_base();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_base698.getTree());

                    }
                    break;

            }

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:713:25: ( type_parameter_constraints_clauses )?
            int alt201=2;
            int LA201_0 = input.LA(1);

            if ( (LA201_0==145) ) {
                alt201=1;
            }
            switch (alt201) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:713:25: type_parameter_constraints_clauses
                    {
                    pushFollow(FOLLOW_type_parameter_constraints_clauses_in_interface_declaration5716);
                    type_parameter_constraints_clauses699=type_parameter_constraints_clauses();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_constraints_clauses699.getTree());

                    }
                    break;

            }

            pushFollow(FOLLOW_interface_body_in_interface_declaration5721);
            interface_body700=interface_body();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_body700.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:713:80: ( ';' )?
            int alt202=2;
            int LA202_0 = input.LA(1);

            if ( (LA202_0==SEMI) ) {
                alt202=1;
            }
            switch (alt202) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:713:80: ';'
                    {
                    char_literal701=(Token)match(input,SEMI,FOLLOW_SEMI_in_interface_declaration5725); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal701_tree = (Object)adaptor.create(char_literal701);
                    adaptor.addChild(root_0, char_literal701_tree);
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 204, interface_declaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "interface_declaration"

    public static class interface_modifiers_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "interface_modifiers"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:714:1: interface_modifiers : ( modifier )+ ;
    public final CSharpParser.interface_modifiers_return interface_modifiers() throws RecognitionException {
        CSharpParser.interface_modifiers_return retval = new CSharpParser.interface_modifiers_return();
        retval.start = input.LT(1);
        int interface_modifiers_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.modifier_return modifier702 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 205) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:714:20: ( ( modifier )+ )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:715:3: ( modifier )+
            {
            root_0 = (Object)adaptor.nil();

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:715:3: ( modifier )+
            int cnt203=0;
            loop203:
            do {
                int alt203=2;
                int LA203_0 = input.LA(1);

                if ( (LA203_0==64||(LA203_0>=68 && LA203_0<=80)) ) {
                    alt203=1;
                }


                switch (alt203) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:715:3: modifier
            	    {
            	    pushFollow(FOLLOW_modifier_in_interface_modifiers5736);
            	    modifier702=modifier();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, modifier702.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt203 >= 1 ) break loop203;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(203, input);
                        throw eee;
                }
                cnt203++;
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 205, interface_modifiers_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "interface_modifiers"

    public static class interface_base_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "interface_base"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:716:1: interface_base : ':' interface_type_list ;
    public final CSharpParser.interface_base_return interface_base() throws RecognitionException {
        CSharpParser.interface_base_return retval = new CSharpParser.interface_base_return();
        retval.start = input.LT(1);
        int interface_base_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal703=null;
        CSharpParser.interface_type_list_return interface_type_list704 = null;


        Object char_literal703_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 206) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:716:15: ( ':' interface_type_list )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:717:5: ':' interface_type_list
            {
            root_0 = (Object)adaptor.nil();

            char_literal703=(Token)match(input,90,FOLLOW_90_in_interface_base5749); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal703_tree = (Object)adaptor.create(char_literal703);
            adaptor.addChild(root_0, char_literal703_tree);
            }
            pushFollow(FOLLOW_interface_type_list_in_interface_base5751);
            interface_type_list704=interface_type_list();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_type_list704.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 206, interface_base_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "interface_base"

    public static class interface_body_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "interface_body"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:718:1: interface_body : '{' ( interface_member_declarations )? '}' ;
    public final CSharpParser.interface_body_return interface_body() throws RecognitionException {
        CSharpParser.interface_body_return retval = new CSharpParser.interface_body_return();
        retval.start = input.LT(1);
        int interface_body_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal705=null;
        Token char_literal707=null;
        CSharpParser.interface_member_declarations_return interface_member_declarations706 = null;


        Object char_literal705_tree=null;
        Object char_literal707_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 207) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:718:15: ( '{' ( interface_member_declarations )? '}' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:719:3: '{' ( interface_member_declarations )? '}'
            {
            root_0 = (Object)adaptor.nil();

            char_literal705=(Token)match(input,62,FOLLOW_62_in_interface_body5760); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal705_tree = (Object)adaptor.create(char_literal705);
            adaptor.addChild(root_0, char_literal705_tree);
            }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:719:9: ( interface_member_declarations )?
            int alt204=2;
            int LA204_0 = input.LA(1);

            if ( (LA204_0==IDENTIFIER||(LA204_0>=64 && LA204_0<=65)||(LA204_0>=68 && LA204_0<=80)||LA204_0==82||LA204_0==86||(LA204_0>=132 && LA204_0<=133)||(LA204_0>=135 && LA204_0<=152)||LA204_0==154||(LA204_0>=157 && LA204_0<=168)||LA204_0==170||(LA204_0>=177 && LA204_0<=178)||(LA204_0>=195 && LA204_0<=202)) ) {
                alt204=1;
            }
            switch (alt204) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:719:9: interface_member_declarations
                    {
                    pushFollow(FOLLOW_interface_member_declarations_in_interface_body5764);
                    interface_member_declarations706=interface_member_declarations();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_member_declarations706.getTree());

                    }
                    break;

            }

            char_literal707=(Token)match(input,63,FOLLOW_63_in_interface_body5769); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal707_tree = (Object)adaptor.create(char_literal707);
            adaptor.addChild(root_0, char_literal707_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 207, interface_body_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "interface_body"

    public static class interface_member_declarations_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "interface_member_declarations"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:720:1: interface_member_declarations : ( interface_member_declaration )+ ;
    public final CSharpParser.interface_member_declarations_return interface_member_declarations() throws RecognitionException {
        CSharpParser.interface_member_declarations_return retval = new CSharpParser.interface_member_declarations_return();
        retval.start = input.LT(1);
        int interface_member_declarations_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.interface_member_declaration_return interface_member_declaration708 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 208) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:720:30: ( ( interface_member_declaration )+ )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:721:3: ( interface_member_declaration )+
            {
            root_0 = (Object)adaptor.nil();

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:721:3: ( interface_member_declaration )+
            int cnt205=0;
            loop205:
            do {
                int alt205=2;
                int LA205_0 = input.LA(1);

                if ( (LA205_0==IDENTIFIER||(LA205_0>=64 && LA205_0<=65)||(LA205_0>=68 && LA205_0<=80)||LA205_0==82||LA205_0==86||(LA205_0>=132 && LA205_0<=133)||(LA205_0>=135 && LA205_0<=152)||LA205_0==154||(LA205_0>=157 && LA205_0<=168)||LA205_0==170||(LA205_0>=177 && LA205_0<=178)||(LA205_0>=195 && LA205_0<=202)) ) {
                    alt205=1;
                }


                switch (alt205) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:721:3: interface_member_declaration
            	    {
            	    pushFollow(FOLLOW_interface_member_declaration_in_interface_member_declarations5778);
            	    interface_member_declaration708=interface_member_declaration();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_member_declaration708.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt205 >= 1 ) break loop205;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(205, input);
                        throw eee;
                }
                cnt205++;
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 208, interface_member_declarations_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "interface_member_declarations"

    public static class interface_member_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "interface_member_declaration"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:722:1: interface_member_declaration : ( attributes )? ( modifiers )? ( 'void' interface_method_declaration | interface_event_declaration | type ( ( member_name '(' )=> interface_method_declaration | ( member_name '{' )=> interface_property_declaration | interface_indexer_declaration ) ) ;
    public final CSharpParser.interface_member_declaration_return interface_member_declaration() throws RecognitionException {
        CSharpParser.interface_member_declaration_return retval = new CSharpParser.interface_member_declaration_return();
        retval.start = input.LT(1);
        int interface_member_declaration_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal711=null;
        CSharpParser.attributes_return attributes709 = null;

        CSharpParser.modifiers_return modifiers710 = null;

        CSharpParser.interface_method_declaration_return interface_method_declaration712 = null;

        CSharpParser.interface_event_declaration_return interface_event_declaration713 = null;

        CSharpParser.type_return type714 = null;

        CSharpParser.interface_method_declaration_return interface_method_declaration715 = null;

        CSharpParser.interface_property_declaration_return interface_property_declaration716 = null;

        CSharpParser.interface_indexer_declaration_return interface_indexer_declaration717 = null;


        Object string_literal711_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 209) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:722:29: ( ( attributes )? ( modifiers )? ( 'void' interface_method_declaration | interface_event_declaration | type ( ( member_name '(' )=> interface_method_declaration | ( member_name '{' )=> interface_property_declaration | interface_indexer_declaration ) ) )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:723:3: ( attributes )? ( modifiers )? ( 'void' interface_method_declaration | interface_event_declaration | type ( ( member_name '(' )=> interface_method_declaration | ( member_name '{' )=> interface_property_declaration | interface_indexer_declaration ) )
            {
            root_0 = (Object)adaptor.nil();

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:723:3: ( attributes )?
            int alt206=2;
            int LA206_0 = input.LA(1);

            if ( (LA206_0==86) ) {
                alt206=1;
            }
            switch (alt206) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:723:3: attributes
                    {
                    pushFollow(FOLLOW_attributes_in_interface_member_declaration5788);
                    attributes709=attributes();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes709.getTree());

                    }
                    break;

            }

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:723:18: ( modifiers )?
            int alt207=2;
            int LA207_0 = input.LA(1);

            if ( (LA207_0==64||(LA207_0>=68 && LA207_0<=80)) ) {
                alt207=1;
            }
            switch (alt207) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:723:18: modifiers
                    {
                    pushFollow(FOLLOW_modifiers_in_interface_member_declaration5794);
                    modifiers710=modifiers();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, modifiers710.getTree());

                    }
                    break;

            }

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:724:5: ( 'void' interface_method_declaration | interface_event_declaration | type ( ( member_name '(' )=> interface_method_declaration | ( member_name '{' )=> interface_property_declaration | interface_indexer_declaration ) )
            int alt209=3;
            switch ( input.LA(1) ) {
            case 82:
                {
                int LA209_1 = input.LA(2);

                if ( (LA209_1==IDENTIFIER||LA209_1==65||(LA209_1>=132 && LA209_1<=133)||(LA209_1>=135 && LA209_1<=148)||(LA209_1>=150 && LA209_1<=152)||LA209_1==154||(LA209_1>=157 && LA209_1<=159)||LA209_1==170||(LA209_1>=177 && LA209_1<=178)||LA209_1==195||LA209_1==202) ) {
                    alt209=1;
                }
                else if ( (LA209_1==100) ) {
                    alt209=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 209, 1, input);

                    throw nvae;
                }
                }
                break;
            case 149:
                {
                alt209=2;
                }
                break;
            case IDENTIFIER:
            case 65:
            case 132:
            case 133:
            case 135:
            case 136:
            case 137:
            case 138:
            case 139:
            case 140:
            case 141:
            case 142:
            case 143:
            case 144:
            case 145:
            case 146:
            case 147:
            case 148:
            case 150:
            case 151:
            case 152:
            case 154:
            case 157:
            case 158:
            case 159:
            case 160:
            case 161:
            case 162:
            case 163:
            case 164:
            case 165:
            case 166:
            case 167:
            case 168:
            case 170:
            case 177:
            case 178:
            case 195:
            case 196:
            case 197:
            case 198:
            case 199:
            case 200:
            case 201:
            case 202:
                {
                alt209=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 209, 0, input);

                throw nvae;
            }

            switch (alt209) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:724:6: 'void' interface_method_declaration
                    {
                    string_literal711=(Token)match(input,82,FOLLOW_82_in_interface_member_declaration5802); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal711_tree = (Object)adaptor.create(string_literal711);
                    adaptor.addChild(root_0, string_literal711_tree);
                    }
                    pushFollow(FOLLOW_interface_method_declaration_in_interface_member_declaration5806);
                    interface_method_declaration712=interface_method_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_method_declaration712.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:725:7: interface_event_declaration
                    {
                    pushFollow(FOLLOW_interface_event_declaration_in_interface_member_declaration5814);
                    interface_event_declaration713=interface_event_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_event_declaration713.getTree());

                    }
                    break;
                case 3 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:726:7: type ( ( member_name '(' )=> interface_method_declaration | ( member_name '{' )=> interface_property_declaration | interface_indexer_declaration )
                    {
                    pushFollow(FOLLOW_type_in_interface_member_declaration5822);
                    type714=type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type714.getTree());
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:726:14: ( ( member_name '(' )=> interface_method_declaration | ( member_name '{' )=> interface_property_declaration | interface_indexer_declaration )
                    int alt208=3;
                    int LA208_0 = input.LA(1);

                    if ( (LA208_0==IDENTIFIER||LA208_0==65||(LA208_0>=132 && LA208_0<=133)||(LA208_0>=135 && LA208_0<=148)||(LA208_0>=150 && LA208_0<=152)||LA208_0==154||(LA208_0>=157 && LA208_0<=159)||LA208_0==170||(LA208_0>=177 && LA208_0<=178)||LA208_0==195||LA208_0==202) ) {
                        int LA208_1 = input.LA(2);

                        if ( (LA208_1==99) && (synpred26_cs())) {
                            alt208=1;
                        }
                        else if ( (LA208_1==88) && (synpred26_cs())) {
                            alt208=1;
                        }
                        else if ( (LA208_1==62) && (synpred27_cs())) {
                            alt208=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return retval;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 208, 1, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA208_0==83) ) {
                        alt208=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 208, 0, input);

                        throw nvae;
                    }
                    switch (alt208) {
                        case 1 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:726:16: ( member_name '(' )=> interface_method_declaration
                            {
                            pushFollow(FOLLOW_interface_method_declaration_in_interface_member_declaration5838);
                            interface_method_declaration715=interface_method_declaration();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_method_declaration715.getTree());

                            }
                            break;
                        case 2 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:727:16: ( member_name '{' )=> interface_property_declaration
                            {
                            pushFollow(FOLLOW_interface_property_declaration_in_interface_member_declaration5865);
                            interface_property_declaration716=interface_property_declaration();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_property_declaration716.getTree());

                            }
                            break;
                        case 3 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:728:12: interface_indexer_declaration
                            {
                            pushFollow(FOLLOW_interface_indexer_declaration_in_interface_member_declaration5879);
                            interface_indexer_declaration717=interface_indexer_declaration();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_indexer_declaration717.getTree());

                            }
                            break;

                    }


                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 209, interface_member_declaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "interface_member_declaration"

    public static class interface_property_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "interface_property_declaration"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:731:1: interface_property_declaration : identifier '{' interface_accessor_declarations '}' ;
    public final CSharpParser.interface_property_declaration_return interface_property_declaration() throws RecognitionException {
        CSharpParser.interface_property_declaration_return retval = new CSharpParser.interface_property_declaration_return();
        retval.start = input.LT(1);
        int interface_property_declaration_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal719=null;
        Token char_literal721=null;
        CSharpParser.identifier_return identifier718 = null;

        CSharpParser.interface_accessor_declarations_return interface_accessor_declarations720 = null;


        Object char_literal719_tree=null;
        Object char_literal721_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 210) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:731:31: ( identifier '{' interface_accessor_declarations '}' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:732:3: identifier '{' interface_accessor_declarations '}'
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_identifier_in_interface_property_declaration5901);
            identifier718=identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier718.getTree());
            char_literal719=(Token)match(input,62,FOLLOW_62_in_interface_property_declaration5905); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal719_tree = (Object)adaptor.create(char_literal719);
            adaptor.addChild(root_0, char_literal719_tree);
            }
            pushFollow(FOLLOW_interface_accessor_declarations_in_interface_property_declaration5909);
            interface_accessor_declarations720=interface_accessor_declarations();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_accessor_declarations720.getTree());
            char_literal721=(Token)match(input,63,FOLLOW_63_in_interface_property_declaration5913); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal721_tree = (Object)adaptor.create(char_literal721);
            adaptor.addChild(root_0, char_literal721_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 210, interface_property_declaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "interface_property_declaration"

    public static class interface_method_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "interface_method_declaration"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:733:1: interface_method_declaration : identifier ( generic_argument_list )? '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )? ';' ;
    public final CSharpParser.interface_method_declaration_return interface_method_declaration() throws RecognitionException {
        CSharpParser.interface_method_declaration_return retval = new CSharpParser.interface_method_declaration_return();
        retval.start = input.LT(1);
        int interface_method_declaration_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal724=null;
        Token char_literal726=null;
        Token char_literal728=null;
        CSharpParser.identifier_return identifier722 = null;

        CSharpParser.generic_argument_list_return generic_argument_list723 = null;

        CSharpParser.formal_parameter_list_return formal_parameter_list725 = null;

        CSharpParser.type_parameter_constraints_clauses_return type_parameter_constraints_clauses727 = null;


        Object char_literal724_tree=null;
        Object char_literal726_tree=null;
        Object char_literal728_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 211) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:733:29: ( identifier ( generic_argument_list )? '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )? ';' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:734:3: identifier ( generic_argument_list )? '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )? ';'
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_identifier_in_interface_method_declaration5922);
            identifier722=identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier722.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:734:16: ( generic_argument_list )?
            int alt210=2;
            int LA210_0 = input.LA(1);

            if ( (LA210_0==99) ) {
                alt210=1;
            }
            switch (alt210) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:734:16: generic_argument_list
                    {
                    pushFollow(FOLLOW_generic_argument_list_in_interface_method_declaration5926);
                    generic_argument_list723=generic_argument_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, generic_argument_list723.getTree());

                    }
                    break;

            }

            char_literal724=(Token)match(input,88,FOLLOW_88_in_interface_method_declaration5935); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal724_tree = (Object)adaptor.create(char_literal724);
            adaptor.addChild(root_0, char_literal724_tree);
            }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:735:13: ( formal_parameter_list )?
            int alt211=2;
            int LA211_0 = input.LA(1);

            if ( (LA211_0==IDENTIFIER||LA211_0==65||(LA211_0>=82 && LA211_0<=83)||LA211_0==86||(LA211_0>=91 && LA211_0<=92)||(LA211_0>=132 && LA211_0<=133)||(LA211_0>=135 && LA211_0<=148)||(LA211_0>=150 && LA211_0<=152)||LA211_0==154||(LA211_0>=157 && LA211_0<=168)||(LA211_0>=170 && LA211_0<=171)||(LA211_0>=177 && LA211_0<=178)||(LA211_0>=195 && LA211_0<=202)) ) {
                alt211=1;
            }
            switch (alt211) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:735:13: formal_parameter_list
                    {
                    pushFollow(FOLLOW_formal_parameter_list_in_interface_method_declaration5939);
                    formal_parameter_list725=formal_parameter_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, formal_parameter_list725.getTree());

                    }
                    break;

            }

            char_literal726=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_interface_method_declaration5944); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal726_tree = (Object)adaptor.create(char_literal726);
            adaptor.addChild(root_0, char_literal726_tree);
            }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:735:44: ( type_parameter_constraints_clauses )?
            int alt212=2;
            int LA212_0 = input.LA(1);

            if ( (LA212_0==145) ) {
                alt212=1;
            }
            switch (alt212) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:735:44: type_parameter_constraints_clauses
                    {
                    pushFollow(FOLLOW_type_parameter_constraints_clauses_in_interface_method_declaration5948);
                    type_parameter_constraints_clauses727=type_parameter_constraints_clauses();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_constraints_clauses727.getTree());

                    }
                    break;

            }

            char_literal728=(Token)match(input,SEMI,FOLLOW_SEMI_in_interface_method_declaration5953); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal728_tree = (Object)adaptor.create(char_literal728);
            adaptor.addChild(root_0, char_literal728_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 211, interface_method_declaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "interface_method_declaration"

    public static class interface_event_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "interface_event_declaration"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:736:1: interface_event_declaration : 'event' type identifier ';' ;
    public final CSharpParser.interface_event_declaration_return interface_event_declaration() throws RecognitionException {
        CSharpParser.interface_event_declaration_return retval = new CSharpParser.interface_event_declaration_return();
        retval.start = input.LT(1);
        int interface_event_declaration_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal729=null;
        Token char_literal732=null;
        CSharpParser.type_return type730 = null;

        CSharpParser.identifier_return identifier731 = null;


        Object string_literal729_tree=null;
        Object char_literal732_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 212) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:736:28: ( 'event' type identifier ';' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:738:3: 'event' type identifier ';'
            {
            root_0 = (Object)adaptor.nil();

            string_literal729=(Token)match(input,149,FOLLOW_149_in_interface_event_declaration5966); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal729_tree = (Object)adaptor.create(string_literal729);
            adaptor.addChild(root_0, string_literal729_tree);
            }
            pushFollow(FOLLOW_type_in_interface_event_declaration5970);
            type730=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type730.getTree());
            pushFollow(FOLLOW_identifier_in_interface_event_declaration5974);
            identifier731=identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier731.getTree());
            char_literal732=(Token)match(input,SEMI,FOLLOW_SEMI_in_interface_event_declaration5978); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal732_tree = (Object)adaptor.create(char_literal732);
            adaptor.addChild(root_0, char_literal732_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 212, interface_event_declaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "interface_event_declaration"

    public static class interface_indexer_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "interface_indexer_declaration"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:739:1: interface_indexer_declaration : 'this' '[' formal_parameter_list ']' '{' interface_accessor_declarations '}' ;
    public final CSharpParser.interface_indexer_declaration_return interface_indexer_declaration() throws RecognitionException {
        CSharpParser.interface_indexer_declaration_return retval = new CSharpParser.interface_indexer_declaration_return();
        retval.start = input.LT(1);
        int interface_indexer_declaration_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal733=null;
        Token char_literal734=null;
        Token char_literal736=null;
        Token char_literal737=null;
        Token char_literal739=null;
        CSharpParser.formal_parameter_list_return formal_parameter_list735 = null;

        CSharpParser.interface_accessor_declarations_return interface_accessor_declarations738 = null;


        Object string_literal733_tree=null;
        Object char_literal734_tree=null;
        Object char_literal736_tree=null;
        Object char_literal737_tree=null;
        Object char_literal739_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 213) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:739:30: ( 'this' '[' formal_parameter_list ']' '{' interface_accessor_declarations '}' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:741:3: 'this' '[' formal_parameter_list ']' '{' interface_accessor_declarations '}'
            {
            root_0 = (Object)adaptor.nil();

            string_literal733=(Token)match(input,83,FOLLOW_83_in_interface_indexer_declaration5992); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal733_tree = (Object)adaptor.create(string_literal733);
            adaptor.addChild(root_0, string_literal733_tree);
            }
            char_literal734=(Token)match(input,86,FOLLOW_86_in_interface_indexer_declaration5996); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal734_tree = (Object)adaptor.create(char_literal734);
            adaptor.addChild(root_0, char_literal734_tree);
            }
            pushFollow(FOLLOW_formal_parameter_list_in_interface_indexer_declaration6000);
            formal_parameter_list735=formal_parameter_list();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, formal_parameter_list735.getTree());
            char_literal736=(Token)match(input,87,FOLLOW_87_in_interface_indexer_declaration6004); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal736_tree = (Object)adaptor.create(char_literal736);
            adaptor.addChild(root_0, char_literal736_tree);
            }
            char_literal737=(Token)match(input,62,FOLLOW_62_in_interface_indexer_declaration6008); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal737_tree = (Object)adaptor.create(char_literal737);
            adaptor.addChild(root_0, char_literal737_tree);
            }
            pushFollow(FOLLOW_interface_accessor_declarations_in_interface_indexer_declaration6012);
            interface_accessor_declarations738=interface_accessor_declarations();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_accessor_declarations738.getTree());
            char_literal739=(Token)match(input,63,FOLLOW_63_in_interface_indexer_declaration6016); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal739_tree = (Object)adaptor.create(char_literal739);
            adaptor.addChild(root_0, char_literal739_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 213, interface_indexer_declaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "interface_indexer_declaration"

    public static class interface_accessor_declarations_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "interface_accessor_declarations"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:742:1: interface_accessor_declarations : ( attributes )? ( interface_get_accessor_declaration ( attributes )? ( interface_set_accessor_declaration )? | interface_set_accessor_declaration ( attributes )? ( interface_get_accessor_declaration )? ) ;
    public final CSharpParser.interface_accessor_declarations_return interface_accessor_declarations() throws RecognitionException {
        CSharpParser.interface_accessor_declarations_return retval = new CSharpParser.interface_accessor_declarations_return();
        retval.start = input.LT(1);
        int interface_accessor_declarations_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.attributes_return attributes740 = null;

        CSharpParser.interface_get_accessor_declaration_return interface_get_accessor_declaration741 = null;

        CSharpParser.attributes_return attributes742 = null;

        CSharpParser.interface_set_accessor_declaration_return interface_set_accessor_declaration743 = null;

        CSharpParser.interface_set_accessor_declaration_return interface_set_accessor_declaration744 = null;

        CSharpParser.attributes_return attributes745 = null;

        CSharpParser.interface_get_accessor_declaration_return interface_get_accessor_declaration746 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 214) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:742:32: ( ( attributes )? ( interface_get_accessor_declaration ( attributes )? ( interface_set_accessor_declaration )? | interface_set_accessor_declaration ( attributes )? ( interface_get_accessor_declaration )? ) )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:743:3: ( attributes )? ( interface_get_accessor_declaration ( attributes )? ( interface_set_accessor_declaration )? | interface_set_accessor_declaration ( attributes )? ( interface_get_accessor_declaration )? )
            {
            root_0 = (Object)adaptor.nil();

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:743:3: ( attributes )?
            int alt213=2;
            int LA213_0 = input.LA(1);

            if ( (LA213_0==86) ) {
                alt213=1;
            }
            switch (alt213) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:743:3: attributes
                    {
                    pushFollow(FOLLOW_attributes_in_interface_accessor_declarations6025);
                    attributes740=attributes();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes740.getTree());

                    }
                    break;

            }

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:744:5: ( interface_get_accessor_declaration ( attributes )? ( interface_set_accessor_declaration )? | interface_set_accessor_declaration ( attributes )? ( interface_get_accessor_declaration )? )
            int alt218=2;
            int LA218_0 = input.LA(1);

            if ( (LA218_0==156) ) {
                alt218=1;
            }
            else if ( (LA218_0==157) ) {
                alt218=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 218, 0, input);

                throw nvae;
            }
            switch (alt218) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:744:6: interface_get_accessor_declaration ( attributes )? ( interface_set_accessor_declaration )?
                    {
                    pushFollow(FOLLOW_interface_get_accessor_declaration_in_interface_accessor_declarations6036);
                    interface_get_accessor_declaration741=interface_get_accessor_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_get_accessor_declaration741.getTree());
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:744:43: ( attributes )?
                    int alt214=2;
                    int LA214_0 = input.LA(1);

                    if ( (LA214_0==86) ) {
                        alt214=1;
                    }
                    switch (alt214) {
                        case 1 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:744:43: attributes
                            {
                            pushFollow(FOLLOW_attributes_in_interface_accessor_declarations6040);
                            attributes742=attributes();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes742.getTree());

                            }
                            break;

                    }

                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:744:57: ( interface_set_accessor_declaration )?
                    int alt215=2;
                    int LA215_0 = input.LA(1);

                    if ( (LA215_0==157) ) {
                        alt215=1;
                    }
                    switch (alt215) {
                        case 1 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:744:57: interface_set_accessor_declaration
                            {
                            pushFollow(FOLLOW_interface_set_accessor_declaration_in_interface_accessor_declarations6045);
                            interface_set_accessor_declaration743=interface_set_accessor_declaration();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_set_accessor_declaration743.getTree());

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:745:7: interface_set_accessor_declaration ( attributes )? ( interface_get_accessor_declaration )?
                    {
                    pushFollow(FOLLOW_interface_set_accessor_declaration_in_interface_accessor_declarations6054);
                    interface_set_accessor_declaration744=interface_set_accessor_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_set_accessor_declaration744.getTree());
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:745:44: ( attributes )?
                    int alt216=2;
                    int LA216_0 = input.LA(1);

                    if ( (LA216_0==86) ) {
                        alt216=1;
                    }
                    switch (alt216) {
                        case 1 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:745:44: attributes
                            {
                            pushFollow(FOLLOW_attributes_in_interface_accessor_declarations6058);
                            attributes745=attributes();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes745.getTree());

                            }
                            break;

                    }

                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:745:58: ( interface_get_accessor_declaration )?
                    int alt217=2;
                    int LA217_0 = input.LA(1);

                    if ( (LA217_0==156) ) {
                        alt217=1;
                    }
                    switch (alt217) {
                        case 1 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:745:58: interface_get_accessor_declaration
                            {
                            pushFollow(FOLLOW_interface_get_accessor_declaration_in_interface_accessor_declarations6063);
                            interface_get_accessor_declaration746=interface_get_accessor_declaration();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_get_accessor_declaration746.getTree());

                            }
                            break;

                    }


                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 214, interface_accessor_declarations_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "interface_accessor_declarations"

    public static class interface_get_accessor_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "interface_get_accessor_declaration"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:746:1: interface_get_accessor_declaration : 'get' ';' ;
    public final CSharpParser.interface_get_accessor_declaration_return interface_get_accessor_declaration() throws RecognitionException {
        CSharpParser.interface_get_accessor_declaration_return retval = new CSharpParser.interface_get_accessor_declaration_return();
        retval.start = input.LT(1);
        int interface_get_accessor_declaration_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal747=null;
        Token char_literal748=null;

        Object string_literal747_tree=null;
        Object char_literal748_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 215) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:746:35: ( 'get' ';' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:747:3: 'get' ';'
            {
            root_0 = (Object)adaptor.nil();

            string_literal747=(Token)match(input,156,FOLLOW_156_in_interface_get_accessor_declaration6074); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal747_tree = (Object)adaptor.create(string_literal747);
            adaptor.addChild(root_0, string_literal747_tree);
            }
            char_literal748=(Token)match(input,SEMI,FOLLOW_SEMI_in_interface_get_accessor_declaration6078); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal748_tree = (Object)adaptor.create(char_literal748);
            adaptor.addChild(root_0, char_literal748_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 215, interface_get_accessor_declaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "interface_get_accessor_declaration"

    public static class interface_set_accessor_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "interface_set_accessor_declaration"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:748:1: interface_set_accessor_declaration : 'set' ';' ;
    public final CSharpParser.interface_set_accessor_declaration_return interface_set_accessor_declaration() throws RecognitionException {
        CSharpParser.interface_set_accessor_declaration_return retval = new CSharpParser.interface_set_accessor_declaration_return();
        retval.start = input.LT(1);
        int interface_set_accessor_declaration_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal749=null;
        Token char_literal750=null;

        Object string_literal749_tree=null;
        Object char_literal750_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 216) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:748:35: ( 'set' ';' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:749:3: 'set' ';'
            {
            root_0 = (Object)adaptor.nil();

            string_literal749=(Token)match(input,157,FOLLOW_157_in_interface_set_accessor_declaration6090); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal749_tree = (Object)adaptor.create(string_literal749);
            adaptor.addChild(root_0, string_literal749_tree);
            }
            char_literal750=(Token)match(input,SEMI,FOLLOW_SEMI_in_interface_set_accessor_declaration6094); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal750_tree = (Object)adaptor.create(char_literal750);
            adaptor.addChild(root_0, char_literal750_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 216, interface_set_accessor_declaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "interface_set_accessor_declaration"

    public static class method_modifiers_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "method_modifiers"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:750:1: method_modifiers : ( modifier )+ ;
    public final CSharpParser.method_modifiers_return method_modifiers() throws RecognitionException {
        CSharpParser.method_modifiers_return retval = new CSharpParser.method_modifiers_return();
        retval.start = input.LT(1);
        int method_modifiers_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.modifier_return modifier751 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 217) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:750:17: ( ( modifier )+ )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:751:3: ( modifier )+
            {
            root_0 = (Object)adaptor.nil();

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:751:3: ( modifier )+
            int cnt219=0;
            loop219:
            do {
                int alt219=2;
                int LA219_0 = input.LA(1);

                if ( (LA219_0==64||(LA219_0>=68 && LA219_0<=80)) ) {
                    alt219=1;
                }


                switch (alt219) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:751:3: modifier
            	    {
            	    pushFollow(FOLLOW_modifier_in_method_modifiers6106);
            	    modifier751=modifier();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, modifier751.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt219 >= 1 ) break loop219;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(219, input);
                        throw eee;
                }
                cnt219++;
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 217, method_modifiers_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "method_modifiers"

    public static class struct_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "struct_declaration"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:754:1: struct_declaration : 'struct' type_or_generic ( struct_interfaces )? ( type_parameter_constraints_clauses )? struct_body ( ';' )? ;
    public final CSharpParser.struct_declaration_return struct_declaration() throws RecognitionException {
        CSharpParser.struct_declaration_return retval = new CSharpParser.struct_declaration_return();
        retval.start = input.LT(1);
        int struct_declaration_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal752=null;
        Token char_literal757=null;
        CSharpParser.type_or_generic_return type_or_generic753 = null;

        CSharpParser.struct_interfaces_return struct_interfaces754 = null;

        CSharpParser.type_parameter_constraints_clauses_return type_parameter_constraints_clauses755 = null;

        CSharpParser.struct_body_return struct_body756 = null;


        Object string_literal752_tree=null;
        Object char_literal757_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 218) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:754:19: ( 'struct' type_or_generic ( struct_interfaces )? ( type_parameter_constraints_clauses )? struct_body ( ';' )? )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:755:3: 'struct' type_or_generic ( struct_interfaces )? ( type_parameter_constraints_clauses )? struct_body ( ';' )?
            {
            root_0 = (Object)adaptor.nil();

            string_literal752=(Token)match(input,169,FOLLOW_169_in_struct_declaration6120); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal752_tree = (Object)adaptor.create(string_literal752);
            adaptor.addChild(root_0, string_literal752_tree);
            }
            pushFollow(FOLLOW_type_or_generic_in_struct_declaration6124);
            type_or_generic753=type_or_generic();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type_or_generic753.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:755:32: ( struct_interfaces )?
            int alt220=2;
            int LA220_0 = input.LA(1);

            if ( (LA220_0==90) ) {
                alt220=1;
            }
            switch (alt220) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:755:32: struct_interfaces
                    {
                    pushFollow(FOLLOW_struct_interfaces_in_struct_declaration6128);
                    struct_interfaces754=struct_interfaces();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, struct_interfaces754.getTree());

                    }
                    break;

            }

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:755:53: ( type_parameter_constraints_clauses )?
            int alt221=2;
            int LA221_0 = input.LA(1);

            if ( (LA221_0==145) ) {
                alt221=1;
            }
            switch (alt221) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:755:53: type_parameter_constraints_clauses
                    {
                    pushFollow(FOLLOW_type_parameter_constraints_clauses_in_struct_declaration6133);
                    type_parameter_constraints_clauses755=type_parameter_constraints_clauses();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_constraints_clauses755.getTree());

                    }
                    break;

            }

            pushFollow(FOLLOW_struct_body_in_struct_declaration6138);
            struct_body756=struct_body();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, struct_body756.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:755:105: ( ';' )?
            int alt222=2;
            int LA222_0 = input.LA(1);

            if ( (LA222_0==SEMI) ) {
                alt222=1;
            }
            switch (alt222) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:755:105: ';'
                    {
                    char_literal757=(Token)match(input,SEMI,FOLLOW_SEMI_in_struct_declaration6142); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal757_tree = (Object)adaptor.create(char_literal757);
                    adaptor.addChild(root_0, char_literal757_tree);
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 218, struct_declaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "struct_declaration"

    public static class struct_modifiers_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "struct_modifiers"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:756:1: struct_modifiers : ( struct_modifier )+ ;
    public final CSharpParser.struct_modifiers_return struct_modifiers() throws RecognitionException {
        CSharpParser.struct_modifiers_return retval = new CSharpParser.struct_modifiers_return();
        retval.start = input.LT(1);
        int struct_modifiers_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.struct_modifier_return struct_modifier758 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 219) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:756:17: ( ( struct_modifier )+ )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:757:3: ( struct_modifier )+
            {
            root_0 = (Object)adaptor.nil();

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:757:3: ( struct_modifier )+
            int cnt223=0;
            loop223:
            do {
                int alt223=2;
                int LA223_0 = input.LA(1);

                if ( ((LA223_0>=68 && LA223_0<=73)) ) {
                    alt223=1;
                }


                switch (alt223) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:757:3: struct_modifier
            	    {
            	    pushFollow(FOLLOW_struct_modifier_in_struct_modifiers6152);
            	    struct_modifier758=struct_modifier();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, struct_modifier758.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt223 >= 1 ) break loop223;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(223, input);
                        throw eee;
                }
                cnt223++;
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 219, struct_modifiers_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "struct_modifiers"

    public static class struct_modifier_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "struct_modifier"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:758:1: struct_modifier : ( 'new' | 'public' | 'protected' | 'internal' | 'private' | 'unsafe' );
    public final CSharpParser.struct_modifier_return struct_modifier() throws RecognitionException {
        CSharpParser.struct_modifier_return retval = new CSharpParser.struct_modifier_return();
        retval.start = input.LT(1);
        int struct_modifier_StartIndex = input.index();
        Object root_0 = null;

        Token set759=null;

        Object set759_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 220) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:758:16: ( 'new' | 'public' | 'protected' | 'internal' | 'private' | 'unsafe' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:
            {
            root_0 = (Object)adaptor.nil();

            set759=(Token)input.LT(1);
            if ( (input.LA(1)>=68 && input.LA(1)<=73) ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set759));
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 220, struct_modifier_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "struct_modifier"

    public static class struct_interfaces_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "struct_interfaces"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:760:1: struct_interfaces : ':' interface_type_list ;
    public final CSharpParser.struct_interfaces_return struct_interfaces() throws RecognitionException {
        CSharpParser.struct_interfaces_return retval = new CSharpParser.struct_interfaces_return();
        retval.start = input.LT(1);
        int struct_interfaces_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal760=null;
        CSharpParser.interface_type_list_return interface_type_list761 = null;


        Object char_literal760_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 221) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:760:18: ( ':' interface_type_list )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:761:3: ':' interface_type_list
            {
            root_0 = (Object)adaptor.nil();

            char_literal760=(Token)match(input,90,FOLLOW_90_in_struct_interfaces6191); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal760_tree = (Object)adaptor.create(char_literal760);
            adaptor.addChild(root_0, char_literal760_tree);
            }
            pushFollow(FOLLOW_interface_type_list_in_struct_interfaces6195);
            interface_type_list761=interface_type_list();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_type_list761.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 221, struct_interfaces_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "struct_interfaces"

    public static class struct_body_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "struct_body"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:762:1: struct_body : '{' ( struct_member_declarations )? '}' ;
    public final CSharpParser.struct_body_return struct_body() throws RecognitionException {
        CSharpParser.struct_body_return retval = new CSharpParser.struct_body_return();
        retval.start = input.LT(1);
        int struct_body_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal762=null;
        Token char_literal764=null;
        CSharpParser.struct_member_declarations_return struct_member_declarations763 = null;


        Object char_literal762_tree=null;
        Object char_literal764_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 222) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:762:12: ( '{' ( struct_member_declarations )? '}' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:763:3: '{' ( struct_member_declarations )? '}'
            {
            root_0 = (Object)adaptor.nil();

            char_literal762=(Token)match(input,62,FOLLOW_62_in_struct_body6203); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal762_tree = (Object)adaptor.create(char_literal762);
            adaptor.addChild(root_0, char_literal762_tree);
            }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:763:9: ( struct_member_declarations )?
            int alt224=2;
            int LA224_0 = input.LA(1);

            if ( (LA224_0==IDENTIFIER||LA224_0==ENUM||(LA224_0>=64 && LA224_0<=65)||(LA224_0>=67 && LA224_0<=82)||LA224_0==86||LA224_0==97||(LA224_0>=132 && LA224_0<=133)||(LA224_0>=135 && LA224_0<=152)||(LA224_0>=154 && LA224_0<=155)||(LA224_0>=157 && LA224_0<=170)||LA224_0==172||(LA224_0>=174 && LA224_0<=175)||(LA224_0>=177 && LA224_0<=178)||(LA224_0>=195 && LA224_0<=202)) ) {
                alt224=1;
            }
            switch (alt224) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:763:9: struct_member_declarations
                    {
                    pushFollow(FOLLOW_struct_member_declarations_in_struct_body6207);
                    struct_member_declarations763=struct_member_declarations();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, struct_member_declarations763.getTree());

                    }
                    break;

            }

            char_literal764=(Token)match(input,63,FOLLOW_63_in_struct_body6212); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal764_tree = (Object)adaptor.create(char_literal764);
            adaptor.addChild(root_0, char_literal764_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 222, struct_body_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "struct_body"

    public static class struct_member_declarations_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "struct_member_declarations"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:764:1: struct_member_declarations : ( struct_member_declaration )+ ;
    public final CSharpParser.struct_member_declarations_return struct_member_declarations() throws RecognitionException {
        CSharpParser.struct_member_declarations_return retval = new CSharpParser.struct_member_declarations_return();
        retval.start = input.LT(1);
        int struct_member_declarations_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.struct_member_declaration_return struct_member_declaration765 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 223) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:764:27: ( ( struct_member_declaration )+ )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:765:3: ( struct_member_declaration )+
            {
            root_0 = (Object)adaptor.nil();

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:765:3: ( struct_member_declaration )+
            int cnt225=0;
            loop225:
            do {
                int alt225=2;
                int LA225_0 = input.LA(1);

                if ( (LA225_0==IDENTIFIER||LA225_0==ENUM||(LA225_0>=64 && LA225_0<=65)||(LA225_0>=67 && LA225_0<=82)||LA225_0==86||LA225_0==97||(LA225_0>=132 && LA225_0<=133)||(LA225_0>=135 && LA225_0<=152)||(LA225_0>=154 && LA225_0<=155)||(LA225_0>=157 && LA225_0<=170)||LA225_0==172||(LA225_0>=174 && LA225_0<=175)||(LA225_0>=177 && LA225_0<=178)||(LA225_0>=195 && LA225_0<=202)) ) {
                    alt225=1;
                }


                switch (alt225) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:765:3: struct_member_declaration
            	    {
            	    pushFollow(FOLLOW_struct_member_declaration_in_struct_member_declarations6220);
            	    struct_member_declaration765=struct_member_declaration();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, struct_member_declaration765.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt225 >= 1 ) break loop225;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(225, input);
                        throw eee;
                }
                cnt225++;
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 223, struct_member_declarations_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "struct_member_declarations"

    public static class struct_member_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "struct_member_declaration"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:766:1: struct_member_declaration : ( attributes )? (m= modifiers )? ( 'const' type constant_declarators ';' | event_declaration | 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration ) | interface_declaration | class_declaration | 'void' method_declaration | type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration ) | struct_declaration | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration ) ;
    public final CSharpParser.struct_member_declaration_return struct_member_declaration() throws RecognitionException {
        CSharpParser.struct_member_declaration_return retval = new CSharpParser.struct_member_declaration_return();
        retval.start = input.LT(1);
        int struct_member_declaration_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal767=null;
        Token char_literal770=null;
        Token string_literal772=null;
        Token string_literal779=null;
        Token char_literal785=null;
        CSharpParser.modifiers_return m = null;

        CSharpParser.attributes_return attributes766 = null;

        CSharpParser.type_return type768 = null;

        CSharpParser.constant_declarators_return constant_declarators769 = null;

        CSharpParser.event_declaration_return event_declaration771 = null;

        CSharpParser.method_declaration_return method_declaration773 = null;

        CSharpParser.interface_declaration_return interface_declaration774 = null;

        CSharpParser.class_declaration_return class_declaration775 = null;

        CSharpParser.struct_declaration_return struct_declaration776 = null;

        CSharpParser.interface_declaration_return interface_declaration777 = null;

        CSharpParser.class_declaration_return class_declaration778 = null;

        CSharpParser.method_declaration_return method_declaration780 = null;

        CSharpParser.type_return type781 = null;

        CSharpParser.method_declaration_return method_declaration782 = null;

        CSharpParser.property_declaration_return property_declaration783 = null;

        CSharpParser.type_name_return type_name784 = null;

        CSharpParser.indexer_declaration_return indexer_declaration786 = null;

        CSharpParser.indexer_declaration_return indexer_declaration787 = null;

        CSharpParser.field_declaration_return field_declaration788 = null;

        CSharpParser.operator_declaration_return operator_declaration789 = null;

        CSharpParser.struct_declaration_return struct_declaration790 = null;

        CSharpParser.enum_declaration_return enum_declaration791 = null;

        CSharpParser.delegate_declaration_return delegate_declaration792 = null;

        CSharpParser.conversion_operator_declaration_return conversion_operator_declaration793 = null;

        CSharpParser.constructor_declaration_return constructor_declaration794 = null;


        Object string_literal767_tree=null;
        Object char_literal770_tree=null;
        Object string_literal772_tree=null;
        Object string_literal779_tree=null;
        Object char_literal785_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 224) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:766:26: ( ( attributes )? (m= modifiers )? ( 'const' type constant_declarators ';' | event_declaration | 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration ) | interface_declaration | class_declaration | 'void' method_declaration | type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration ) | struct_declaration | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration ) )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:767:3: ( attributes )? (m= modifiers )? ( 'const' type constant_declarators ';' | event_declaration | 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration ) | interface_declaration | class_declaration | 'void' method_declaration | type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration ) | struct_declaration | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration )
            {
            root_0 = (Object)adaptor.nil();

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:767:3: ( attributes )?
            int alt226=2;
            int LA226_0 = input.LA(1);

            if ( (LA226_0==86) ) {
                alt226=1;
            }
            switch (alt226) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:767:3: attributes
                    {
                    pushFollow(FOLLOW_attributes_in_struct_member_declaration6230);
                    attributes766=attributes();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes766.getTree());

                    }
                    break;

            }

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:767:18: (m= modifiers )?
            int alt227=2;
            int LA227_0 = input.LA(1);

            if ( (LA227_0==64||(LA227_0>=68 && LA227_0<=80)) ) {
                alt227=1;
            }
            switch (alt227) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:767:18: m= modifiers
                    {
                    pushFollow(FOLLOW_modifiers_in_struct_member_declaration6237);
                    m=modifiers();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, m.getTree());

                    }
                    break;

            }

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:768:3: ( 'const' type constant_declarators ';' | event_declaration | 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration ) | interface_declaration | class_declaration | 'void' method_declaration | type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration ) | struct_declaration | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration )
            int alt230=12;
            alt230 = dfa230.predict(input);
            switch (alt230) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:768:5: 'const' type constant_declarators ';'
                    {
                    string_literal767=(Token)match(input,81,FOLLOW_81_in_struct_member_declaration6244); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal767_tree = (Object)adaptor.create(string_literal767);
                    adaptor.addChild(root_0, string_literal767_tree);
                    }
                    pushFollow(FOLLOW_type_in_struct_member_declaration6248);
                    type768=type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type768.getTree());
                    pushFollow(FOLLOW_constant_declarators_in_struct_member_declaration6252);
                    constant_declarators769=constant_declarators();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, constant_declarators769.getTree());
                    char_literal770=(Token)match(input,SEMI,FOLLOW_SEMI_in_struct_member_declaration6256); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal770_tree = (Object)adaptor.create(char_literal770);
                    adaptor.addChild(root_0, char_literal770_tree);
                    }

                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:769:5: event_declaration
                    {
                    pushFollow(FOLLOW_event_declaration_in_struct_member_declaration6262);
                    event_declaration771=event_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, event_declaration771.getTree());

                    }
                    break;
                case 3 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:770:5: 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration )
                    {
                    string_literal772=(Token)match(input,67,FOLLOW_67_in_struct_member_declaration6271); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal772_tree = (Object)adaptor.create(string_literal772);
                    adaptor.addChild(root_0, string_literal772_tree);
                    }
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:770:15: ( method_declaration | interface_declaration | class_declaration | struct_declaration )
                    int alt228=4;
                    switch ( input.LA(1) ) {
                    case IDENTIFIER:
                    case Real_literal:
                    case NUMBER:
                    case Hex_number:
                    case Character_literal:
                    case STRINGLITERAL:
                    case Verbatim_string_literal:
                    case TRUE:
                    case FALSE:
                    case NULL:
                    case 65:
                    case 132:
                    case 133:
                    case 135:
                    case 136:
                    case 137:
                    case 138:
                    case 139:
                    case 140:
                    case 141:
                    case 142:
                    case 143:
                    case 144:
                    case 145:
                    case 146:
                    case 147:
                    case 148:
                    case 150:
                    case 151:
                    case 152:
                    case 154:
                    case 157:
                    case 158:
                    case 159:
                    case 160:
                    case 161:
                    case 162:
                    case 163:
                    case 164:
                    case 165:
                    case 166:
                    case 167:
                    case 168:
                    case 170:
                    case 177:
                    case 178:
                    case 195:
                    case 196:
                    case 197:
                    case 198:
                    case 199:
                    case 200:
                    case 201:
                    case 202:
                        {
                        alt228=1;
                        }
                        break;
                    case 172:
                        {
                        alt228=2;
                        }
                        break;
                    case 155:
                        {
                        alt228=3;
                        }
                        break;
                    case 169:
                        {
                        alt228=4;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 228, 0, input);

                        throw nvae;
                    }

                    switch (alt228) {
                        case 1 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:770:16: method_declaration
                            {
                            pushFollow(FOLLOW_method_declaration_in_struct_member_declaration6274);
                            method_declaration773=method_declaration();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, method_declaration773.getTree());

                            }
                            break;
                        case 2 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:771:12: interface_declaration
                            {
                            pushFollow(FOLLOW_interface_declaration_in_struct_member_declaration6288);
                            interface_declaration774=interface_declaration();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_declaration774.getTree());

                            }
                            break;
                        case 3 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:772:12: class_declaration
                            {
                            pushFollow(FOLLOW_class_declaration_in_struct_member_declaration6302);
                            class_declaration775=class_declaration();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, class_declaration775.getTree());

                            }
                            break;
                        case 4 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:773:12: struct_declaration
                            {
                            pushFollow(FOLLOW_struct_declaration_in_struct_member_declaration6316);
                            struct_declaration776=struct_declaration();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, struct_declaration776.getTree());

                            }
                            break;

                    }


                    }
                    break;
                case 4 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:775:5: interface_declaration
                    {
                    pushFollow(FOLLOW_interface_declaration_in_struct_member_declaration6324);
                    interface_declaration777=interface_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_declaration777.getTree());

                    }
                    break;
                case 5 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:776:5: class_declaration
                    {
                    pushFollow(FOLLOW_class_declaration_in_struct_member_declaration6331);
                    class_declaration778=class_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, class_declaration778.getTree());

                    }
                    break;
                case 6 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:777:5: 'void' method_declaration
                    {
                    string_literal779=(Token)match(input,82,FOLLOW_82_in_struct_member_declaration6340); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal779_tree = (Object)adaptor.create(string_literal779);
                    adaptor.addChild(root_0, string_literal779_tree);
                    }
                    pushFollow(FOLLOW_method_declaration_in_struct_member_declaration6344);
                    method_declaration780=method_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, method_declaration780.getTree());

                    }
                    break;
                case 7 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:778:5: type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration )
                    {
                    pushFollow(FOLLOW_type_in_struct_member_declaration6350);
                    type781=type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type781.getTree());
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:778:10: ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration )
                    int alt229=6;
                    alt229 = dfa229.predict(input);
                    switch (alt229) {
                        case 1 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:778:12: ( member_name '(' )=> method_declaration
                            {
                            pushFollow(FOLLOW_method_declaration_in_struct_member_declaration6364);
                            method_declaration782=method_declaration();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, method_declaration782.getTree());

                            }
                            break;
                        case 2 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:779:10: ( member_name '{' )=> property_declaration
                            {
                            pushFollow(FOLLOW_property_declaration_in_struct_member_declaration6385);
                            property_declaration783=property_declaration();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, property_declaration783.getTree());

                            }
                            break;
                        case 3 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:780:10: ( member_name '.' 'this' )=> type_name '.' indexer_declaration
                            {
                            pushFollow(FOLLOW_type_name_in_struct_member_declaration6410);
                            type_name784=type_name();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, type_name784.getTree());
                            char_literal785=(Token)match(input,DOT,FOLLOW_DOT_in_struct_member_declaration6412); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            char_literal785_tree = (Object)adaptor.create(char_literal785);
                            adaptor.addChild(root_0, char_literal785_tree);
                            }
                            pushFollow(FOLLOW_indexer_declaration_in_struct_member_declaration6414);
                            indexer_declaration786=indexer_declaration();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, indexer_declaration786.getTree());

                            }
                            break;
                        case 4 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:781:10: indexer_declaration
                            {
                            pushFollow(FOLLOW_indexer_declaration_in_struct_member_declaration6425);
                            indexer_declaration787=indexer_declaration();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, indexer_declaration787.getTree());

                            }
                            break;
                        case 5 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:782:12: field_declaration
                            {
                            pushFollow(FOLLOW_field_declaration_in_struct_member_declaration6440);
                            field_declaration788=field_declaration();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, field_declaration788.getTree());

                            }
                            break;
                        case 6 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:783:12: operator_declaration
                            {
                            pushFollow(FOLLOW_operator_declaration_in_struct_member_declaration6459);
                            operator_declaration789=operator_declaration();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, operator_declaration789.getTree());

                            }
                            break;

                    }


                    }
                    break;
                case 8 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:787:5: struct_declaration
                    {
                    pushFollow(FOLLOW_struct_declaration_in_struct_member_declaration6480);
                    struct_declaration790=struct_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, struct_declaration790.getTree());

                    }
                    break;
                case 9 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:788:5: enum_declaration
                    {
                    pushFollow(FOLLOW_enum_declaration_in_struct_member_declaration6488);
                    enum_declaration791=enum_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, enum_declaration791.getTree());

                    }
                    break;
                case 10 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:789:5: delegate_declaration
                    {
                    pushFollow(FOLLOW_delegate_declaration_in_struct_member_declaration6498);
                    delegate_declaration792=delegate_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, delegate_declaration792.getTree());

                    }
                    break;
                case 11 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:790:5: conversion_operator_declaration
                    {
                    pushFollow(FOLLOW_conversion_operator_declaration_in_struct_member_declaration6506);
                    conversion_operator_declaration793=conversion_operator_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, conversion_operator_declaration793.getTree());

                    }
                    break;
                case 12 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:791:5: constructor_declaration
                    {
                    pushFollow(FOLLOW_constructor_declaration_in_struct_member_declaration6512);
                    constructor_declaration794=constructor_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, constructor_declaration794.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 224, struct_member_declaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "struct_member_declaration"

    public static class indexer_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "indexer_declaration"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:797:1: indexer_declaration : indexer_declarator '{' accessor_declarations '}' ;
    public final CSharpParser.indexer_declaration_return indexer_declaration() throws RecognitionException {
        CSharpParser.indexer_declaration_return retval = new CSharpParser.indexer_declaration_return();
        retval.start = input.LT(1);
        int indexer_declaration_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal796=null;
        Token char_literal798=null;
        CSharpParser.indexer_declarator_return indexer_declarator795 = null;

        CSharpParser.accessor_declarations_return accessor_declarations797 = null;


        Object char_literal796_tree=null;
        Object char_literal798_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 225) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:797:20: ( indexer_declarator '{' accessor_declarations '}' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:798:3: indexer_declarator '{' accessor_declarations '}'
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_indexer_declarator_in_indexer_declaration6532);
            indexer_declarator795=indexer_declarator();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, indexer_declarator795.getTree());
            char_literal796=(Token)match(input,62,FOLLOW_62_in_indexer_declaration6536); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal796_tree = (Object)adaptor.create(char_literal796);
            adaptor.addChild(root_0, char_literal796_tree);
            }
            pushFollow(FOLLOW_accessor_declarations_in_indexer_declaration6540);
            accessor_declarations797=accessor_declarations();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, accessor_declarations797.getTree());
            char_literal798=(Token)match(input,63,FOLLOW_63_in_indexer_declaration6544); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal798_tree = (Object)adaptor.create(char_literal798);
            adaptor.addChild(root_0, char_literal798_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 225, indexer_declaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "indexer_declaration"

    public static class indexer_declarator_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "indexer_declarator"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:799:1: indexer_declarator : 'this' '[' formal_parameter_list ']' ;
    public final CSharpParser.indexer_declarator_return indexer_declarator() throws RecognitionException {
        CSharpParser.indexer_declarator_return retval = new CSharpParser.indexer_declarator_return();
        retval.start = input.LT(1);
        int indexer_declarator_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal799=null;
        Token char_literal800=null;
        Token char_literal802=null;
        CSharpParser.formal_parameter_list_return formal_parameter_list801 = null;


        Object string_literal799_tree=null;
        Object char_literal800_tree=null;
        Object char_literal802_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 226) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:799:19: ( 'this' '[' formal_parameter_list ']' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:801:3: 'this' '[' formal_parameter_list ']'
            {
            root_0 = (Object)adaptor.nil();

            string_literal799=(Token)match(input,83,FOLLOW_83_in_indexer_declarator6556); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal799_tree = (Object)adaptor.create(string_literal799);
            adaptor.addChild(root_0, string_literal799_tree);
            }
            char_literal800=(Token)match(input,86,FOLLOW_86_in_indexer_declarator6560); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal800_tree = (Object)adaptor.create(char_literal800);
            adaptor.addChild(root_0, char_literal800_tree);
            }
            pushFollow(FOLLOW_formal_parameter_list_in_indexer_declarator6564);
            formal_parameter_list801=formal_parameter_list();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, formal_parameter_list801.getTree());
            char_literal802=(Token)match(input,87,FOLLOW_87_in_indexer_declarator6568); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal802_tree = (Object)adaptor.create(char_literal802);
            adaptor.addChild(root_0, char_literal802_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 226, indexer_declarator_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "indexer_declarator"

    public static class operator_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "operator_declaration"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:804:1: operator_declaration : operator_declarator operator_body ;
    public final CSharpParser.operator_declaration_return operator_declaration() throws RecognitionException {
        CSharpParser.operator_declaration_return retval = new CSharpParser.operator_declaration_return();
        retval.start = input.LT(1);
        int operator_declaration_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.operator_declarator_return operator_declarator803 = null;

        CSharpParser.operator_body_return operator_body804 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 227) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:804:21: ( operator_declarator operator_body )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:805:3: operator_declarator operator_body
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_operator_declarator_in_operator_declaration6581);
            operator_declarator803=operator_declarator();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, operator_declarator803.getTree());
            pushFollow(FOLLOW_operator_body_in_operator_declaration6585);
            operator_body804=operator_body();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, operator_body804.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 227, operator_declaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "operator_declaration"

    public static class operator_declarator_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "operator_declarator"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:806:1: operator_declarator : 'operator' ( ( '+' | '-' ) '(' type identifier ( binary_operator_declarator | unary_operator_declarator ) | overloadable_unary_operator unary_operator_declarator | overloadable_binary_operator binary_operator_declarator ) ;
    public final CSharpParser.operator_declarator_return operator_declarator() throws RecognitionException {
        CSharpParser.operator_declarator_return retval = new CSharpParser.operator_declarator_return();
        retval.start = input.LT(1);
        int operator_declarator_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal805=null;
        Token set806=null;
        Token char_literal807=null;
        CSharpParser.type_return type808 = null;

        CSharpParser.identifier_return identifier809 = null;

        CSharpParser.binary_operator_declarator_return binary_operator_declarator810 = null;

        CSharpParser.unary_operator_declarator_return unary_operator_declarator811 = null;

        CSharpParser.overloadable_unary_operator_return overloadable_unary_operator812 = null;

        CSharpParser.unary_operator_declarator_return unary_operator_declarator813 = null;

        CSharpParser.overloadable_binary_operator_return overloadable_binary_operator814 = null;

        CSharpParser.binary_operator_declarator_return binary_operator_declarator815 = null;


        Object string_literal805_tree=null;
        Object set806_tree=null;
        Object char_literal807_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 228) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:806:20: ( 'operator' ( ( '+' | '-' ) '(' type identifier ( binary_operator_declarator | unary_operator_declarator ) | overloadable_unary_operator unary_operator_declarator | overloadable_binary_operator binary_operator_declarator ) )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:807:3: 'operator' ( ( '+' | '-' ) '(' type identifier ( binary_operator_declarator | unary_operator_declarator ) | overloadable_unary_operator unary_operator_declarator | overloadable_binary_operator binary_operator_declarator )
            {
            root_0 = (Object)adaptor.nil();

            string_literal805=(Token)match(input,173,FOLLOW_173_in_operator_declarator6594); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal805_tree = (Object)adaptor.create(string_literal805);
            adaptor.addChild(root_0, string_literal805_tree);
            }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:808:5: ( ( '+' | '-' ) '(' type identifier ( binary_operator_declarator | unary_operator_declarator ) | overloadable_unary_operator unary_operator_declarator | overloadable_binary_operator binary_operator_declarator )
            int alt232=3;
            switch ( input.LA(1) ) {
            case MINUS:
            case 104:
                {
                alt232=1;
                }
                break;
            case TRUE:
            case FALSE:
            case 102:
            case 103:
            case 105:
            case 106:
                {
                alt232=2;
                }
                break;
            case GT:
            case 99:
            case 100:
            case 116:
            case 117:
            case 118:
            case 119:
            case 120:
            case 121:
            case 124:
            case 125:
            case 126:
            case 127:
                {
                alt232=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 232, 0, input);

                throw nvae;
            }

            switch (alt232) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:808:6: ( '+' | '-' ) '(' type identifier ( binary_operator_declarator | unary_operator_declarator )
                    {
                    set806=(Token)input.LT(1);
                    if ( input.LA(1)==MINUS||input.LA(1)==104 ) {
                        input.consume();
                        if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set806));
                        state.errorRecovery=false;state.failed=false;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }

                    char_literal807=(Token)match(input,88,FOLLOW_88_in_operator_declarator6614); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal807_tree = (Object)adaptor.create(char_literal807);
                    adaptor.addChild(root_0, char_literal807_tree);
                    }
                    pushFollow(FOLLOW_type_in_operator_declarator6618);
                    type808=type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type808.getTree());
                    pushFollow(FOLLOW_identifier_in_operator_declarator6622);
                    identifier809=identifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier809.getTree());
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:808:44: ( binary_operator_declarator | unary_operator_declarator )
                    int alt231=2;
                    int LA231_0 = input.LA(1);

                    if ( (LA231_0==89) ) {
                        alt231=1;
                    }
                    else if ( (LA231_0==RPAREN) ) {
                        alt231=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 231, 0, input);

                        throw nvae;
                    }
                    switch (alt231) {
                        case 1 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:808:45: binary_operator_declarator
                            {
                            pushFollow(FOLLOW_binary_operator_declarator_in_operator_declarator6625);
                            binary_operator_declarator810=binary_operator_declarator();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, binary_operator_declarator810.getTree());

                            }
                            break;
                        case 2 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:808:74: unary_operator_declarator
                            {
                            pushFollow(FOLLOW_unary_operator_declarator_in_operator_declarator6629);
                            unary_operator_declarator811=unary_operator_declarator();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_operator_declarator811.getTree());

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:809:7: overloadable_unary_operator unary_operator_declarator
                    {
                    pushFollow(FOLLOW_overloadable_unary_operator_in_operator_declarator6638);
                    overloadable_unary_operator812=overloadable_unary_operator();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, overloadable_unary_operator812.getTree());
                    pushFollow(FOLLOW_unary_operator_declarator_in_operator_declarator6642);
                    unary_operator_declarator813=unary_operator_declarator();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_operator_declarator813.getTree());

                    }
                    break;
                case 3 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:810:7: overloadable_binary_operator binary_operator_declarator
                    {
                    pushFollow(FOLLOW_overloadable_binary_operator_in_operator_declarator6650);
                    overloadable_binary_operator814=overloadable_binary_operator();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, overloadable_binary_operator814.getTree());
                    pushFollow(FOLLOW_binary_operator_declarator_in_operator_declarator6654);
                    binary_operator_declarator815=binary_operator_declarator();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, binary_operator_declarator815.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 228, operator_declarator_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "operator_declarator"

    public static class unary_operator_declarator_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "unary_operator_declarator"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:811:1: unary_operator_declarator : ')' ;
    public final CSharpParser.unary_operator_declarator_return unary_operator_declarator() throws RecognitionException {
        CSharpParser.unary_operator_declarator_return retval = new CSharpParser.unary_operator_declarator_return();
        retval.start = input.LT(1);
        int unary_operator_declarator_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal816=null;

        Object char_literal816_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 229) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:811:26: ( ')' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:812:6: ')'
            {
            root_0 = (Object)adaptor.nil();

            char_literal816=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_unary_operator_declarator6667); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal816_tree = (Object)adaptor.create(char_literal816);
            adaptor.addChild(root_0, char_literal816_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 229, unary_operator_declarator_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "unary_operator_declarator"

    public static class overloadable_unary_operator_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "overloadable_unary_operator"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:813:1: overloadable_unary_operator : ( '!' | '~' | '++' | '--' | 'true' | 'false' );
    public final CSharpParser.overloadable_unary_operator_return overloadable_unary_operator() throws RecognitionException {
        CSharpParser.overloadable_unary_operator_return retval = new CSharpParser.overloadable_unary_operator_return();
        retval.start = input.LT(1);
        int overloadable_unary_operator_StartIndex = input.index();
        Object root_0 = null;

        Token set817=null;

        Object set817_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 230) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:813:28: ( '!' | '~' | '++' | '--' | 'true' | 'false' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:
            {
            root_0 = (Object)adaptor.nil();

            set817=(Token)input.LT(1);
            if ( (input.LA(1)>=TRUE && input.LA(1)<=FALSE)||(input.LA(1)>=102 && input.LA(1)<=103)||(input.LA(1)>=105 && input.LA(1)<=106) ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set817));
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 230, overloadable_unary_operator_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "overloadable_unary_operator"

    public static class binary_operator_declarator_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "binary_operator_declarator"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:815:1: binary_operator_declarator : ',' type identifier ')' ;
    public final CSharpParser.binary_operator_declarator_return binary_operator_declarator() throws RecognitionException {
        CSharpParser.binary_operator_declarator_return retval = new CSharpParser.binary_operator_declarator_return();
        retval.start = input.LT(1);
        int binary_operator_declarator_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal818=null;
        Token char_literal821=null;
        CSharpParser.type_return type819 = null;

        CSharpParser.identifier_return identifier820 = null;


        Object char_literal818_tree=null;
        Object char_literal821_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 231) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:815:27: ( ',' type identifier ')' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:816:3: ',' type identifier ')'
            {
            root_0 = (Object)adaptor.nil();

            char_literal818=(Token)match(input,89,FOLLOW_89_in_binary_operator_declarator6712); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal818_tree = (Object)adaptor.create(char_literal818);
            adaptor.addChild(root_0, char_literal818_tree);
            }
            pushFollow(FOLLOW_type_in_binary_operator_declarator6716);
            type819=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type819.getTree());
            pushFollow(FOLLOW_identifier_in_binary_operator_declarator6720);
            identifier820=identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier820.getTree());
            char_literal821=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_binary_operator_declarator6724); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal821_tree = (Object)adaptor.create(char_literal821);
            adaptor.addChild(root_0, char_literal821_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 231, binary_operator_declarator_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "binary_operator_declarator"

    public static class overloadable_binary_operator_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "overloadable_binary_operator"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:818:1: overloadable_binary_operator : ( '*' | '/' | '%' | '&' | '|' | '^' | '<<' | '>' '>' | '==' | '!=' | '>' | '<' | '>=' | '<=' );
    public final CSharpParser.overloadable_binary_operator_return overloadable_binary_operator() throws RecognitionException {
        CSharpParser.overloadable_binary_operator_return retval = new CSharpParser.overloadable_binary_operator_return();
        retval.start = input.LT(1);
        int overloadable_binary_operator_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal822=null;
        Token char_literal823=null;
        Token char_literal824=null;
        Token char_literal825=null;
        Token char_literal826=null;
        Token char_literal827=null;
        Token string_literal828=null;
        Token char_literal829=null;
        Token char_literal830=null;
        Token string_literal831=null;
        Token string_literal832=null;
        Token char_literal833=null;
        Token char_literal834=null;
        Token string_literal835=null;
        Token string_literal836=null;

        Object char_literal822_tree=null;
        Object char_literal823_tree=null;
        Object char_literal824_tree=null;
        Object char_literal825_tree=null;
        Object char_literal826_tree=null;
        Object char_literal827_tree=null;
        Object string_literal828_tree=null;
        Object char_literal829_tree=null;
        Object char_literal830_tree=null;
        Object string_literal831_tree=null;
        Object string_literal832_tree=null;
        Object char_literal833_tree=null;
        Object char_literal834_tree=null;
        Object string_literal835_tree=null;
        Object string_literal836_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 232) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:818:29: ( '*' | '/' | '%' | '&' | '|' | '^' | '<<' | '>' '>' | '==' | '!=' | '>' | '<' | '>=' | '<=' )
            int alt233=14;
            alt233 = dfa233.predict(input);
            switch (alt233) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:819:20: '*'
                    {
                    root_0 = (Object)adaptor.nil();

                    char_literal822=(Token)match(input,100,FOLLOW_100_in_overloadable_binary_operator6736); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal822_tree = (Object)adaptor.create(char_literal822);
                    adaptor.addChild(root_0, char_literal822_tree);
                    }

                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:819:26: '/'
                    {
                    root_0 = (Object)adaptor.nil();

                    char_literal823=(Token)match(input,118,FOLLOW_118_in_overloadable_binary_operator6740); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal823_tree = (Object)adaptor.create(char_literal823);
                    adaptor.addChild(root_0, char_literal823_tree);
                    }

                    }
                    break;
                case 3 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:819:32: '%'
                    {
                    root_0 = (Object)adaptor.nil();

                    char_literal824=(Token)match(input,119,FOLLOW_119_in_overloadable_binary_operator6744); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal824_tree = (Object)adaptor.create(char_literal824);
                    adaptor.addChild(root_0, char_literal824_tree);
                    }

                    }
                    break;
                case 4 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:819:38: '&'
                    {
                    root_0 = (Object)adaptor.nil();

                    char_literal825=(Token)match(input,117,FOLLOW_117_in_overloadable_binary_operator6748); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal825_tree = (Object)adaptor.create(char_literal825);
                    adaptor.addChild(root_0, char_literal825_tree);
                    }

                    }
                    break;
                case 5 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:819:44: '|'
                    {
                    root_0 = (Object)adaptor.nil();

                    char_literal826=(Token)match(input,127,FOLLOW_127_in_overloadable_binary_operator6752); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal826_tree = (Object)adaptor.create(char_literal826);
                    adaptor.addChild(root_0, char_literal826_tree);
                    }

                    }
                    break;
                case 6 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:819:50: '^'
                    {
                    root_0 = (Object)adaptor.nil();

                    char_literal827=(Token)match(input,126,FOLLOW_126_in_overloadable_binary_operator6756); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal827_tree = (Object)adaptor.create(char_literal827);
                    adaptor.addChild(root_0, char_literal827_tree);
                    }

                    }
                    break;
                case 7 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:819:56: '<<'
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal828=(Token)match(input,120,FOLLOW_120_in_overloadable_binary_operator6760); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal828_tree = (Object)adaptor.create(string_literal828);
                    adaptor.addChild(root_0, string_literal828_tree);
                    }

                    }
                    break;
                case 8 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:819:63: '>' '>'
                    {
                    root_0 = (Object)adaptor.nil();

                    char_literal829=(Token)match(input,GT,FOLLOW_GT_in_overloadable_binary_operator6764); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal829_tree = (Object)adaptor.create(char_literal829);
                    adaptor.addChild(root_0, char_literal829_tree);
                    }
                    char_literal830=(Token)match(input,GT,FOLLOW_GT_in_overloadable_binary_operator6766); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal830_tree = (Object)adaptor.create(char_literal830);
                    adaptor.addChild(root_0, char_literal830_tree);
                    }

                    }
                    break;
                case 9 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:819:73: '=='
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal831=(Token)match(input,124,FOLLOW_124_in_overloadable_binary_operator6770); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal831_tree = (Object)adaptor.create(string_literal831);
                    adaptor.addChild(root_0, string_literal831_tree);
                    }

                    }
                    break;
                case 10 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:819:80: '!='
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal832=(Token)match(input,125,FOLLOW_125_in_overloadable_binary_operator6774); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal832_tree = (Object)adaptor.create(string_literal832);
                    adaptor.addChild(root_0, string_literal832_tree);
                    }

                    }
                    break;
                case 11 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:819:87: '>'
                    {
                    root_0 = (Object)adaptor.nil();

                    char_literal833=(Token)match(input,GT,FOLLOW_GT_in_overloadable_binary_operator6778); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal833_tree = (Object)adaptor.create(char_literal833);
                    adaptor.addChild(root_0, char_literal833_tree);
                    }

                    }
                    break;
                case 12 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:819:93: '<'
                    {
                    root_0 = (Object)adaptor.nil();

                    char_literal834=(Token)match(input,99,FOLLOW_99_in_overloadable_binary_operator6782); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal834_tree = (Object)adaptor.create(char_literal834);
                    adaptor.addChild(root_0, char_literal834_tree);
                    }

                    }
                    break;
                case 13 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:819:99: '>='
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal835=(Token)match(input,116,FOLLOW_116_in_overloadable_binary_operator6786); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal835_tree = (Object)adaptor.create(string_literal835);
                    adaptor.addChild(root_0, string_literal835_tree);
                    }

                    }
                    break;
                case 14 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:819:106: '<='
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal836=(Token)match(input,121,FOLLOW_121_in_overloadable_binary_operator6790); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal836_tree = (Object)adaptor.create(string_literal836);
                    adaptor.addChild(root_0, string_literal836_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 232, overloadable_binary_operator_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "overloadable_binary_operator"

    public static class conversion_operator_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "conversion_operator_declaration"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:821:1: conversion_operator_declaration : conversion_operator_declarator operator_body ;
    public final CSharpParser.conversion_operator_declaration_return conversion_operator_declaration() throws RecognitionException {
        CSharpParser.conversion_operator_declaration_return retval = new CSharpParser.conversion_operator_declaration_return();
        retval.start = input.LT(1);
        int conversion_operator_declaration_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.conversion_operator_declarator_return conversion_operator_declarator837 = null;

        CSharpParser.operator_body_return operator_body838 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 233) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:821:32: ( conversion_operator_declarator operator_body )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:822:3: conversion_operator_declarator operator_body
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_conversion_operator_declarator_in_conversion_operator_declaration6801);
            conversion_operator_declarator837=conversion_operator_declarator();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, conversion_operator_declarator837.getTree());
            pushFollow(FOLLOW_operator_body_in_conversion_operator_declaration6805);
            operator_body838=operator_body();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, operator_body838.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 233, conversion_operator_declaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "conversion_operator_declaration"

    public static class conversion_operator_declarator_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "conversion_operator_declarator"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:823:1: conversion_operator_declarator : ( 'implicit' | 'explicit' ) 'operator' type '(' type identifier ')' ;
    public final CSharpParser.conversion_operator_declarator_return conversion_operator_declarator() throws RecognitionException {
        CSharpParser.conversion_operator_declarator_return retval = new CSharpParser.conversion_operator_declarator_return();
        retval.start = input.LT(1);
        int conversion_operator_declarator_StartIndex = input.index();
        Object root_0 = null;

        Token set839=null;
        Token string_literal840=null;
        Token char_literal842=null;
        Token char_literal845=null;
        CSharpParser.type_return type841 = null;

        CSharpParser.type_return type843 = null;

        CSharpParser.identifier_return identifier844 = null;


        Object set839_tree=null;
        Object string_literal840_tree=null;
        Object char_literal842_tree=null;
        Object char_literal845_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 234) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:823:31: ( ( 'implicit' | 'explicit' ) 'operator' type '(' type identifier ')' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:824:3: ( 'implicit' | 'explicit' ) 'operator' type '(' type identifier ')'
            {
            root_0 = (Object)adaptor.nil();

            set839=(Token)input.LT(1);
            if ( (input.LA(1)>=174 && input.LA(1)<=175) ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set839));
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }

            string_literal840=(Token)match(input,173,FOLLOW_173_in_conversion_operator_declarator6823); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal840_tree = (Object)adaptor.create(string_literal840);
            adaptor.addChild(root_0, string_literal840_tree);
            }
            pushFollow(FOLLOW_type_in_conversion_operator_declarator6827);
            type841=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type841.getTree());
            char_literal842=(Token)match(input,88,FOLLOW_88_in_conversion_operator_declarator6831); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal842_tree = (Object)adaptor.create(char_literal842);
            adaptor.addChild(root_0, char_literal842_tree);
            }
            pushFollow(FOLLOW_type_in_conversion_operator_declarator6835);
            type843=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type843.getTree());
            pushFollow(FOLLOW_identifier_in_conversion_operator_declarator6839);
            identifier844=identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier844.getTree());
            char_literal845=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_conversion_operator_declarator6843); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal845_tree = (Object)adaptor.create(char_literal845);
            adaptor.addChild(root_0, char_literal845_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 234, conversion_operator_declarator_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "conversion_operator_declarator"

    public static class operator_body_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "operator_body"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:825:1: operator_body : block ;
    public final CSharpParser.operator_body_return operator_body() throws RecognitionException {
        CSharpParser.operator_body_return retval = new CSharpParser.operator_body_return();
        retval.start = input.LT(1);
        int operator_body_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.block_return block846 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 235) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:825:14: ( block )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:826:3: block
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_block_in_operator_body6852);
            block846=block();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, block846.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 235, operator_body_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "operator_body"

    public static class constructor_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "constructor_declaration"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:829:1: constructor_declaration : constructor_declarator constructor_body ;
    public final CSharpParser.constructor_declaration_return constructor_declaration() throws RecognitionException {
        CSharpParser.constructor_declaration_return retval = new CSharpParser.constructor_declaration_return();
        retval.start = input.LT(1);
        int constructor_declaration_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.constructor_declarator_return constructor_declarator847 = null;

        CSharpParser.constructor_body_return constructor_body848 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 236) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:829:24: ( constructor_declarator constructor_body )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:830:3: constructor_declarator constructor_body
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_constructor_declarator_in_constructor_declaration6863);
            constructor_declarator847=constructor_declarator();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, constructor_declarator847.getTree());
            pushFollow(FOLLOW_constructor_body_in_constructor_declaration6867);
            constructor_body848=constructor_body();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, constructor_body848.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 236, constructor_declaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "constructor_declaration"

    public static class constructor_declarator_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "constructor_declarator"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:831:1: constructor_declarator : identifier '(' ( formal_parameter_list )? ')' ( constructor_initializer )? ;
    public final CSharpParser.constructor_declarator_return constructor_declarator() throws RecognitionException {
        CSharpParser.constructor_declarator_return retval = new CSharpParser.constructor_declarator_return();
        retval.start = input.LT(1);
        int constructor_declarator_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal850=null;
        Token char_literal852=null;
        CSharpParser.identifier_return identifier849 = null;

        CSharpParser.formal_parameter_list_return formal_parameter_list851 = null;

        CSharpParser.constructor_initializer_return constructor_initializer853 = null;


        Object char_literal850_tree=null;
        Object char_literal852_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 237) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:831:23: ( identifier '(' ( formal_parameter_list )? ')' ( constructor_initializer )? )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:832:3: identifier '(' ( formal_parameter_list )? ')' ( constructor_initializer )?
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_identifier_in_constructor_declarator6876);
            identifier849=identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier849.getTree());
            char_literal850=(Token)match(input,88,FOLLOW_88_in_constructor_declarator6880); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal850_tree = (Object)adaptor.create(char_literal850);
            adaptor.addChild(root_0, char_literal850_tree);
            }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:832:22: ( formal_parameter_list )?
            int alt234=2;
            int LA234_0 = input.LA(1);

            if ( (LA234_0==IDENTIFIER||LA234_0==65||(LA234_0>=82 && LA234_0<=83)||LA234_0==86||(LA234_0>=91 && LA234_0<=92)||(LA234_0>=132 && LA234_0<=133)||(LA234_0>=135 && LA234_0<=148)||(LA234_0>=150 && LA234_0<=152)||LA234_0==154||(LA234_0>=157 && LA234_0<=168)||(LA234_0>=170 && LA234_0<=171)||(LA234_0>=177 && LA234_0<=178)||(LA234_0>=195 && LA234_0<=202)) ) {
                alt234=1;
            }
            switch (alt234) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:832:22: formal_parameter_list
                    {
                    pushFollow(FOLLOW_formal_parameter_list_in_constructor_declarator6884);
                    formal_parameter_list851=formal_parameter_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, formal_parameter_list851.getTree());

                    }
                    break;

            }

            char_literal852=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_constructor_declarator6889); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal852_tree = (Object)adaptor.create(char_literal852);
            adaptor.addChild(root_0, char_literal852_tree);
            }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:832:53: ( constructor_initializer )?
            int alt235=2;
            int LA235_0 = input.LA(1);

            if ( (LA235_0==90) ) {
                alt235=1;
            }
            switch (alt235) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:832:53: constructor_initializer
                    {
                    pushFollow(FOLLOW_constructor_initializer_in_constructor_declarator6893);
                    constructor_initializer853=constructor_initializer();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, constructor_initializer853.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 237, constructor_declarator_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "constructor_declarator"

    public static class constructor_initializer_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "constructor_initializer"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:833:1: constructor_initializer : ':' ( 'base' | 'this' ) '(' ( argument_list )? ')' ;
    public final CSharpParser.constructor_initializer_return constructor_initializer() throws RecognitionException {
        CSharpParser.constructor_initializer_return retval = new CSharpParser.constructor_initializer_return();
        retval.start = input.LT(1);
        int constructor_initializer_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal854=null;
        Token set855=null;
        Token char_literal856=null;
        Token char_literal858=null;
        CSharpParser.argument_list_return argument_list857 = null;


        Object char_literal854_tree=null;
        Object set855_tree=null;
        Object char_literal856_tree=null;
        Object char_literal858_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 238) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:833:24: ( ':' ( 'base' | 'this' ) '(' ( argument_list )? ')' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:834:3: ':' ( 'base' | 'this' ) '(' ( argument_list )? ')'
            {
            root_0 = (Object)adaptor.nil();

            char_literal854=(Token)match(input,90,FOLLOW_90_in_constructor_initializer6903); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal854_tree = (Object)adaptor.create(char_literal854);
            adaptor.addChild(root_0, char_literal854_tree);
            }
            set855=(Token)input.LT(1);
            if ( input.LA(1)==83||input.LA(1)==85 ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set855));
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }

            char_literal856=(Token)match(input,88,FOLLOW_88_in_constructor_initializer6917); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal856_tree = (Object)adaptor.create(char_literal856);
            adaptor.addChild(root_0, char_literal856_tree);
            }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:834:35: ( argument_list )?
            int alt236=2;
            int LA236_0 = input.LA(1);

            if ( ((LA236_0>=IDENTIFIER && LA236_0<=NULL)||LA236_0==MINUS||LA236_0==65||LA236_0==68||LA236_0==83||LA236_0==85||LA236_0==88||(LA236_0>=91 && LA236_0<=98)||LA236_0==100||(LA236_0>=102 && LA236_0<=106)||LA236_0==117||(LA236_0>=132 && LA236_0<=133)||(LA236_0>=135 && LA236_0<=148)||(LA236_0>=150 && LA236_0<=152)||LA236_0==154||(LA236_0>=157 && LA236_0<=168)||LA236_0==170||(LA236_0>=177 && LA236_0<=178)||(LA236_0>=195 && LA236_0<=202)) ) {
                alt236=1;
            }
            switch (alt236) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:834:35: argument_list
                    {
                    pushFollow(FOLLOW_argument_list_in_constructor_initializer6921);
                    argument_list857=argument_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, argument_list857.getTree());

                    }
                    break;

            }

            char_literal858=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_constructor_initializer6926); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal858_tree = (Object)adaptor.create(char_literal858);
            adaptor.addChild(root_0, char_literal858_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 238, constructor_initializer_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "constructor_initializer"

    public static class constructor_body_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "constructor_body"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:835:1: constructor_body : block ;
    public final CSharpParser.constructor_body_return constructor_body() throws RecognitionException {
        CSharpParser.constructor_body_return retval = new CSharpParser.constructor_body_return();
        retval.start = input.LT(1);
        int constructor_body_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.block_return block859 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 239) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:835:17: ( block )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:836:3: block
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_block_in_constructor_body6935);
            block859=block();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, block859.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 239, constructor_body_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "constructor_body"

    public static class destructor_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "destructor_declaration"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:845:1: destructor_declaration : '~' identifier '(' ')' destructor_body ;
    public final CSharpParser.destructor_declaration_return destructor_declaration() throws RecognitionException {
        CSharpParser.destructor_declaration_return retval = new CSharpParser.destructor_declaration_return();
        retval.start = input.LT(1);
        int destructor_declaration_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal860=null;
        Token char_literal862=null;
        Token char_literal863=null;
        CSharpParser.identifier_return identifier861 = null;

        CSharpParser.destructor_body_return destructor_body864 = null;


        Object char_literal860_tree=null;
        Object char_literal862_tree=null;
        Object char_literal863_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 240) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:845:23: ( '~' identifier '(' ')' destructor_body )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:846:3: '~' identifier '(' ')' destructor_body
            {
            root_0 = (Object)adaptor.nil();

            char_literal860=(Token)match(input,106,FOLLOW_106_in_destructor_declaration6952); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal860_tree = (Object)adaptor.create(char_literal860);
            adaptor.addChild(root_0, char_literal860_tree);
            }
            pushFollow(FOLLOW_identifier_in_destructor_declaration6955);
            identifier861=identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier861.getTree());
            char_literal862=(Token)match(input,88,FOLLOW_88_in_destructor_declaration6959); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal862_tree = (Object)adaptor.create(char_literal862);
            adaptor.addChild(root_0, char_literal862_tree);
            }
            char_literal863=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_destructor_declaration6963); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal863_tree = (Object)adaptor.create(char_literal863);
            adaptor.addChild(root_0, char_literal863_tree);
            }
            pushFollow(FOLLOW_destructor_body_in_destructor_declaration6968);
            destructor_body864=destructor_body();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, destructor_body864.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 240, destructor_declaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "destructor_declaration"

    public static class destructor_body_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "destructor_body"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:847:1: destructor_body : block ;
    public final CSharpParser.destructor_body_return destructor_body() throws RecognitionException {
        CSharpParser.destructor_body_return retval = new CSharpParser.destructor_body_return();
        retval.start = input.LT(1);
        int destructor_body_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.block_return block865 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 241) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:847:16: ( block )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:848:3: block
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_block_in_destructor_body6977);
            block865=block();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, block865.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 241, destructor_body_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "destructor_body"

    public static class invocation_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "invocation_expression"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:851:1: invocation_expression : invocation_start ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments ;
    public final CSharpParser.invocation_expression_return invocation_expression() throws RecognitionException {
        CSharpParser.invocation_expression_return retval = new CSharpParser.invocation_expression_return();
        retval.start = input.LT(1);
        int invocation_expression_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.invocation_start_return invocation_start866 = null;

        CSharpParser.arguments_return arguments867 = null;

        CSharpParser.invocation_part_return invocation_part868 = null;

        CSharpParser.invocation_part_return invocation_part869 = null;

        CSharpParser.arguments_return arguments870 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 242) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:851:22: ( invocation_start ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:852:3: invocation_start ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_invocation_start_in_invocation_expression6988);
            invocation_start866=invocation_start();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, invocation_start866.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:852:22: ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )*
            loop237:
            do {
                int alt237=3;
                int LA237_0 = input.LA(1);

                if ( (LA237_0==88) ) {
                    int LA237_1 = input.LA(2);

                    if ( (synpred31_cs()) ) {
                        alt237=1;
                    }


                }
                else if ( ((LA237_0>=DOT && LA237_0<=PTR)||LA237_0==86) ) {
                    alt237=2;
                }


                switch (alt237) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:852:23: ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part )
            	    {
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:852:23: ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part )
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:852:24: ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part
            	    {
            	    pushFollow(FOLLOW_arguments_in_invocation_expression7010);
            	    arguments867=arguments();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, arguments867.getTree());
            	    pushFollow(FOLLOW_invocation_part_in_invocation_expression7014);
            	    invocation_part868=invocation_part();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, invocation_part868.getTree());

            	    }


            	    }
            	    break;
            	case 2 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:853:15: invocation_part
            	    {
            	    pushFollow(FOLLOW_invocation_part_in_invocation_expression7031);
            	    invocation_part869=invocation_part();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, invocation_part869.getTree());

            	    }
            	    break;

            	default :
            	    break loop237;
                }
            } while (true);

            pushFollow(FOLLOW_arguments_in_invocation_expression7037);
            arguments870=arguments();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, arguments870.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 242, invocation_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "invocation_expression"

    public static class invocation_start_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "invocation_start"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:854:1: invocation_start : ( predefined_type | ( identifier '<' )=> identifier generic_argument_list | 'this' | 'base' | identifier ( '::' identifier )? | typeof_expression );
    public final CSharpParser.invocation_start_return invocation_start() throws RecognitionException {
        CSharpParser.invocation_start_return retval = new CSharpParser.invocation_start_return();
        retval.start = input.LT(1);
        int invocation_start_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal874=null;
        Token string_literal875=null;
        Token string_literal877=null;
        CSharpParser.predefined_type_return predefined_type871 = null;

        CSharpParser.identifier_return identifier872 = null;

        CSharpParser.generic_argument_list_return generic_argument_list873 = null;

        CSharpParser.identifier_return identifier876 = null;

        CSharpParser.identifier_return identifier878 = null;

        CSharpParser.typeof_expression_return typeof_expression879 = null;


        Object string_literal874_tree=null;
        Object string_literal875_tree=null;
        Object string_literal877_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 243) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:854:17: ( predefined_type | ( identifier '<' )=> identifier generic_argument_list | 'this' | 'base' | identifier ( '::' identifier )? | typeof_expression )
            int alt239=6;
            switch ( input.LA(1) ) {
            case 160:
            case 161:
            case 162:
            case 163:
            case 164:
            case 165:
            case 166:
            case 167:
            case 168:
            case 196:
            case 197:
            case 198:
            case 199:
            case 200:
            case 201:
                {
                alt239=1;
                }
                break;
            case IDENTIFIER:
            case 65:
            case 132:
            case 133:
            case 135:
            case 136:
            case 137:
            case 138:
            case 139:
            case 140:
            case 141:
            case 142:
            case 143:
            case 144:
            case 145:
            case 146:
            case 147:
            case 148:
            case 150:
            case 151:
            case 152:
            case 154:
            case 157:
            case 158:
            case 159:
            case 170:
            case 177:
            case 178:
            case 195:
            case 202:
                {
                int LA239_2 = input.LA(2);

                if ( ((LA239_2>=DOT && LA239_2<=PTR)||LA239_2==84||LA239_2==86||LA239_2==88) ) {
                    alt239=5;
                }
                else if ( (LA239_2==99) && (synpred32_cs())) {
                    alt239=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 239, 2, input);

                    throw nvae;
                }
                }
                break;
            case 83:
                {
                alt239=3;
                }
                break;
            case 85:
                {
                alt239=4;
                }
                break;
            case 98:
                {
                alt239=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 239, 0, input);

                throw nvae;
            }

            switch (alt239) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:855:3: predefined_type
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_predefined_type_in_invocation_start7046);
                    predefined_type871=predefined_type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, predefined_type871.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:856:5: ( identifier '<' )=> identifier generic_argument_list
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_identifier_in_invocation_start7064);
                    identifier872=identifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier872.getTree());
                    pushFollow(FOLLOW_generic_argument_list_in_invocation_start7068);
                    generic_argument_list873=generic_argument_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, generic_argument_list873.getTree());

                    }
                    break;
                case 3 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:857:5: 'this'
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal874=(Token)match(input,83,FOLLOW_83_in_invocation_start7074); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal874_tree = (Object)adaptor.create(string_literal874);
                    adaptor.addChild(root_0, string_literal874_tree);
                    }

                    }
                    break;
                case 4 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:858:5: 'base'
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal875=(Token)match(input,85,FOLLOW_85_in_invocation_start7081); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal875_tree = (Object)adaptor.create(string_literal875);
                    adaptor.addChild(root_0, string_literal875_tree);
                    }

                    }
                    break;
                case 5 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:859:5: identifier ( '::' identifier )?
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_identifier_in_invocation_start7087);
                    identifier876=identifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier876.getTree());
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:859:18: ( '::' identifier )?
                    int alt238=2;
                    int LA238_0 = input.LA(1);

                    if ( (LA238_0==84) ) {
                        alt238=1;
                    }
                    switch (alt238) {
                        case 1 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:859:19: '::' identifier
                            {
                            string_literal877=(Token)match(input,84,FOLLOW_84_in_invocation_start7092); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            string_literal877_tree = (Object)adaptor.create(string_literal877);
                            adaptor.addChild(root_0, string_literal877_tree);
                            }
                            pushFollow(FOLLOW_identifier_in_invocation_start7096);
                            identifier878=identifier();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier878.getTree());

                            }
                            break;

                    }


                    }
                    break;
                case 6 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:860:5: typeof_expression
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_typeof_expression_in_invocation_start7104);
                    typeof_expression879=typeof_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, typeof_expression879.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 243, invocation_start_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "invocation_start"

    public static class invocation_part_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "invocation_part"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:862:1: invocation_part : ( access_identifier | brackets );
    public final CSharpParser.invocation_part_return invocation_part() throws RecognitionException {
        CSharpParser.invocation_part_return retval = new CSharpParser.invocation_part_return();
        retval.start = input.LT(1);
        int invocation_part_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.access_identifier_return access_identifier880 = null;

        CSharpParser.brackets_return brackets881 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 244) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:862:16: ( access_identifier | brackets )
            int alt240=2;
            int LA240_0 = input.LA(1);

            if ( ((LA240_0>=DOT && LA240_0<=PTR)) ) {
                alt240=1;
            }
            else if ( (LA240_0==86) ) {
                alt240=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 240, 0, input);

                throw nvae;
            }
            switch (alt240) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:863:4: access_identifier
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_access_identifier_in_invocation_part7129);
                    access_identifier880=access_identifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, access_identifier880.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:864:5: brackets
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_brackets_in_invocation_part7135);
                    brackets881=brackets();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, brackets881.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 244, invocation_part_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "invocation_part"

    public static class statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "statement"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:868:1: statement : ( ( declaration_statement )=> declaration_statement | ( identifier ':' )=> labeled_statement | embedded_statement );
    public final CSharpParser.statement_return statement() throws RecognitionException {
        CSharpParser.statement_return retval = new CSharpParser.statement_return();
        retval.start = input.LT(1);
        int statement_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.declaration_statement_return declaration_statement882 = null;

        CSharpParser.labeled_statement_return labeled_statement883 = null;

        CSharpParser.embedded_statement_return embedded_statement884 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 245) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:868:10: ( ( declaration_statement )=> declaration_statement | ( identifier ':' )=> labeled_statement | embedded_statement )
            int alt241=3;
            alt241 = dfa241.predict(input);
            switch (alt241) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:869:3: ( declaration_statement )=> declaration_statement
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_declaration_statement_in_statement7153);
                    declaration_statement882=declaration_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, declaration_statement882.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:870:5: ( identifier ':' )=> labeled_statement
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_labeled_statement_in_statement7169);
                    labeled_statement883=labeled_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, labeled_statement883.getTree());

                    }
                    break;
                case 3 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:871:5: embedded_statement
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_embedded_statement_in_statement7175);
                    embedded_statement884=embedded_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, embedded_statement884.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 245, statement_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "statement"

    public static class embedded_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "embedded_statement"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:873:1: embedded_statement : ( block | selection_statement | iteration_statement | jump_statement | try_statement | checked_statement | unchecked_statement | lock_statement | using_statement | yield_statement | unsafe_statement | fixed_statement | expression_statement );
    public final CSharpParser.embedded_statement_return embedded_statement() throws RecognitionException {
        CSharpParser.embedded_statement_return retval = new CSharpParser.embedded_statement_return();
        retval.start = input.LT(1);
        int embedded_statement_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.block_return block885 = null;

        CSharpParser.selection_statement_return selection_statement886 = null;

        CSharpParser.iteration_statement_return iteration_statement887 = null;

        CSharpParser.jump_statement_return jump_statement888 = null;

        CSharpParser.try_statement_return try_statement889 = null;

        CSharpParser.checked_statement_return checked_statement890 = null;

        CSharpParser.unchecked_statement_return unchecked_statement891 = null;

        CSharpParser.lock_statement_return lock_statement892 = null;

        CSharpParser.using_statement_return using_statement893 = null;

        CSharpParser.yield_statement_return yield_statement894 = null;

        CSharpParser.unsafe_statement_return unsafe_statement895 = null;

        CSharpParser.fixed_statement_return fixed_statement896 = null;

        CSharpParser.expression_statement_return expression_statement897 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 246) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:873:19: ( block | selection_statement | iteration_statement | jump_statement | try_statement | checked_statement | unchecked_statement | lock_statement | using_statement | yield_statement | unsafe_statement | fixed_statement | expression_statement )
            int alt242=13;
            alt242 = dfa242.predict(input);
            switch (alt242) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:874:3: block
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_block_in_embedded_statement7187);
                    block885=block();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, block885.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:875:5: selection_statement
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_selection_statement_in_embedded_statement7193);
                    selection_statement886=selection_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, selection_statement886.getTree());

                    }
                    break;
                case 3 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:876:5: iteration_statement
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_iteration_statement_in_embedded_statement7200);
                    iteration_statement887=iteration_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, iteration_statement887.getTree());

                    }
                    break;
                case 4 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:877:5: jump_statement
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_jump_statement_in_embedded_statement7207);
                    jump_statement888=jump_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, jump_statement888.getTree());

                    }
                    break;
                case 5 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:878:5: try_statement
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_try_statement_in_embedded_statement7217);
                    try_statement889=try_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, try_statement889.getTree());

                    }
                    break;
                case 6 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:879:5: checked_statement
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_checked_statement_in_embedded_statement7223);
                    checked_statement890=checked_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, checked_statement890.getTree());

                    }
                    break;
                case 7 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:880:5: unchecked_statement
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_unchecked_statement_in_embedded_statement7229);
                    unchecked_statement891=unchecked_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, unchecked_statement891.getTree());

                    }
                    break;
                case 8 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:881:5: lock_statement
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_lock_statement_in_embedded_statement7235);
                    lock_statement892=lock_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, lock_statement892.getTree());

                    }
                    break;
                case 9 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:882:5: using_statement
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_using_statement_in_embedded_statement7241);
                    using_statement893=using_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, using_statement893.getTree());

                    }
                    break;
                case 10 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:883:5: yield_statement
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_yield_statement_in_embedded_statement7248);
                    yield_statement894=yield_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, yield_statement894.getTree());

                    }
                    break;
                case 11 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:884:5: unsafe_statement
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_unsafe_statement_in_embedded_statement7255);
                    unsafe_statement895=unsafe_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, unsafe_statement895.getTree());

                    }
                    break;
                case 12 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:885:5: fixed_statement
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_fixed_statement_in_embedded_statement7261);
                    fixed_statement896=fixed_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, fixed_statement896.getTree());

                    }
                    break;
                case 13 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:886:5: expression_statement
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_expression_statement_in_embedded_statement7267);
                    expression_statement897=expression_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression_statement897.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 246, embedded_statement_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "embedded_statement"

    public static class fixed_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "fixed_statement"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:888:1: fixed_statement : 'fixed' '(' pointer_type fixed_pointer_declarators ')' embedded_statement ;
    public final CSharpParser.fixed_statement_return fixed_statement() throws RecognitionException {
        CSharpParser.fixed_statement_return retval = new CSharpParser.fixed_statement_return();
        retval.start = input.LT(1);
        int fixed_statement_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal898=null;
        Token char_literal899=null;
        Token char_literal902=null;
        CSharpParser.pointer_type_return pointer_type900 = null;

        CSharpParser.fixed_pointer_declarators_return fixed_pointer_declarators901 = null;

        CSharpParser.embedded_statement_return embedded_statement903 = null;


        Object string_literal898_tree=null;
        Object char_literal899_tree=null;
        Object char_literal902_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 247) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:888:16: ( 'fixed' '(' pointer_type fixed_pointer_declarators ')' embedded_statement )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:889:3: 'fixed' '(' pointer_type fixed_pointer_declarators ')' embedded_statement
            {
            root_0 = (Object)adaptor.nil();

            string_literal898=(Token)match(input,176,FOLLOW_176_in_fixed_statement7280); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal898_tree = (Object)adaptor.create(string_literal898);
            adaptor.addChild(root_0, string_literal898_tree);
            }
            char_literal899=(Token)match(input,88,FOLLOW_88_in_fixed_statement7284); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal899_tree = (Object)adaptor.create(char_literal899);
            adaptor.addChild(root_0, char_literal899_tree);
            }
            pushFollow(FOLLOW_pointer_type_in_fixed_statement7288);
            pointer_type900=pointer_type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, pointer_type900.getTree());
            pushFollow(FOLLOW_fixed_pointer_declarators_in_fixed_statement7290);
            fixed_pointer_declarators901=fixed_pointer_declarators();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, fixed_pointer_declarators901.getTree());
            char_literal902=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_fixed_statement7294); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal902_tree = (Object)adaptor.create(char_literal902);
            adaptor.addChild(root_0, char_literal902_tree);
            }
            pushFollow(FOLLOW_embedded_statement_in_fixed_statement7298);
            embedded_statement903=embedded_statement();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, embedded_statement903.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 247, fixed_statement_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "fixed_statement"

    public static class fixed_pointer_declarators_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "fixed_pointer_declarators"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:890:1: fixed_pointer_declarators : fixed_pointer_declarator ( ',' fixed_pointer_declarator )* ;
    public final CSharpParser.fixed_pointer_declarators_return fixed_pointer_declarators() throws RecognitionException {
        CSharpParser.fixed_pointer_declarators_return retval = new CSharpParser.fixed_pointer_declarators_return();
        retval.start = input.LT(1);
        int fixed_pointer_declarators_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal905=null;
        CSharpParser.fixed_pointer_declarator_return fixed_pointer_declarator904 = null;

        CSharpParser.fixed_pointer_declarator_return fixed_pointer_declarator906 = null;


        Object char_literal905_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 248) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:890:26: ( fixed_pointer_declarator ( ',' fixed_pointer_declarator )* )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:891:3: fixed_pointer_declarator ( ',' fixed_pointer_declarator )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_fixed_pointer_declarator_in_fixed_pointer_declarators7307);
            fixed_pointer_declarator904=fixed_pointer_declarator();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, fixed_pointer_declarator904.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:891:30: ( ',' fixed_pointer_declarator )*
            loop243:
            do {
                int alt243=2;
                int LA243_0 = input.LA(1);

                if ( (LA243_0==89) ) {
                    alt243=1;
                }


                switch (alt243) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:891:31: ',' fixed_pointer_declarator
            	    {
            	    char_literal905=(Token)match(input,89,FOLLOW_89_in_fixed_pointer_declarators7312); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal905_tree = (Object)adaptor.create(char_literal905);
            	    adaptor.addChild(root_0, char_literal905_tree);
            	    }
            	    pushFollow(FOLLOW_fixed_pointer_declarator_in_fixed_pointer_declarators7316);
            	    fixed_pointer_declarator906=fixed_pointer_declarator();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, fixed_pointer_declarator906.getTree());

            	    }
            	    break;

            	default :
            	    break loop243;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 248, fixed_pointer_declarators_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "fixed_pointer_declarators"

    public static class fixed_pointer_declarator_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "fixed_pointer_declarator"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:892:1: fixed_pointer_declarator : identifier '=' fixed_pointer_initializer ;
    public final CSharpParser.fixed_pointer_declarator_return fixed_pointer_declarator() throws RecognitionException {
        CSharpParser.fixed_pointer_declarator_return retval = new CSharpParser.fixed_pointer_declarator_return();
        retval.start = input.LT(1);
        int fixed_pointer_declarator_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal908=null;
        CSharpParser.identifier_return identifier907 = null;

        CSharpParser.fixed_pointer_initializer_return fixed_pointer_initializer909 = null;


        Object char_literal908_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 249) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:892:25: ( identifier '=' fixed_pointer_initializer )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:893:3: identifier '=' fixed_pointer_initializer
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_identifier_in_fixed_pointer_declarator7327);
            identifier907=identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier907.getTree());
            char_literal908=(Token)match(input,66,FOLLOW_66_in_fixed_pointer_declarator7331); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal908_tree = (Object)adaptor.create(char_literal908);
            adaptor.addChild(root_0, char_literal908_tree);
            }
            pushFollow(FOLLOW_fixed_pointer_initializer_in_fixed_pointer_declarator7335);
            fixed_pointer_initializer909=fixed_pointer_initializer();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, fixed_pointer_initializer909.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 249, fixed_pointer_declarator_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "fixed_pointer_declarator"

    public static class fixed_pointer_initializer_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "fixed_pointer_initializer"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:894:1: fixed_pointer_initializer : expression ;
    public final CSharpParser.fixed_pointer_initializer_return fixed_pointer_initializer() throws RecognitionException {
        CSharpParser.fixed_pointer_initializer_return retval = new CSharpParser.fixed_pointer_initializer_return();
        retval.start = input.LT(1);
        int fixed_pointer_initializer_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.expression_return expression910 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 250) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:894:26: ( expression )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:896:3: expression
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_expression_in_fixed_pointer_initializer7347);
            expression910=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression910.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 250, fixed_pointer_initializer_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "fixed_pointer_initializer"

    public static class unsafe_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "unsafe_statement"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:897:1: unsafe_statement : 'unsafe' block ;
    public final CSharpParser.unsafe_statement_return unsafe_statement() throws RecognitionException {
        CSharpParser.unsafe_statement_return retval = new CSharpParser.unsafe_statement_return();
        retval.start = input.LT(1);
        int unsafe_statement_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal911=null;
        CSharpParser.block_return block912 = null;


        Object string_literal911_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 251) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:897:17: ( 'unsafe' block )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:898:3: 'unsafe' block
            {
            root_0 = (Object)adaptor.nil();

            string_literal911=(Token)match(input,73,FOLLOW_73_in_unsafe_statement7355); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal911_tree = (Object)adaptor.create(string_literal911);
            adaptor.addChild(root_0, string_literal911_tree);
            }
            pushFollow(FOLLOW_block_in_unsafe_statement7359);
            block912=block();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, block912.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 251, unsafe_statement_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "unsafe_statement"

    public static class labeled_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "labeled_statement"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:899:1: labeled_statement : identifier ':' statement ;
    public final CSharpParser.labeled_statement_return labeled_statement() throws RecognitionException {
        CSharpParser.labeled_statement_return retval = new CSharpParser.labeled_statement_return();
        retval.start = input.LT(1);
        int labeled_statement_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal914=null;
        CSharpParser.identifier_return identifier913 = null;

        CSharpParser.statement_return statement915 = null;


        Object char_literal914_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 252) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:899:18: ( identifier ':' statement )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:900:3: identifier ':' statement
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_identifier_in_labeled_statement7367);
            identifier913=identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier913.getTree());
            char_literal914=(Token)match(input,90,FOLLOW_90_in_labeled_statement7371); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal914_tree = (Object)adaptor.create(char_literal914);
            adaptor.addChild(root_0, char_literal914_tree);
            }
            pushFollow(FOLLOW_statement_in_labeled_statement7375);
            statement915=statement();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, statement915.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 252, labeled_statement_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "labeled_statement"

    public static class declaration_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "declaration_statement"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:901:1: declaration_statement : ( local_variable_declaration | local_constant_declaration ) ';' ;
    public final CSharpParser.declaration_statement_return declaration_statement() throws RecognitionException {
        CSharpParser.declaration_statement_return retval = new CSharpParser.declaration_statement_return();
        retval.start = input.LT(1);
        int declaration_statement_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal918=null;
        CSharpParser.local_variable_declaration_return local_variable_declaration916 = null;

        CSharpParser.local_constant_declaration_return local_constant_declaration917 = null;


        Object char_literal918_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 253) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:901:22: ( ( local_variable_declaration | local_constant_declaration ) ';' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:902:3: ( local_variable_declaration | local_constant_declaration ) ';'
            {
            root_0 = (Object)adaptor.nil();

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:902:3: ( local_variable_declaration | local_constant_declaration )
            int alt244=2;
            int LA244_0 = input.LA(1);

            if ( (LA244_0==IDENTIFIER||LA244_0==65||LA244_0==82||(LA244_0>=132 && LA244_0<=133)||(LA244_0>=135 && LA244_0<=148)||(LA244_0>=150 && LA244_0<=152)||LA244_0==154||(LA244_0>=157 && LA244_0<=168)||LA244_0==170||(LA244_0>=177 && LA244_0<=178)||(LA244_0>=195 && LA244_0<=202)) ) {
                alt244=1;
            }
            else if ( (LA244_0==81) ) {
                alt244=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 244, 0, input);

                throw nvae;
            }
            switch (alt244) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:902:4: local_variable_declaration
                    {
                    pushFollow(FOLLOW_local_variable_declaration_in_declaration_statement7385);
                    local_variable_declaration916=local_variable_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, local_variable_declaration916.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:903:5: local_constant_declaration
                    {
                    pushFollow(FOLLOW_local_constant_declaration_in_declaration_statement7392);
                    local_constant_declaration917=local_constant_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, local_constant_declaration917.getTree());

                    }
                    break;

            }

            char_literal918=(Token)match(input,SEMI,FOLLOW_SEMI_in_declaration_statement7395); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal918_tree = (Object)adaptor.create(char_literal918);
            adaptor.addChild(root_0, char_literal918_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 253, declaration_statement_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "declaration_statement"

    public static class local_variable_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "local_variable_declaration"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:904:1: local_variable_declaration : local_variable_type local_variable_declarators ;
    public final CSharpParser.local_variable_declaration_return local_variable_declaration() throws RecognitionException {
        CSharpParser.local_variable_declaration_return retval = new CSharpParser.local_variable_declaration_return();
        retval.start = input.LT(1);
        int local_variable_declaration_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.local_variable_type_return local_variable_type919 = null;

        CSharpParser.local_variable_declarators_return local_variable_declarators920 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 254) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:904:27: ( local_variable_type local_variable_declarators )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:905:3: local_variable_type local_variable_declarators
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_local_variable_type_in_local_variable_declaration7404);
            local_variable_type919=local_variable_type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, local_variable_type919.getTree());
            pushFollow(FOLLOW_local_variable_declarators_in_local_variable_declaration7408);
            local_variable_declarators920=local_variable_declarators();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, local_variable_declarators920.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 254, local_variable_declaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "local_variable_declaration"

    public static class local_variable_type_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "local_variable_type"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:906:1: local_variable_type : ( ( 'var' )=> 'var' | ( 'dynamic' )=> 'dynamic' | type );
    public final CSharpParser.local_variable_type_return local_variable_type() throws RecognitionException {
        CSharpParser.local_variable_type_return retval = new CSharpParser.local_variable_type_return();
        retval.start = input.LT(1);
        int local_variable_type_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal921=null;
        Token string_literal922=null;
        CSharpParser.type_return type923 = null;


        Object string_literal921_tree=null;
        Object string_literal922_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 255) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:906:20: ( ( 'var' )=> 'var' | ( 'dynamic' )=> 'dynamic' | type )
            int alt245=3;
            switch ( input.LA(1) ) {
            case 177:
                {
                int LA245_1 = input.LA(2);

                if ( (synpred35_cs()) ) {
                    alt245=1;
                }
                else if ( (true) ) {
                    alt245=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 245, 1, input);

                    throw nvae;
                }
                }
                break;
            case 178:
                {
                int LA245_2 = input.LA(2);

                if ( (synpred36_cs()) ) {
                    alt245=2;
                }
                else if ( (true) ) {
                    alt245=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 245, 2, input);

                    throw nvae;
                }
                }
                break;
            case IDENTIFIER:
            case 65:
            case 82:
            case 132:
            case 133:
            case 135:
            case 136:
            case 137:
            case 138:
            case 139:
            case 140:
            case 141:
            case 142:
            case 143:
            case 144:
            case 145:
            case 146:
            case 147:
            case 148:
            case 150:
            case 151:
            case 152:
            case 154:
            case 157:
            case 158:
            case 159:
            case 160:
            case 161:
            case 162:
            case 163:
            case 164:
            case 165:
            case 166:
            case 167:
            case 168:
            case 170:
            case 195:
            case 196:
            case 197:
            case 198:
            case 199:
            case 200:
            case 201:
            case 202:
                {
                alt245=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 245, 0, input);

                throw nvae;
            }

            switch (alt245) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:907:3: ( 'var' )=> 'var'
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal921=(Token)match(input,177,FOLLOW_177_in_local_variable_type7423); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal921_tree = (Object)adaptor.create(string_literal921);
                    adaptor.addChild(root_0, string_literal921_tree);
                    }

                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:908:5: ( 'dynamic' )=> 'dynamic'
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal922=(Token)match(input,178,FOLLOW_178_in_local_variable_type7435); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal922_tree = (Object)adaptor.create(string_literal922);
                    adaptor.addChild(root_0, string_literal922_tree);
                    }

                    }
                    break;
                case 3 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:909:5: type
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_type_in_local_variable_type7441);
                    type923=type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type923.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 255, local_variable_type_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "local_variable_type"

    public static class local_variable_declarators_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "local_variable_declarators"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:910:1: local_variable_declarators : local_variable_declarator ( ',' local_variable_declarator )* ;
    public final CSharpParser.local_variable_declarators_return local_variable_declarators() throws RecognitionException {
        CSharpParser.local_variable_declarators_return retval = new CSharpParser.local_variable_declarators_return();
        retval.start = input.LT(1);
        int local_variable_declarators_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal925=null;
        CSharpParser.local_variable_declarator_return local_variable_declarator924 = null;

        CSharpParser.local_variable_declarator_return local_variable_declarator926 = null;


        Object char_literal925_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 256) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:910:27: ( local_variable_declarator ( ',' local_variable_declarator )* )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:911:3: local_variable_declarator ( ',' local_variable_declarator )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_local_variable_declarator_in_local_variable_declarators7450);
            local_variable_declarator924=local_variable_declarator();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, local_variable_declarator924.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:911:29: ( ',' local_variable_declarator )*
            loop246:
            do {
                int alt246=2;
                int LA246_0 = input.LA(1);

                if ( (LA246_0==89) ) {
                    alt246=1;
                }


                switch (alt246) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:911:30: ',' local_variable_declarator
            	    {
            	    char_literal925=(Token)match(input,89,FOLLOW_89_in_local_variable_declarators7453); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal925_tree = (Object)adaptor.create(char_literal925);
            	    adaptor.addChild(root_0, char_literal925_tree);
            	    }
            	    pushFollow(FOLLOW_local_variable_declarator_in_local_variable_declarators7455);
            	    local_variable_declarator926=local_variable_declarator();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, local_variable_declarator926.getTree());

            	    }
            	    break;

            	default :
            	    break loop246;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 256, local_variable_declarators_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "local_variable_declarators"

    public static class local_variable_declarator_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "local_variable_declarator"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:912:1: local_variable_declarator : identifier ( '=' local_variable_initializer )? ;
    public final CSharpParser.local_variable_declarator_return local_variable_declarator() throws RecognitionException {
        CSharpParser.local_variable_declarator_return retval = new CSharpParser.local_variable_declarator_return();
        retval.start = input.LT(1);
        int local_variable_declarator_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal928=null;
        CSharpParser.identifier_return identifier927 = null;

        CSharpParser.local_variable_initializer_return local_variable_initializer929 = null;


        Object char_literal928_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 257) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:912:26: ( identifier ( '=' local_variable_initializer )? )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:913:3: identifier ( '=' local_variable_initializer )?
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_identifier_in_local_variable_declarator7466);
            identifier927=identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier927.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:913:14: ( '=' local_variable_initializer )?
            int alt247=2;
            int LA247_0 = input.LA(1);

            if ( (LA247_0==66) ) {
                alt247=1;
            }
            switch (alt247) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:913:15: '=' local_variable_initializer
                    {
                    char_literal928=(Token)match(input,66,FOLLOW_66_in_local_variable_declarator7469); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal928_tree = (Object)adaptor.create(char_literal928);
                    adaptor.addChild(root_0, char_literal928_tree);
                    }
                    pushFollow(FOLLOW_local_variable_initializer_in_local_variable_declarator7473);
                    local_variable_initializer929=local_variable_initializer();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, local_variable_initializer929.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 257, local_variable_declarator_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "local_variable_declarator"

    public static class local_variable_initializer_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "local_variable_initializer"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:914:1: local_variable_initializer : ( expression | array_initializer | stackalloc_initializer );
    public final CSharpParser.local_variable_initializer_return local_variable_initializer() throws RecognitionException {
        CSharpParser.local_variable_initializer_return retval = new CSharpParser.local_variable_initializer_return();
        retval.start = input.LT(1);
        int local_variable_initializer_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.expression_return expression930 = null;

        CSharpParser.array_initializer_return array_initializer931 = null;

        CSharpParser.stackalloc_initializer_return stackalloc_initializer932 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 258) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:914:27: ( expression | array_initializer | stackalloc_initializer )
            int alt248=3;
            switch ( input.LA(1) ) {
            case IDENTIFIER:
            case Real_literal:
            case NUMBER:
            case Hex_number:
            case Character_literal:
            case STRINGLITERAL:
            case Verbatim_string_literal:
            case TRUE:
            case FALSE:
            case NULL:
            case MINUS:
            case 65:
            case 68:
            case 83:
            case 85:
            case 88:
            case 93:
            case 94:
            case 95:
            case 96:
            case 97:
            case 98:
            case 100:
            case 102:
            case 103:
            case 104:
            case 105:
            case 106:
            case 117:
            case 132:
            case 133:
            case 135:
            case 136:
            case 137:
            case 138:
            case 139:
            case 140:
            case 141:
            case 142:
            case 143:
            case 144:
            case 145:
            case 146:
            case 147:
            case 148:
            case 150:
            case 151:
            case 152:
            case 154:
            case 157:
            case 158:
            case 159:
            case 160:
            case 161:
            case 162:
            case 163:
            case 164:
            case 165:
            case 166:
            case 167:
            case 168:
            case 170:
            case 177:
            case 178:
            case 195:
            case 196:
            case 197:
            case 198:
            case 199:
            case 200:
            case 201:
            case 202:
                {
                alt248=1;
                }
                break;
            case 62:
                {
                alt248=2;
                }
                break;
            case 179:
                {
                alt248=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 248, 0, input);

                throw nvae;
            }

            switch (alt248) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:915:3: expression
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_expression_in_local_variable_initializer7485);
                    expression930=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression930.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:916:5: array_initializer
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_array_initializer_in_local_variable_initializer7491);
                    array_initializer931=array_initializer();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, array_initializer931.getTree());

                    }
                    break;
                case 3 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:917:5: stackalloc_initializer
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_stackalloc_initializer_in_local_variable_initializer7498);
                    stackalloc_initializer932=stackalloc_initializer();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, stackalloc_initializer932.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 258, local_variable_initializer_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "local_variable_initializer"

    public static class stackalloc_initializer_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "stackalloc_initializer"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:918:1: stackalloc_initializer : 'stackalloc' unmanaged_type '[' expression ']' ;
    public final CSharpParser.stackalloc_initializer_return stackalloc_initializer() throws RecognitionException {
        CSharpParser.stackalloc_initializer_return retval = new CSharpParser.stackalloc_initializer_return();
        retval.start = input.LT(1);
        int stackalloc_initializer_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal933=null;
        Token char_literal935=null;
        Token char_literal937=null;
        CSharpParser.unmanaged_type_return unmanaged_type934 = null;

        CSharpParser.expression_return expression936 = null;


        Object string_literal933_tree=null;
        Object char_literal935_tree=null;
        Object char_literal937_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 259) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:918:23: ( 'stackalloc' unmanaged_type '[' expression ']' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:919:3: 'stackalloc' unmanaged_type '[' expression ']'
            {
            root_0 = (Object)adaptor.nil();

            string_literal933=(Token)match(input,179,FOLLOW_179_in_stackalloc_initializer7506); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal933_tree = (Object)adaptor.create(string_literal933);
            adaptor.addChild(root_0, string_literal933_tree);
            }
            pushFollow(FOLLOW_unmanaged_type_in_stackalloc_initializer7510);
            unmanaged_type934=unmanaged_type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, unmanaged_type934.getTree());
            char_literal935=(Token)match(input,86,FOLLOW_86_in_stackalloc_initializer7514); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal935_tree = (Object)adaptor.create(char_literal935);
            adaptor.addChild(root_0, char_literal935_tree);
            }
            pushFollow(FOLLOW_expression_in_stackalloc_initializer7518);
            expression936=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression936.getTree());
            char_literal937=(Token)match(input,87,FOLLOW_87_in_stackalloc_initializer7522); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal937_tree = (Object)adaptor.create(char_literal937);
            adaptor.addChild(root_0, char_literal937_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 259, stackalloc_initializer_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "stackalloc_initializer"

    public static class local_constant_declaration_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "local_constant_declaration"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:920:1: local_constant_declaration : 'const' type constant_declarators ;
    public final CSharpParser.local_constant_declaration_return local_constant_declaration() throws RecognitionException {
        CSharpParser.local_constant_declaration_return retval = new CSharpParser.local_constant_declaration_return();
        retval.start = input.LT(1);
        int local_constant_declaration_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal938=null;
        CSharpParser.type_return type939 = null;

        CSharpParser.constant_declarators_return constant_declarators940 = null;


        Object string_literal938_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 260) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:920:27: ( 'const' type constant_declarators )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:921:3: 'const' type constant_declarators
            {
            root_0 = (Object)adaptor.nil();

            string_literal938=(Token)match(input,81,FOLLOW_81_in_local_constant_declaration7531); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal938_tree = (Object)adaptor.create(string_literal938);
            adaptor.addChild(root_0, string_literal938_tree);
            }
            pushFollow(FOLLOW_type_in_local_constant_declaration7535);
            type939=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, type939.getTree());
            pushFollow(FOLLOW_constant_declarators_in_local_constant_declaration7539);
            constant_declarators940=constant_declarators();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, constant_declarators940.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 260, local_constant_declaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "local_constant_declaration"

    public static class expression_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "expression_statement"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:922:1: expression_statement : expression ';' ;
    public final CSharpParser.expression_statement_return expression_statement() throws RecognitionException {
        CSharpParser.expression_statement_return retval = new CSharpParser.expression_statement_return();
        retval.start = input.LT(1);
        int expression_statement_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal942=null;
        CSharpParser.expression_return expression941 = null;


        Object char_literal942_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 261) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:922:21: ( expression ';' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:923:3: expression ';'
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_expression_in_expression_statement7548);
            expression941=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression941.getTree());
            char_literal942=(Token)match(input,SEMI,FOLLOW_SEMI_in_expression_statement7552); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal942_tree = (Object)adaptor.create(char_literal942);
            adaptor.addChild(root_0, char_literal942_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 261, expression_statement_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "expression_statement"

    public static class statement_expression_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "statement_expression"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:926:1: statement_expression : expression ;
    public final CSharpParser.statement_expression_return statement_expression() throws RecognitionException {
        CSharpParser.statement_expression_return retval = new CSharpParser.statement_expression_return();
        retval.start = input.LT(1);
        int statement_expression_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.expression_return expression943 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 262) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:926:21: ( expression )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:927:3: expression
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_expression_in_statement_expression7563);
            expression943=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression943.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 262, statement_expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "statement_expression"

    public static class selection_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "selection_statement"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:929:1: selection_statement : ( if_statement | switch_statement );
    public final CSharpParser.selection_statement_return selection_statement() throws RecognitionException {
        CSharpParser.selection_statement_return retval = new CSharpParser.selection_statement_return();
        retval.start = input.LT(1);
        int selection_statement_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.if_statement_return if_statement944 = null;

        CSharpParser.switch_statement_return switch_statement945 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 263) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:929:20: ( if_statement | switch_statement )
            int alt249=2;
            int LA249_0 = input.LA(1);

            if ( (LA249_0==IF) ) {
                alt249=1;
            }
            else if ( (LA249_0==181) ) {
                alt249=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 249, 0, input);

                throw nvae;
            }
            switch (alt249) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:930:3: if_statement
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_if_statement_in_selection_statement7574);
                    if_statement944=if_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, if_statement944.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:931:5: switch_statement
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_switch_statement_in_selection_statement7580);
                    switch_statement945=switch_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, switch_statement945.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 263, selection_statement_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "selection_statement"

    public static class if_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "if_statement"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:932:1: if_statement : 'if' '(' boolean_expression ')' embedded_statement ( ( 'else' )=> else_statement )? ;
    public final CSharpParser.if_statement_return if_statement() throws RecognitionException {
        CSharpParser.if_statement_return retval = new CSharpParser.if_statement_return();
        retval.start = input.LT(1);
        int if_statement_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal946=null;
        Token char_literal947=null;
        Token char_literal949=null;
        CSharpParser.boolean_expression_return boolean_expression948 = null;

        CSharpParser.embedded_statement_return embedded_statement950 = null;

        CSharpParser.else_statement_return else_statement951 = null;


        Object string_literal946_tree=null;
        Object char_literal947_tree=null;
        Object char_literal949_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 264) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:932:13: ( 'if' '(' boolean_expression ')' embedded_statement ( ( 'else' )=> else_statement )? )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:934:3: 'if' '(' boolean_expression ')' embedded_statement ( ( 'else' )=> else_statement )?
            {
            root_0 = (Object)adaptor.nil();

            string_literal946=(Token)match(input,IF,FOLLOW_IF_in_if_statement7592); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal946_tree = (Object)adaptor.create(string_literal946);
            adaptor.addChild(root_0, string_literal946_tree);
            }
            char_literal947=(Token)match(input,88,FOLLOW_88_in_if_statement7596); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal947_tree = (Object)adaptor.create(char_literal947);
            adaptor.addChild(root_0, char_literal947_tree);
            }
            pushFollow(FOLLOW_boolean_expression_in_if_statement7600);
            boolean_expression948=boolean_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, boolean_expression948.getTree());
            char_literal949=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_if_statement7604); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal949_tree = (Object)adaptor.create(char_literal949);
            adaptor.addChild(root_0, char_literal949_tree);
            }
            pushFollow(FOLLOW_embedded_statement_in_if_statement7608);
            embedded_statement950=embedded_statement();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, embedded_statement950.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:934:62: ( ( 'else' )=> else_statement )?
            int alt250=2;
            int LA250_0 = input.LA(1);

            if ( (LA250_0==180) ) {
                int LA250_1 = input.LA(2);

                if ( (synpred37_cs()) ) {
                    alt250=1;
                }
            }
            switch (alt250) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:934:63: ( 'else' )=> else_statement
                    {
                    pushFollow(FOLLOW_else_statement_in_if_statement7617);
                    else_statement951=else_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, else_statement951.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 264, if_statement_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "if_statement"

    public static class else_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "else_statement"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:936:1: else_statement : 'else' embedded_statement ;
    public final CSharpParser.else_statement_return else_statement() throws RecognitionException {
        CSharpParser.else_statement_return retval = new CSharpParser.else_statement_return();
        retval.start = input.LT(1);
        int else_statement_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal952=null;
        CSharpParser.embedded_statement_return embedded_statement953 = null;


        Object string_literal952_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 265) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:936:15: ( 'else' embedded_statement )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:937:3: 'else' embedded_statement
            {
            root_0 = (Object)adaptor.nil();

            string_literal952=(Token)match(input,180,FOLLOW_180_in_else_statement7630); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal952_tree = (Object)adaptor.create(string_literal952);
            adaptor.addChild(root_0, string_literal952_tree);
            }
            pushFollow(FOLLOW_embedded_statement_in_else_statement7634);
            embedded_statement953=embedded_statement();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, embedded_statement953.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 265, else_statement_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "else_statement"

    public static class switch_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "switch_statement"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:938:1: switch_statement : 'switch' '(' expression ')' switch_block ;
    public final CSharpParser.switch_statement_return switch_statement() throws RecognitionException {
        CSharpParser.switch_statement_return retval = new CSharpParser.switch_statement_return();
        retval.start = input.LT(1);
        int switch_statement_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal954=null;
        Token char_literal955=null;
        Token char_literal957=null;
        CSharpParser.expression_return expression956 = null;

        CSharpParser.switch_block_return switch_block958 = null;


        Object string_literal954_tree=null;
        Object char_literal955_tree=null;
        Object char_literal957_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 266) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:938:17: ( 'switch' '(' expression ')' switch_block )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:939:3: 'switch' '(' expression ')' switch_block
            {
            root_0 = (Object)adaptor.nil();

            string_literal954=(Token)match(input,181,FOLLOW_181_in_switch_statement7643); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal954_tree = (Object)adaptor.create(string_literal954);
            adaptor.addChild(root_0, string_literal954_tree);
            }
            char_literal955=(Token)match(input,88,FOLLOW_88_in_switch_statement7647); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal955_tree = (Object)adaptor.create(char_literal955);
            adaptor.addChild(root_0, char_literal955_tree);
            }
            pushFollow(FOLLOW_expression_in_switch_statement7651);
            expression956=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression956.getTree());
            char_literal957=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_switch_statement7655); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal957_tree = (Object)adaptor.create(char_literal957);
            adaptor.addChild(root_0, char_literal957_tree);
            }
            pushFollow(FOLLOW_switch_block_in_switch_statement7659);
            switch_block958=switch_block();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, switch_block958.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 266, switch_statement_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "switch_statement"

    public static class switch_block_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "switch_block"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:940:1: switch_block : '{' ( switch_sections )? '}' ;
    public final CSharpParser.switch_block_return switch_block() throws RecognitionException {
        CSharpParser.switch_block_return retval = new CSharpParser.switch_block_return();
        retval.start = input.LT(1);
        int switch_block_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal959=null;
        Token char_literal961=null;
        CSharpParser.switch_sections_return switch_sections960 = null;


        Object char_literal959_tree=null;
        Object char_literal961_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 267) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:940:13: ( '{' ( switch_sections )? '}' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:941:3: '{' ( switch_sections )? '}'
            {
            root_0 = (Object)adaptor.nil();

            char_literal959=(Token)match(input,62,FOLLOW_62_in_switch_block7668); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal959_tree = (Object)adaptor.create(char_literal959);
            adaptor.addChild(root_0, char_literal959_tree);
            }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:941:9: ( switch_sections )?
            int alt251=2;
            int LA251_0 = input.LA(1);

            if ( (LA251_0==96||LA251_0==182) ) {
                alt251=1;
            }
            switch (alt251) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:941:9: switch_sections
                    {
                    pushFollow(FOLLOW_switch_sections_in_switch_block7672);
                    switch_sections960=switch_sections();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, switch_sections960.getTree());

                    }
                    break;

            }

            char_literal961=(Token)match(input,63,FOLLOW_63_in_switch_block7677); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal961_tree = (Object)adaptor.create(char_literal961);
            adaptor.addChild(root_0, char_literal961_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 267, switch_block_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "switch_block"

    public static class switch_sections_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "switch_sections"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:942:1: switch_sections : ( switch_section )+ ;
    public final CSharpParser.switch_sections_return switch_sections() throws RecognitionException {
        CSharpParser.switch_sections_return retval = new CSharpParser.switch_sections_return();
        retval.start = input.LT(1);
        int switch_sections_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.switch_section_return switch_section962 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 268) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:942:16: ( ( switch_section )+ )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:943:3: ( switch_section )+
            {
            root_0 = (Object)adaptor.nil();

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:943:3: ( switch_section )+
            int cnt252=0;
            loop252:
            do {
                int alt252=2;
                int LA252_0 = input.LA(1);

                if ( (LA252_0==96||LA252_0==182) ) {
                    alt252=1;
                }


                switch (alt252) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:943:3: switch_section
            	    {
            	    pushFollow(FOLLOW_switch_section_in_switch_sections7686);
            	    switch_section962=switch_section();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, switch_section962.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt252 >= 1 ) break loop252;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(252, input);
                        throw eee;
                }
                cnt252++;
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 268, switch_sections_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "switch_sections"

    public static class switch_section_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "switch_section"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:944:1: switch_section : switch_labels statement_list ;
    public final CSharpParser.switch_section_return switch_section() throws RecognitionException {
        CSharpParser.switch_section_return retval = new CSharpParser.switch_section_return();
        retval.start = input.LT(1);
        int switch_section_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.switch_labels_return switch_labels963 = null;

        CSharpParser.statement_list_return statement_list964 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 269) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:944:15: ( switch_labels statement_list )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:945:3: switch_labels statement_list
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_switch_labels_in_switch_section7696);
            switch_labels963=switch_labels();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, switch_labels963.getTree());
            pushFollow(FOLLOW_statement_list_in_switch_section7700);
            statement_list964=statement_list();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, statement_list964.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 269, switch_section_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "switch_section"

    public static class switch_labels_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "switch_labels"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:946:1: switch_labels : ( switch_label )+ ;
    public final CSharpParser.switch_labels_return switch_labels() throws RecognitionException {
        CSharpParser.switch_labels_return retval = new CSharpParser.switch_labels_return();
        retval.start = input.LT(1);
        int switch_labels_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.switch_label_return switch_label965 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 270) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:946:14: ( ( switch_label )+ )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:947:3: ( switch_label )+
            {
            root_0 = (Object)adaptor.nil();

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:947:3: ( switch_label )+
            int cnt253=0;
            loop253:
            do {
                int alt253=2;
                int LA253_0 = input.LA(1);

                if ( (LA253_0==96) ) {
                    int LA253_2 = input.LA(2);

                    if ( (LA253_2==90) ) {
                        alt253=1;
                    }


                }
                else if ( (LA253_0==182) ) {
                    alt253=1;
                }


                switch (alt253) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:947:3: switch_label
            	    {
            	    pushFollow(FOLLOW_switch_label_in_switch_labels7709);
            	    switch_label965=switch_label();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, switch_label965.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt253 >= 1 ) break loop253;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(253, input);
                        throw eee;
                }
                cnt253++;
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 270, switch_labels_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "switch_labels"

    public static class switch_label_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "switch_label"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:948:1: switch_label : ( ( 'case' constant_expression ':' ) | ( 'default' ':' ) );
    public final CSharpParser.switch_label_return switch_label() throws RecognitionException {
        CSharpParser.switch_label_return retval = new CSharpParser.switch_label_return();
        retval.start = input.LT(1);
        int switch_label_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal966=null;
        Token char_literal968=null;
        Token string_literal969=null;
        Token char_literal970=null;
        CSharpParser.constant_expression_return constant_expression967 = null;


        Object string_literal966_tree=null;
        Object char_literal968_tree=null;
        Object string_literal969_tree=null;
        Object char_literal970_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 271) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:948:13: ( ( 'case' constant_expression ':' ) | ( 'default' ':' ) )
            int alt254=2;
            int LA254_0 = input.LA(1);

            if ( (LA254_0==182) ) {
                alt254=1;
            }
            else if ( (LA254_0==96) ) {
                alt254=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 254, 0, input);

                throw nvae;
            }
            switch (alt254) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:949:3: ( 'case' constant_expression ':' )
                    {
                    root_0 = (Object)adaptor.nil();

                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:949:3: ( 'case' constant_expression ':' )
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:949:4: 'case' constant_expression ':'
                    {
                    string_literal966=(Token)match(input,182,FOLLOW_182_in_switch_label7720); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal966_tree = (Object)adaptor.create(string_literal966);
                    adaptor.addChild(root_0, string_literal966_tree);
                    }
                    pushFollow(FOLLOW_constant_expression_in_switch_label7724);
                    constant_expression967=constant_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, constant_expression967.getTree());
                    char_literal968=(Token)match(input,90,FOLLOW_90_in_switch_label7728); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal968_tree = (Object)adaptor.create(char_literal968);
                    adaptor.addChild(root_0, char_literal968_tree);
                    }

                    }


                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:950:5: ( 'default' ':' )
                    {
                    root_0 = (Object)adaptor.nil();

                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:950:5: ( 'default' ':' )
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:950:6: 'default' ':'
                    {
                    string_literal969=(Token)match(input,96,FOLLOW_96_in_switch_label7736); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal969_tree = (Object)adaptor.create(string_literal969);
                    adaptor.addChild(root_0, string_literal969_tree);
                    }
                    char_literal970=(Token)match(input,90,FOLLOW_90_in_switch_label7740); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal970_tree = (Object)adaptor.create(char_literal970);
                    adaptor.addChild(root_0, char_literal970_tree);
                    }

                    }


                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 271, switch_label_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "switch_label"

    public static class iteration_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "iteration_statement"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:951:1: iteration_statement : ( while_statement | do_statement | for_statement | foreach_statement );
    public final CSharpParser.iteration_statement_return iteration_statement() throws RecognitionException {
        CSharpParser.iteration_statement_return retval = new CSharpParser.iteration_statement_return();
        retval.start = input.LT(1);
        int iteration_statement_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.while_statement_return while_statement971 = null;

        CSharpParser.do_statement_return do_statement972 = null;

        CSharpParser.for_statement_return for_statement973 = null;

        CSharpParser.foreach_statement_return foreach_statement974 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 272) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:951:20: ( while_statement | do_statement | for_statement | foreach_statement )
            int alt255=4;
            switch ( input.LA(1) ) {
            case 183:
                {
                alt255=1;
                }
                break;
            case 184:
                {
                alt255=2;
                }
                break;
            case 185:
                {
                alt255=3;
                }
                break;
            case 186:
                {
                alt255=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 255, 0, input);

                throw nvae;
            }

            switch (alt255) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:952:3: while_statement
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_while_statement_in_iteration_statement7750);
                    while_statement971=while_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, while_statement971.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:953:5: do_statement
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_do_statement_in_iteration_statement7756);
                    do_statement972=do_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, do_statement972.getTree());

                    }
                    break;
                case 3 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:954:5: for_statement
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_for_statement_in_iteration_statement7762);
                    for_statement973=for_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, for_statement973.getTree());

                    }
                    break;
                case 4 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:955:5: foreach_statement
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_foreach_statement_in_iteration_statement7768);
                    foreach_statement974=foreach_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, foreach_statement974.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 272, iteration_statement_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "iteration_statement"

    public static class while_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "while_statement"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:956:1: while_statement : 'while' '(' boolean_expression ')' embedded_statement ;
    public final CSharpParser.while_statement_return while_statement() throws RecognitionException {
        CSharpParser.while_statement_return retval = new CSharpParser.while_statement_return();
        retval.start = input.LT(1);
        int while_statement_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal975=null;
        Token char_literal976=null;
        Token char_literal978=null;
        CSharpParser.boolean_expression_return boolean_expression977 = null;

        CSharpParser.embedded_statement_return embedded_statement979 = null;


        Object string_literal975_tree=null;
        Object char_literal976_tree=null;
        Object char_literal978_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 273) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:956:16: ( 'while' '(' boolean_expression ')' embedded_statement )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:957:3: 'while' '(' boolean_expression ')' embedded_statement
            {
            root_0 = (Object)adaptor.nil();

            string_literal975=(Token)match(input,183,FOLLOW_183_in_while_statement7777); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal975_tree = (Object)adaptor.create(string_literal975);
            adaptor.addChild(root_0, string_literal975_tree);
            }
            char_literal976=(Token)match(input,88,FOLLOW_88_in_while_statement7781); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal976_tree = (Object)adaptor.create(char_literal976);
            adaptor.addChild(root_0, char_literal976_tree);
            }
            pushFollow(FOLLOW_boolean_expression_in_while_statement7785);
            boolean_expression977=boolean_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, boolean_expression977.getTree());
            char_literal978=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_while_statement7789); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal978_tree = (Object)adaptor.create(char_literal978);
            adaptor.addChild(root_0, char_literal978_tree);
            }
            pushFollow(FOLLOW_embedded_statement_in_while_statement7793);
            embedded_statement979=embedded_statement();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, embedded_statement979.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 273, while_statement_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "while_statement"

    public static class do_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "do_statement"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:958:1: do_statement : 'do' embedded_statement 'while' '(' boolean_expression ')' ';' ;
    public final CSharpParser.do_statement_return do_statement() throws RecognitionException {
        CSharpParser.do_statement_return retval = new CSharpParser.do_statement_return();
        retval.start = input.LT(1);
        int do_statement_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal980=null;
        Token string_literal982=null;
        Token char_literal983=null;
        Token char_literal985=null;
        Token char_literal986=null;
        CSharpParser.embedded_statement_return embedded_statement981 = null;

        CSharpParser.boolean_expression_return boolean_expression984 = null;


        Object string_literal980_tree=null;
        Object string_literal982_tree=null;
        Object char_literal983_tree=null;
        Object char_literal985_tree=null;
        Object char_literal986_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 274) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:958:13: ( 'do' embedded_statement 'while' '(' boolean_expression ')' ';' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:959:3: 'do' embedded_statement 'while' '(' boolean_expression ')' ';'
            {
            root_0 = (Object)adaptor.nil();

            string_literal980=(Token)match(input,184,FOLLOW_184_in_do_statement7802); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal980_tree = (Object)adaptor.create(string_literal980);
            adaptor.addChild(root_0, string_literal980_tree);
            }
            pushFollow(FOLLOW_embedded_statement_in_do_statement7806);
            embedded_statement981=embedded_statement();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, embedded_statement981.getTree());
            string_literal982=(Token)match(input,183,FOLLOW_183_in_do_statement7810); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal982_tree = (Object)adaptor.create(string_literal982);
            adaptor.addChild(root_0, string_literal982_tree);
            }
            char_literal983=(Token)match(input,88,FOLLOW_88_in_do_statement7814); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal983_tree = (Object)adaptor.create(char_literal983);
            adaptor.addChild(root_0, char_literal983_tree);
            }
            pushFollow(FOLLOW_boolean_expression_in_do_statement7818);
            boolean_expression984=boolean_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, boolean_expression984.getTree());
            char_literal985=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_do_statement7822); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal985_tree = (Object)adaptor.create(char_literal985);
            adaptor.addChild(root_0, char_literal985_tree);
            }
            char_literal986=(Token)match(input,SEMI,FOLLOW_SEMI_in_do_statement7826); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal986_tree = (Object)adaptor.create(char_literal986);
            adaptor.addChild(root_0, char_literal986_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 274, do_statement_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "do_statement"

    public static class for_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "for_statement"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:960:1: for_statement : 'for' '(' ( for_initializer )? ';' ( for_condition )? ';' ( for_iterator )? ')' embedded_statement ;
    public final CSharpParser.for_statement_return for_statement() throws RecognitionException {
        CSharpParser.for_statement_return retval = new CSharpParser.for_statement_return();
        retval.start = input.LT(1);
        int for_statement_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal987=null;
        Token char_literal988=null;
        Token char_literal990=null;
        Token char_literal992=null;
        Token char_literal994=null;
        CSharpParser.for_initializer_return for_initializer989 = null;

        CSharpParser.for_condition_return for_condition991 = null;

        CSharpParser.for_iterator_return for_iterator993 = null;

        CSharpParser.embedded_statement_return embedded_statement995 = null;


        Object string_literal987_tree=null;
        Object char_literal988_tree=null;
        Object char_literal990_tree=null;
        Object char_literal992_tree=null;
        Object char_literal994_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 275) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:960:14: ( 'for' '(' ( for_initializer )? ';' ( for_condition )? ';' ( for_iterator )? ')' embedded_statement )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:961:3: 'for' '(' ( for_initializer )? ';' ( for_condition )? ';' ( for_iterator )? ')' embedded_statement
            {
            root_0 = (Object)adaptor.nil();

            string_literal987=(Token)match(input,185,FOLLOW_185_in_for_statement7835); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal987_tree = (Object)adaptor.create(string_literal987);
            adaptor.addChild(root_0, string_literal987_tree);
            }
            char_literal988=(Token)match(input,88,FOLLOW_88_in_for_statement7839); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal988_tree = (Object)adaptor.create(char_literal988);
            adaptor.addChild(root_0, char_literal988_tree);
            }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:961:17: ( for_initializer )?
            int alt256=2;
            int LA256_0 = input.LA(1);

            if ( ((LA256_0>=IDENTIFIER && LA256_0<=NULL)||LA256_0==MINUS||LA256_0==65||LA256_0==68||(LA256_0>=82 && LA256_0<=83)||LA256_0==85||LA256_0==88||(LA256_0>=93 && LA256_0<=98)||LA256_0==100||(LA256_0>=102 && LA256_0<=106)||LA256_0==117||(LA256_0>=132 && LA256_0<=133)||(LA256_0>=135 && LA256_0<=148)||(LA256_0>=150 && LA256_0<=152)||LA256_0==154||(LA256_0>=157 && LA256_0<=168)||LA256_0==170||(LA256_0>=177 && LA256_0<=178)||(LA256_0>=195 && LA256_0<=202)) ) {
                alt256=1;
            }
            switch (alt256) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:961:17: for_initializer
                    {
                    pushFollow(FOLLOW_for_initializer_in_for_statement7843);
                    for_initializer989=for_initializer();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, for_initializer989.getTree());

                    }
                    break;

            }

            char_literal990=(Token)match(input,SEMI,FOLLOW_SEMI_in_for_statement7848); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal990_tree = (Object)adaptor.create(char_literal990);
            adaptor.addChild(root_0, char_literal990_tree);
            }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:961:42: ( for_condition )?
            int alt257=2;
            int LA257_0 = input.LA(1);

            if ( ((LA257_0>=IDENTIFIER && LA257_0<=NULL)||LA257_0==MINUS||LA257_0==65||LA257_0==68||LA257_0==83||LA257_0==85||LA257_0==88||(LA257_0>=93 && LA257_0<=98)||LA257_0==100||(LA257_0>=102 && LA257_0<=106)||LA257_0==117||(LA257_0>=132 && LA257_0<=133)||(LA257_0>=135 && LA257_0<=148)||(LA257_0>=150 && LA257_0<=152)||LA257_0==154||(LA257_0>=157 && LA257_0<=168)||LA257_0==170||(LA257_0>=177 && LA257_0<=178)||(LA257_0>=195 && LA257_0<=202)) ) {
                alt257=1;
            }
            switch (alt257) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:961:42: for_condition
                    {
                    pushFollow(FOLLOW_for_condition_in_for_statement7852);
                    for_condition991=for_condition();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, for_condition991.getTree());

                    }
                    break;

            }

            char_literal992=(Token)match(input,SEMI,FOLLOW_SEMI_in_for_statement7857); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal992_tree = (Object)adaptor.create(char_literal992);
            adaptor.addChild(root_0, char_literal992_tree);
            }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:961:65: ( for_iterator )?
            int alt258=2;
            int LA258_0 = input.LA(1);

            if ( ((LA258_0>=IDENTIFIER && LA258_0<=NULL)||LA258_0==MINUS||LA258_0==65||LA258_0==68||LA258_0==83||LA258_0==85||LA258_0==88||(LA258_0>=93 && LA258_0<=98)||LA258_0==100||(LA258_0>=102 && LA258_0<=106)||LA258_0==117||(LA258_0>=132 && LA258_0<=133)||(LA258_0>=135 && LA258_0<=148)||(LA258_0>=150 && LA258_0<=152)||LA258_0==154||(LA258_0>=157 && LA258_0<=168)||LA258_0==170||(LA258_0>=177 && LA258_0<=178)||(LA258_0>=195 && LA258_0<=202)) ) {
                alt258=1;
            }
            switch (alt258) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:961:65: for_iterator
                    {
                    pushFollow(FOLLOW_for_iterator_in_for_statement7861);
                    for_iterator993=for_iterator();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, for_iterator993.getTree());

                    }
                    break;

            }

            char_literal994=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_for_statement7866); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal994_tree = (Object)adaptor.create(char_literal994);
            adaptor.addChild(root_0, char_literal994_tree);
            }
            pushFollow(FOLLOW_embedded_statement_in_for_statement7870);
            embedded_statement995=embedded_statement();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, embedded_statement995.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 275, for_statement_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "for_statement"

    public static class for_initializer_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "for_initializer"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:962:1: for_initializer : ( ( local_variable_declaration )=> local_variable_declaration | statement_expression_list );
    public final CSharpParser.for_initializer_return for_initializer() throws RecognitionException {
        CSharpParser.for_initializer_return retval = new CSharpParser.for_initializer_return();
        retval.start = input.LT(1);
        int for_initializer_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.local_variable_declaration_return local_variable_declaration996 = null;

        CSharpParser.statement_expression_list_return statement_expression_list997 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 276) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:962:16: ( ( local_variable_declaration )=> local_variable_declaration | statement_expression_list )
            int alt259=2;
            alt259 = dfa259.predict(input);
            switch (alt259) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:963:3: ( local_variable_declaration )=> local_variable_declaration
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_local_variable_declaration_in_for_initializer7885);
                    local_variable_declaration996=local_variable_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, local_variable_declaration996.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:964:5: statement_expression_list
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_statement_expression_list_in_for_initializer7891);
                    statement_expression_list997=statement_expression_list();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, statement_expression_list997.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 276, for_initializer_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "for_initializer"

    public static class for_condition_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "for_condition"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:966:1: for_condition : boolean_expression ;
    public final CSharpParser.for_condition_return for_condition() throws RecognitionException {
        CSharpParser.for_condition_return retval = new CSharpParser.for_condition_return();
        retval.start = input.LT(1);
        int for_condition_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.boolean_expression_return boolean_expression998 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 277) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:966:14: ( boolean_expression )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:967:3: boolean_expression
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_boolean_expression_in_for_condition7903);
            boolean_expression998=boolean_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, boolean_expression998.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 277, for_condition_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "for_condition"

    public static class for_iterator_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "for_iterator"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:968:1: for_iterator : statement_expression_list ;
    public final CSharpParser.for_iterator_return for_iterator() throws RecognitionException {
        CSharpParser.for_iterator_return retval = new CSharpParser.for_iterator_return();
        retval.start = input.LT(1);
        int for_iterator_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.statement_expression_list_return statement_expression_list999 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 278) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:968:13: ( statement_expression_list )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:969:3: statement_expression_list
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_statement_expression_list_in_for_iterator7912);
            statement_expression_list999=statement_expression_list();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, statement_expression_list999.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 278, for_iterator_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "for_iterator"

    public static class statement_expression_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "statement_expression_list"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:970:1: statement_expression_list : statement_expression ( ',' statement_expression )* ;
    public final CSharpParser.statement_expression_list_return statement_expression_list() throws RecognitionException {
        CSharpParser.statement_expression_list_return retval = new CSharpParser.statement_expression_list_return();
        retval.start = input.LT(1);
        int statement_expression_list_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal1001=null;
        CSharpParser.statement_expression_return statement_expression1000 = null;

        CSharpParser.statement_expression_return statement_expression1002 = null;


        Object char_literal1001_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 279) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:970:26: ( statement_expression ( ',' statement_expression )* )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:971:3: statement_expression ( ',' statement_expression )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_statement_expression_in_statement_expression_list7921);
            statement_expression1000=statement_expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, statement_expression1000.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:971:24: ( ',' statement_expression )*
            loop260:
            do {
                int alt260=2;
                int LA260_0 = input.LA(1);

                if ( (LA260_0==89) ) {
                    alt260=1;
                }


                switch (alt260) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:971:25: ',' statement_expression
            	    {
            	    char_literal1001=(Token)match(input,89,FOLLOW_89_in_statement_expression_list7924); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal1001_tree = (Object)adaptor.create(char_literal1001);
            	    adaptor.addChild(root_0, char_literal1001_tree);
            	    }
            	    pushFollow(FOLLOW_statement_expression_in_statement_expression_list7926);
            	    statement_expression1002=statement_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, statement_expression1002.getTree());

            	    }
            	    break;

            	default :
            	    break loop260;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 279, statement_expression_list_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "statement_expression_list"

    public static class foreach_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "foreach_statement"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:972:1: foreach_statement : 'foreach' '(' local_variable_type identifier 'in' expression ')' embedded_statement ;
    public final CSharpParser.foreach_statement_return foreach_statement() throws RecognitionException {
        CSharpParser.foreach_statement_return retval = new CSharpParser.foreach_statement_return();
        retval.start = input.LT(1);
        int foreach_statement_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal1003=null;
        Token char_literal1004=null;
        Token string_literal1007=null;
        Token char_literal1009=null;
        CSharpParser.local_variable_type_return local_variable_type1005 = null;

        CSharpParser.identifier_return identifier1006 = null;

        CSharpParser.expression_return expression1008 = null;

        CSharpParser.embedded_statement_return embedded_statement1010 = null;


        Object string_literal1003_tree=null;
        Object char_literal1004_tree=null;
        Object string_literal1007_tree=null;
        Object char_literal1009_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 280) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:972:18: ( 'foreach' '(' local_variable_type identifier 'in' expression ')' embedded_statement )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:973:3: 'foreach' '(' local_variable_type identifier 'in' expression ')' embedded_statement
            {
            root_0 = (Object)adaptor.nil();

            string_literal1003=(Token)match(input,186,FOLLOW_186_in_foreach_statement7937); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal1003_tree = (Object)adaptor.create(string_literal1003);
            adaptor.addChild(root_0, string_literal1003_tree);
            }
            char_literal1004=(Token)match(input,88,FOLLOW_88_in_foreach_statement7941); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal1004_tree = (Object)adaptor.create(char_literal1004);
            adaptor.addChild(root_0, char_literal1004_tree);
            }
            pushFollow(FOLLOW_local_variable_type_in_foreach_statement7945);
            local_variable_type1005=local_variable_type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, local_variable_type1005.getTree());
            pushFollow(FOLLOW_identifier_in_foreach_statement7949);
            identifier1006=identifier();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier1006.getTree());
            string_literal1007=(Token)match(input,134,FOLLOW_134_in_foreach_statement7953); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal1007_tree = (Object)adaptor.create(string_literal1007);
            adaptor.addChild(root_0, string_literal1007_tree);
            }
            pushFollow(FOLLOW_expression_in_foreach_statement7957);
            expression1008=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression1008.getTree());
            char_literal1009=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_foreach_statement7961); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal1009_tree = (Object)adaptor.create(char_literal1009);
            adaptor.addChild(root_0, char_literal1009_tree);
            }
            pushFollow(FOLLOW_embedded_statement_in_foreach_statement7965);
            embedded_statement1010=embedded_statement();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, embedded_statement1010.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 280, foreach_statement_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "foreach_statement"

    public static class jump_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "jump_statement"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:974:1: jump_statement : ( break_statement | continue_statement | goto_statement | return_statement | throw_statement );
    public final CSharpParser.jump_statement_return jump_statement() throws RecognitionException {
        CSharpParser.jump_statement_return retval = new CSharpParser.jump_statement_return();
        retval.start = input.LT(1);
        int jump_statement_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.break_statement_return break_statement1011 = null;

        CSharpParser.continue_statement_return continue_statement1012 = null;

        CSharpParser.goto_statement_return goto_statement1013 = null;

        CSharpParser.return_statement_return return_statement1014 = null;

        CSharpParser.throw_statement_return throw_statement1015 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 281) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:974:15: ( break_statement | continue_statement | goto_statement | return_statement | throw_statement )
            int alt261=5;
            switch ( input.LA(1) ) {
            case 187:
                {
                alt261=1;
                }
                break;
            case 188:
                {
                alt261=2;
                }
                break;
            case 189:
                {
                alt261=3;
                }
                break;
            case 153:
                {
                alt261=4;
                }
                break;
            case 190:
                {
                alt261=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 261, 0, input);

                throw nvae;
            }

            switch (alt261) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:975:3: break_statement
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_break_statement_in_jump_statement7974);
                    break_statement1011=break_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, break_statement1011.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:976:5: continue_statement
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_continue_statement_in_jump_statement7980);
                    continue_statement1012=continue_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, continue_statement1012.getTree());

                    }
                    break;
                case 3 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:977:5: goto_statement
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_goto_statement_in_jump_statement7986);
                    goto_statement1013=goto_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, goto_statement1013.getTree());

                    }
                    break;
                case 4 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:978:5: return_statement
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_return_statement_in_jump_statement7992);
                    return_statement1014=return_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, return_statement1014.getTree());

                    }
                    break;
                case 5 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:979:5: throw_statement
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_throw_statement_in_jump_statement7998);
                    throw_statement1015=throw_statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, throw_statement1015.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 281, jump_statement_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "jump_statement"

    public static class break_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "break_statement"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:980:1: break_statement : 'break' ';' ;
    public final CSharpParser.break_statement_return break_statement() throws RecognitionException {
        CSharpParser.break_statement_return retval = new CSharpParser.break_statement_return();
        retval.start = input.LT(1);
        int break_statement_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal1016=null;
        Token char_literal1017=null;

        Object string_literal1016_tree=null;
        Object char_literal1017_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 282) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:980:16: ( 'break' ';' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:981:3: 'break' ';'
            {
            root_0 = (Object)adaptor.nil();

            string_literal1016=(Token)match(input,187,FOLLOW_187_in_break_statement8007); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal1016_tree = (Object)adaptor.create(string_literal1016);
            adaptor.addChild(root_0, string_literal1016_tree);
            }
            char_literal1017=(Token)match(input,SEMI,FOLLOW_SEMI_in_break_statement8011); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal1017_tree = (Object)adaptor.create(char_literal1017);
            adaptor.addChild(root_0, char_literal1017_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 282, break_statement_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "break_statement"

    public static class continue_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "continue_statement"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:982:1: continue_statement : 'continue' ';' ;
    public final CSharpParser.continue_statement_return continue_statement() throws RecognitionException {
        CSharpParser.continue_statement_return retval = new CSharpParser.continue_statement_return();
        retval.start = input.LT(1);
        int continue_statement_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal1018=null;
        Token char_literal1019=null;

        Object string_literal1018_tree=null;
        Object char_literal1019_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 283) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:982:19: ( 'continue' ';' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:983:3: 'continue' ';'
            {
            root_0 = (Object)adaptor.nil();

            string_literal1018=(Token)match(input,188,FOLLOW_188_in_continue_statement8020); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal1018_tree = (Object)adaptor.create(string_literal1018);
            adaptor.addChild(root_0, string_literal1018_tree);
            }
            char_literal1019=(Token)match(input,SEMI,FOLLOW_SEMI_in_continue_statement8024); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal1019_tree = (Object)adaptor.create(char_literal1019);
            adaptor.addChild(root_0, char_literal1019_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 283, continue_statement_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "continue_statement"

    public static class goto_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "goto_statement"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:984:1: goto_statement : 'goto' ( identifier | 'case' constant_expression | 'default' ) ';' ;
    public final CSharpParser.goto_statement_return goto_statement() throws RecognitionException {
        CSharpParser.goto_statement_return retval = new CSharpParser.goto_statement_return();
        retval.start = input.LT(1);
        int goto_statement_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal1020=null;
        Token string_literal1022=null;
        Token string_literal1024=null;
        Token char_literal1025=null;
        CSharpParser.identifier_return identifier1021 = null;

        CSharpParser.constant_expression_return constant_expression1023 = null;


        Object string_literal1020_tree=null;
        Object string_literal1022_tree=null;
        Object string_literal1024_tree=null;
        Object char_literal1025_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 284) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:984:15: ( 'goto' ( identifier | 'case' constant_expression | 'default' ) ';' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:985:3: 'goto' ( identifier | 'case' constant_expression | 'default' ) ';'
            {
            root_0 = (Object)adaptor.nil();

            string_literal1020=(Token)match(input,189,FOLLOW_189_in_goto_statement8033); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal1020_tree = (Object)adaptor.create(string_literal1020);
            adaptor.addChild(root_0, string_literal1020_tree);
            }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:985:12: ( identifier | 'case' constant_expression | 'default' )
            int alt262=3;
            switch ( input.LA(1) ) {
            case IDENTIFIER:
            case 65:
            case 132:
            case 133:
            case 135:
            case 136:
            case 137:
            case 138:
            case 139:
            case 140:
            case 141:
            case 142:
            case 143:
            case 144:
            case 145:
            case 146:
            case 147:
            case 148:
            case 150:
            case 151:
            case 152:
            case 154:
            case 157:
            case 158:
            case 159:
            case 170:
            case 177:
            case 178:
            case 195:
            case 202:
                {
                alt262=1;
                }
                break;
            case 182:
                {
                alt262=2;
                }
                break;
            case 96:
                {
                alt262=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 262, 0, input);

                throw nvae;
            }

            switch (alt262) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:985:14: identifier
                    {
                    pushFollow(FOLLOW_identifier_in_goto_statement8039);
                    identifier1021=identifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier1021.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:986:10: 'case' constant_expression
                    {
                    string_literal1022=(Token)match(input,182,FOLLOW_182_in_goto_statement8050); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal1022_tree = (Object)adaptor.create(string_literal1022);
                    adaptor.addChild(root_0, string_literal1022_tree);
                    }
                    pushFollow(FOLLOW_constant_expression_in_goto_statement8054);
                    constant_expression1023=constant_expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, constant_expression1023.getTree());

                    }
                    break;
                case 3 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:987:10: 'default'
                    {
                    string_literal1024=(Token)match(input,96,FOLLOW_96_in_goto_statement8065); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal1024_tree = (Object)adaptor.create(string_literal1024);
                    adaptor.addChild(root_0, string_literal1024_tree);
                    }

                    }
                    break;

            }

            char_literal1025=(Token)match(input,SEMI,FOLLOW_SEMI_in_goto_statement8070); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal1025_tree = (Object)adaptor.create(char_literal1025);
            adaptor.addChild(root_0, char_literal1025_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 284, goto_statement_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "goto_statement"

    public static class return_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "return_statement"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:988:1: return_statement : 'return' ( expression )? ';' ;
    public final CSharpParser.return_statement_return return_statement() throws RecognitionException {
        CSharpParser.return_statement_return retval = new CSharpParser.return_statement_return();
        retval.start = input.LT(1);
        int return_statement_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal1026=null;
        Token char_literal1028=null;
        CSharpParser.expression_return expression1027 = null;


        Object string_literal1026_tree=null;
        Object char_literal1028_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 285) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:988:17: ( 'return' ( expression )? ';' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:989:3: 'return' ( expression )? ';'
            {
            root_0 = (Object)adaptor.nil();

            string_literal1026=(Token)match(input,153,FOLLOW_153_in_return_statement8079); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal1026_tree = (Object)adaptor.create(string_literal1026);
            adaptor.addChild(root_0, string_literal1026_tree);
            }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:989:14: ( expression )?
            int alt263=2;
            int LA263_0 = input.LA(1);

            if ( ((LA263_0>=IDENTIFIER && LA263_0<=NULL)||LA263_0==MINUS||LA263_0==65||LA263_0==68||LA263_0==83||LA263_0==85||LA263_0==88||(LA263_0>=93 && LA263_0<=98)||LA263_0==100||(LA263_0>=102 && LA263_0<=106)||LA263_0==117||(LA263_0>=132 && LA263_0<=133)||(LA263_0>=135 && LA263_0<=148)||(LA263_0>=150 && LA263_0<=152)||LA263_0==154||(LA263_0>=157 && LA263_0<=168)||LA263_0==170||(LA263_0>=177 && LA263_0<=178)||(LA263_0>=195 && LA263_0<=202)) ) {
                alt263=1;
            }
            switch (alt263) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:989:14: expression
                    {
                    pushFollow(FOLLOW_expression_in_return_statement8083);
                    expression1027=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression1027.getTree());

                    }
                    break;

            }

            char_literal1028=(Token)match(input,SEMI,FOLLOW_SEMI_in_return_statement8088); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal1028_tree = (Object)adaptor.create(char_literal1028);
            adaptor.addChild(root_0, char_literal1028_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 285, return_statement_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "return_statement"

    public static class throw_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "throw_statement"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:990:1: throw_statement : 'throw' ( expression )? ';' ;
    public final CSharpParser.throw_statement_return throw_statement() throws RecognitionException {
        CSharpParser.throw_statement_return retval = new CSharpParser.throw_statement_return();
        retval.start = input.LT(1);
        int throw_statement_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal1029=null;
        Token char_literal1031=null;
        CSharpParser.expression_return expression1030 = null;


        Object string_literal1029_tree=null;
        Object char_literal1031_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 286) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:990:16: ( 'throw' ( expression )? ';' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:991:3: 'throw' ( expression )? ';'
            {
            root_0 = (Object)adaptor.nil();

            string_literal1029=(Token)match(input,190,FOLLOW_190_in_throw_statement8097); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal1029_tree = (Object)adaptor.create(string_literal1029);
            adaptor.addChild(root_0, string_literal1029_tree);
            }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:991:13: ( expression )?
            int alt264=2;
            int LA264_0 = input.LA(1);

            if ( ((LA264_0>=IDENTIFIER && LA264_0<=NULL)||LA264_0==MINUS||LA264_0==65||LA264_0==68||LA264_0==83||LA264_0==85||LA264_0==88||(LA264_0>=93 && LA264_0<=98)||LA264_0==100||(LA264_0>=102 && LA264_0<=106)||LA264_0==117||(LA264_0>=132 && LA264_0<=133)||(LA264_0>=135 && LA264_0<=148)||(LA264_0>=150 && LA264_0<=152)||LA264_0==154||(LA264_0>=157 && LA264_0<=168)||LA264_0==170||(LA264_0>=177 && LA264_0<=178)||(LA264_0>=195 && LA264_0<=202)) ) {
                alt264=1;
            }
            switch (alt264) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:991:13: expression
                    {
                    pushFollow(FOLLOW_expression_in_throw_statement8101);
                    expression1030=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression1030.getTree());

                    }
                    break;

            }

            char_literal1031=(Token)match(input,SEMI,FOLLOW_SEMI_in_throw_statement8106); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal1031_tree = (Object)adaptor.create(char_literal1031);
            adaptor.addChild(root_0, char_literal1031_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 286, throw_statement_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "throw_statement"

    public static class try_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "try_statement"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:992:1: try_statement : 'try' block ( catch_clauses ( finally_clause )? | finally_clause ) ;
    public final CSharpParser.try_statement_return try_statement() throws RecognitionException {
        CSharpParser.try_statement_return retval = new CSharpParser.try_statement_return();
        retval.start = input.LT(1);
        int try_statement_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal1032=null;
        CSharpParser.block_return block1033 = null;

        CSharpParser.catch_clauses_return catch_clauses1034 = null;

        CSharpParser.finally_clause_return finally_clause1035 = null;

        CSharpParser.finally_clause_return finally_clause1036 = null;


        Object string_literal1032_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 287) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:992:14: ( 'try' block ( catch_clauses ( finally_clause )? | finally_clause ) )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:993:7: 'try' block ( catch_clauses ( finally_clause )? | finally_clause )
            {
            root_0 = (Object)adaptor.nil();

            string_literal1032=(Token)match(input,191,FOLLOW_191_in_try_statement8119); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal1032_tree = (Object)adaptor.create(string_literal1032);
            adaptor.addChild(root_0, string_literal1032_tree);
            }
            pushFollow(FOLLOW_block_in_try_statement8123);
            block1033=block();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, block1033.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:993:23: ( catch_clauses ( finally_clause )? | finally_clause )
            int alt266=2;
            int LA266_0 = input.LA(1);

            if ( (LA266_0==192) ) {
                alt266=1;
            }
            else if ( (LA266_0==193) ) {
                alt266=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 266, 0, input);

                throw nvae;
            }
            switch (alt266) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:993:25: catch_clauses ( finally_clause )?
                    {
                    pushFollow(FOLLOW_catch_clauses_in_try_statement8129);
                    catch_clauses1034=catch_clauses();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, catch_clauses1034.getTree());
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:993:41: ( finally_clause )?
                    int alt265=2;
                    int LA265_0 = input.LA(1);

                    if ( (LA265_0==193) ) {
                        alt265=1;
                    }
                    switch (alt265) {
                        case 1 :
                            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:993:41: finally_clause
                            {
                            pushFollow(FOLLOW_finally_clause_in_try_statement8133);
                            finally_clause1035=finally_clause();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, finally_clause1035.getTree());

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:994:15: finally_clause
                    {
                    pushFollow(FOLLOW_finally_clause_in_try_statement8150);
                    finally_clause1036=finally_clause();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, finally_clause1036.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 287, try_statement_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "try_statement"

    public static class catch_clauses_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "catch_clauses"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:996:1: catch_clauses : 'catch' ( specific_catch_clauses | general_catch_clause ) ;
    public final CSharpParser.catch_clauses_return catch_clauses() throws RecognitionException {
        CSharpParser.catch_clauses_return retval = new CSharpParser.catch_clauses_return();
        retval.start = input.LT(1);
        int catch_clauses_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal1037=null;
        CSharpParser.specific_catch_clauses_return specific_catch_clauses1038 = null;

        CSharpParser.general_catch_clause_return general_catch_clause1039 = null;


        Object string_literal1037_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 288) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:996:14: ( 'catch' ( specific_catch_clauses | general_catch_clause ) )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:997:3: 'catch' ( specific_catch_clauses | general_catch_clause )
            {
            root_0 = (Object)adaptor.nil();

            string_literal1037=(Token)match(input,192,FOLLOW_192_in_catch_clauses8160); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal1037_tree = (Object)adaptor.create(string_literal1037);
            adaptor.addChild(root_0, string_literal1037_tree);
            }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:997:13: ( specific_catch_clauses | general_catch_clause )
            int alt267=2;
            int LA267_0 = input.LA(1);

            if ( (LA267_0==88) ) {
                alt267=1;
            }
            else if ( (LA267_0==SEMI||LA267_0==62) ) {
                alt267=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 267, 0, input);

                throw nvae;
            }
            switch (alt267) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:997:14: specific_catch_clauses
                    {
                    pushFollow(FOLLOW_specific_catch_clauses_in_catch_clauses8165);
                    specific_catch_clauses1038=specific_catch_clauses();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, specific_catch_clauses1038.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:997:39: general_catch_clause
                    {
                    pushFollow(FOLLOW_general_catch_clause_in_catch_clauses8169);
                    general_catch_clause1039=general_catch_clause();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, general_catch_clause1039.getTree());

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 288, catch_clauses_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "catch_clauses"

    public static class specific_catch_clauses_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "specific_catch_clauses"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:998:1: specific_catch_clauses : specific_catch_clause ( 'catch' ( specific_catch_clause | general_catch_clause ) )* ;
    public final CSharpParser.specific_catch_clauses_return specific_catch_clauses() throws RecognitionException {
        CSharpParser.specific_catch_clauses_return retval = new CSharpParser.specific_catch_clauses_return();
        retval.start = input.LT(1);
        int specific_catch_clauses_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal1041=null;
        CSharpParser.specific_catch_clause_return specific_catch_clause1040 = null;

        CSharpParser.specific_catch_clause_return specific_catch_clause1042 = null;

        CSharpParser.general_catch_clause_return general_catch_clause1043 = null;


        Object string_literal1041_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 289) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:998:23: ( specific_catch_clause ( 'catch' ( specific_catch_clause | general_catch_clause ) )* )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:999:3: specific_catch_clause ( 'catch' ( specific_catch_clause | general_catch_clause ) )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_specific_catch_clause_in_specific_catch_clauses8179);
            specific_catch_clause1040=specific_catch_clause();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, specific_catch_clause1040.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:999:27: ( 'catch' ( specific_catch_clause | general_catch_clause ) )*
            loop269:
            do {
                int alt269=2;
                int LA269_0 = input.LA(1);

                if ( (LA269_0==192) ) {
                    alt269=1;
                }


                switch (alt269) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:999:28: 'catch' ( specific_catch_clause | general_catch_clause )
            	    {
            	    string_literal1041=(Token)match(input,192,FOLLOW_192_in_specific_catch_clauses8184); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    string_literal1041_tree = (Object)adaptor.create(string_literal1041);
            	    adaptor.addChild(root_0, string_literal1041_tree);
            	    }
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:999:38: ( specific_catch_clause | general_catch_clause )
            	    int alt268=2;
            	    int LA268_0 = input.LA(1);

            	    if ( (LA268_0==88) ) {
            	        alt268=1;
            	    }
            	    else if ( (LA268_0==SEMI||LA268_0==62) ) {
            	        alt268=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return retval;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 268, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt268) {
            	        case 1 :
            	            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:999:39: specific_catch_clause
            	            {
            	            pushFollow(FOLLOW_specific_catch_clause_in_specific_catch_clauses8189);
            	            specific_catch_clause1042=specific_catch_clause();

            	            state._fsp--;
            	            if (state.failed) return retval;
            	            if ( state.backtracking==0 ) adaptor.addChild(root_0, specific_catch_clause1042.getTree());

            	            }
            	            break;
            	        case 2 :
            	            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:999:63: general_catch_clause
            	            {
            	            pushFollow(FOLLOW_general_catch_clause_in_specific_catch_clauses8193);
            	            general_catch_clause1043=general_catch_clause();

            	            state._fsp--;
            	            if (state.failed) return retval;
            	            if ( state.backtracking==0 ) adaptor.addChild(root_0, general_catch_clause1043.getTree());

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop269;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 289, specific_catch_clauses_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "specific_catch_clauses"

    public static class specific_catch_clause_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "specific_catch_clause"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1000:1: specific_catch_clause : '(' class_type ( identifier )? ')' block ;
    public final CSharpParser.specific_catch_clause_return specific_catch_clause() throws RecognitionException {
        CSharpParser.specific_catch_clause_return retval = new CSharpParser.specific_catch_clause_return();
        retval.start = input.LT(1);
        int specific_catch_clause_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal1044=null;
        Token char_literal1047=null;
        CSharpParser.class_type_return class_type1045 = null;

        CSharpParser.identifier_return identifier1046 = null;

        CSharpParser.block_return block1048 = null;


        Object char_literal1044_tree=null;
        Object char_literal1047_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 290) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1000:22: ( '(' class_type ( identifier )? ')' block )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1001:3: '(' class_type ( identifier )? ')' block
            {
            root_0 = (Object)adaptor.nil();

            char_literal1044=(Token)match(input,88,FOLLOW_88_in_specific_catch_clause8204); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal1044_tree = (Object)adaptor.create(char_literal1044);
            adaptor.addChild(root_0, char_literal1044_tree);
            }
            pushFollow(FOLLOW_class_type_in_specific_catch_clause8208);
            class_type1045=class_type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, class_type1045.getTree());
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1001:22: ( identifier )?
            int alt270=2;
            int LA270_0 = input.LA(1);

            if ( (LA270_0==IDENTIFIER||LA270_0==65||(LA270_0>=132 && LA270_0<=133)||(LA270_0>=135 && LA270_0<=148)||(LA270_0>=150 && LA270_0<=152)||LA270_0==154||(LA270_0>=157 && LA270_0<=159)||LA270_0==170||(LA270_0>=177 && LA270_0<=178)||LA270_0==195||LA270_0==202) ) {
                alt270=1;
            }
            switch (alt270) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1001:22: identifier
                    {
                    pushFollow(FOLLOW_identifier_in_specific_catch_clause8212);
                    identifier1046=identifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier1046.getTree());

                    }
                    break;

            }

            char_literal1047=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_specific_catch_clause8217); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal1047_tree = (Object)adaptor.create(char_literal1047);
            adaptor.addChild(root_0, char_literal1047_tree);
            }
            pushFollow(FOLLOW_block_in_specific_catch_clause8221);
            block1048=block();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, block1048.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 290, specific_catch_clause_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "specific_catch_clause"

    public static class general_catch_clause_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "general_catch_clause"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1002:1: general_catch_clause : block ;
    public final CSharpParser.general_catch_clause_return general_catch_clause() throws RecognitionException {
        CSharpParser.general_catch_clause_return retval = new CSharpParser.general_catch_clause_return();
        retval.start = input.LT(1);
        int general_catch_clause_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.block_return block1049 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 291) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1002:21: ( block )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1003:3: block
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_block_in_general_catch_clause8230);
            block1049=block();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, block1049.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 291, general_catch_clause_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "general_catch_clause"

    public static class finally_clause_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "finally_clause"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1004:1: finally_clause : 'finally' block ;
    public final CSharpParser.finally_clause_return finally_clause() throws RecognitionException {
        CSharpParser.finally_clause_return retval = new CSharpParser.finally_clause_return();
        retval.start = input.LT(1);
        int finally_clause_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal1050=null;
        CSharpParser.block_return block1051 = null;


        Object string_literal1050_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 292) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1004:15: ( 'finally' block )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1005:3: 'finally' block
            {
            root_0 = (Object)adaptor.nil();

            string_literal1050=(Token)match(input,193,FOLLOW_193_in_finally_clause8239); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal1050_tree = (Object)adaptor.create(string_literal1050);
            adaptor.addChild(root_0, string_literal1050_tree);
            }
            pushFollow(FOLLOW_block_in_finally_clause8243);
            block1051=block();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, block1051.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 292, finally_clause_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "finally_clause"

    public static class checked_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "checked_statement"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1006:1: checked_statement : 'checked' block ;
    public final CSharpParser.checked_statement_return checked_statement() throws RecognitionException {
        CSharpParser.checked_statement_return retval = new CSharpParser.checked_statement_return();
        retval.start = input.LT(1);
        int checked_statement_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal1052=null;
        CSharpParser.block_return block1053 = null;


        Object string_literal1052_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 293) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1006:18: ( 'checked' block )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1007:3: 'checked' block
            {
            root_0 = (Object)adaptor.nil();

            string_literal1052=(Token)match(input,94,FOLLOW_94_in_checked_statement8252); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal1052_tree = (Object)adaptor.create(string_literal1052);
            adaptor.addChild(root_0, string_literal1052_tree);
            }
            pushFollow(FOLLOW_block_in_checked_statement8256);
            block1053=block();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, block1053.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 293, checked_statement_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "checked_statement"

    public static class unchecked_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "unchecked_statement"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1008:1: unchecked_statement : 'unchecked' block ;
    public final CSharpParser.unchecked_statement_return unchecked_statement() throws RecognitionException {
        CSharpParser.unchecked_statement_return retval = new CSharpParser.unchecked_statement_return();
        retval.start = input.LT(1);
        int unchecked_statement_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal1054=null;
        CSharpParser.block_return block1055 = null;


        Object string_literal1054_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 294) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1008:20: ( 'unchecked' block )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1009:3: 'unchecked' block
            {
            root_0 = (Object)adaptor.nil();

            string_literal1054=(Token)match(input,95,FOLLOW_95_in_unchecked_statement8265); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal1054_tree = (Object)adaptor.create(string_literal1054);
            adaptor.addChild(root_0, string_literal1054_tree);
            }
            pushFollow(FOLLOW_block_in_unchecked_statement8269);
            block1055=block();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, block1055.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 294, unchecked_statement_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "unchecked_statement"

    public static class lock_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "lock_statement"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1010:1: lock_statement : 'lock' '(' expression ')' embedded_statement ;
    public final CSharpParser.lock_statement_return lock_statement() throws RecognitionException {
        CSharpParser.lock_statement_return retval = new CSharpParser.lock_statement_return();
        retval.start = input.LT(1);
        int lock_statement_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal1056=null;
        Token char_literal1057=null;
        Token char_literal1059=null;
        CSharpParser.expression_return expression1058 = null;

        CSharpParser.embedded_statement_return embedded_statement1060 = null;


        Object string_literal1056_tree=null;
        Object char_literal1057_tree=null;
        Object char_literal1059_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 295) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1010:15: ( 'lock' '(' expression ')' embedded_statement )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1011:3: 'lock' '(' expression ')' embedded_statement
            {
            root_0 = (Object)adaptor.nil();

            string_literal1056=(Token)match(input,194,FOLLOW_194_in_lock_statement8278); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal1056_tree = (Object)adaptor.create(string_literal1056);
            adaptor.addChild(root_0, string_literal1056_tree);
            }
            char_literal1057=(Token)match(input,88,FOLLOW_88_in_lock_statement8282); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal1057_tree = (Object)adaptor.create(char_literal1057);
            adaptor.addChild(root_0, char_literal1057_tree);
            }
            pushFollow(FOLLOW_expression_in_lock_statement8285);
            expression1058=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expression1058.getTree());
            char_literal1059=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_lock_statement8289); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal1059_tree = (Object)adaptor.create(char_literal1059);
            adaptor.addChild(root_0, char_literal1059_tree);
            }
            pushFollow(FOLLOW_embedded_statement_in_lock_statement8293);
            embedded_statement1060=embedded_statement();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, embedded_statement1060.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 295, lock_statement_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "lock_statement"

    public static class using_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "using_statement"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1012:1: using_statement : 'using' '(' resource_acquisition ')' embedded_statement ;
    public final CSharpParser.using_statement_return using_statement() throws RecognitionException {
        CSharpParser.using_statement_return retval = new CSharpParser.using_statement_return();
        retval.start = input.LT(1);
        int using_statement_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal1061=null;
        Token char_literal1062=null;
        Token char_literal1064=null;
        CSharpParser.resource_acquisition_return resource_acquisition1063 = null;

        CSharpParser.embedded_statement_return embedded_statement1065 = null;


        Object string_literal1061_tree=null;
        Object char_literal1062_tree=null;
        Object char_literal1064_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 296) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1012:16: ( 'using' '(' resource_acquisition ')' embedded_statement )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1013:3: 'using' '(' resource_acquisition ')' embedded_statement
            {
            root_0 = (Object)adaptor.nil();

            string_literal1061=(Token)match(input,USING,FOLLOW_USING_in_using_statement8302); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal1061_tree = (Object)adaptor.create(string_literal1061);
            adaptor.addChild(root_0, string_literal1061_tree);
            }
            char_literal1062=(Token)match(input,88,FOLLOW_88_in_using_statement8306); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal1062_tree = (Object)adaptor.create(char_literal1062);
            adaptor.addChild(root_0, char_literal1062_tree);
            }
            pushFollow(FOLLOW_resource_acquisition_in_using_statement8311);
            resource_acquisition1063=resource_acquisition();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, resource_acquisition1063.getTree());
            char_literal1064=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_using_statement8315); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal1064_tree = (Object)adaptor.create(char_literal1064);
            adaptor.addChild(root_0, char_literal1064_tree);
            }
            pushFollow(FOLLOW_embedded_statement_in_using_statement8320);
            embedded_statement1065=embedded_statement();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, embedded_statement1065.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 296, using_statement_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "using_statement"

    public static class resource_acquisition_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "resource_acquisition"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1014:1: resource_acquisition : ( ( local_variable_declaration )=> local_variable_declaration | expression );
    public final CSharpParser.resource_acquisition_return resource_acquisition() throws RecognitionException {
        CSharpParser.resource_acquisition_return retval = new CSharpParser.resource_acquisition_return();
        retval.start = input.LT(1);
        int resource_acquisition_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.local_variable_declaration_return local_variable_declaration1066 = null;

        CSharpParser.expression_return expression1067 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 297) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1014:21: ( ( local_variable_declaration )=> local_variable_declaration | expression )
            int alt271=2;
            alt271 = dfa271.predict(input);
            switch (alt271) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1015:3: ( local_variable_declaration )=> local_variable_declaration
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_local_variable_declaration_in_resource_acquisition8335);
                    local_variable_declaration1066=local_variable_declaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, local_variable_declaration1066.getTree());

                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1016:5: expression
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_expression_in_resource_acquisition8341);
                    expression1067=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression1067.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 297, resource_acquisition_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "resource_acquisition"

    public static class yield_statement_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "yield_statement"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1017:1: yield_statement : 'yield' ( 'return' expression ';' | 'break' ';' ) ;
    public final CSharpParser.yield_statement_return yield_statement() throws RecognitionException {
        CSharpParser.yield_statement_return retval = new CSharpParser.yield_statement_return();
        retval.start = input.LT(1);
        int yield_statement_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal1068=null;
        Token string_literal1069=null;
        Token char_literal1071=null;
        Token string_literal1072=null;
        Token char_literal1073=null;
        CSharpParser.expression_return expression1070 = null;


        Object string_literal1068_tree=null;
        Object string_literal1069_tree=null;
        Object char_literal1071_tree=null;
        Object string_literal1072_tree=null;
        Object char_literal1073_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 298) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1017:16: ( 'yield' ( 'return' expression ';' | 'break' ';' ) )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1018:3: 'yield' ( 'return' expression ';' | 'break' ';' )
            {
            root_0 = (Object)adaptor.nil();

            string_literal1068=(Token)match(input,195,FOLLOW_195_in_yield_statement8350); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal1068_tree = (Object)adaptor.create(string_literal1068);
            adaptor.addChild(root_0, string_literal1068_tree);
            }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1018:13: ( 'return' expression ';' | 'break' ';' )
            int alt272=2;
            int LA272_0 = input.LA(1);

            if ( (LA272_0==153) ) {
                alt272=1;
            }
            else if ( (LA272_0==187) ) {
                alt272=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 272, 0, input);

                throw nvae;
            }
            switch (alt272) {
                case 1 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1018:14: 'return' expression ';'
                    {
                    string_literal1069=(Token)match(input,153,FOLLOW_153_in_yield_statement8355); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal1069_tree = (Object)adaptor.create(string_literal1069);
                    adaptor.addChild(root_0, string_literal1069_tree);
                    }
                    pushFollow(FOLLOW_expression_in_yield_statement8359);
                    expression1070=expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression1070.getTree());
                    char_literal1071=(Token)match(input,SEMI,FOLLOW_SEMI_in_yield_statement8363); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal1071_tree = (Object)adaptor.create(char_literal1071);
                    adaptor.addChild(root_0, char_literal1071_tree);
                    }

                    }
                    break;
                case 2 :
                    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1019:15: 'break' ';'
                    {
                    string_literal1072=(Token)match(input,187,FOLLOW_187_in_yield_statement8379); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal1072_tree = (Object)adaptor.create(string_literal1072);
                    adaptor.addChild(root_0, string_literal1072_tree);
                    }
                    char_literal1073=(Token)match(input,SEMI,FOLLOW_SEMI_in_yield_statement8383); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal1073_tree = (Object)adaptor.create(char_literal1073);
                    adaptor.addChild(root_0, char_literal1073_tree);
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 298, yield_statement_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "yield_statement"

    public static class predefined_type_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "predefined_type"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1025:1: predefined_type : ( 'bool' | 'byte' | 'char' | 'decimal' | 'double' | 'float' | 'int' | 'long' | 'object' | 'sbyte' | 'short' | 'string' | 'uint' | 'ulong' | 'ushort' );
    public final CSharpParser.predefined_type_return predefined_type() throws RecognitionException {
        CSharpParser.predefined_type_return retval = new CSharpParser.predefined_type_return();
        retval.start = input.LT(1);
        int predefined_type_StartIndex = input.index();
        Object root_0 = null;

        Token set1074=null;

        Object set1074_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 299) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1025:16: ( 'bool' | 'byte' | 'char' | 'decimal' | 'double' | 'float' | 'int' | 'long' | 'object' | 'sbyte' | 'short' | 'string' | 'uint' | 'ulong' | 'ushort' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:
            {
            root_0 = (Object)adaptor.nil();

            set1074=(Token)input.LT(1);
            if ( (input.LA(1)>=160 && input.LA(1)<=168)||(input.LA(1)>=196 && input.LA(1)<=201) ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set1074));
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 299, predefined_type_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "predefined_type"

    public static class identifier_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "identifier"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1029:1: identifier : ( IDENTIFIER | 'add' | 'alias' | 'assembly' | 'module' | 'field' | 'method' | 'param' | 'property' | 'type' | 'yield' | 'from' | 'into' | 'join' | 'on' | 'where' | 'orderby' | 'group' | 'by' | 'ascending' | 'descending' | 'equals' | 'select' | 'pragma' | 'let' | 'remove' | 'set' | 'var' | '__arglist' | 'dynamic' );
    public final CSharpParser.identifier_return identifier() throws RecognitionException {
        CSharpParser.identifier_return retval = new CSharpParser.identifier_return();
        retval.start = input.LT(1);
        int identifier_StartIndex = input.index();
        Object root_0 = null;

        Token set1075=null;

        Object set1075_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 300) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1029:11: ( IDENTIFIER | 'add' | 'alias' | 'assembly' | 'module' | 'field' | 'method' | 'param' | 'property' | 'type' | 'yield' | 'from' | 'into' | 'join' | 'on' | 'where' | 'orderby' | 'group' | 'by' | 'ascending' | 'descending' | 'equals' | 'select' | 'pragma' | 'let' | 'remove' | 'set' | 'var' | '__arglist' | 'dynamic' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:
            {
            root_0 = (Object)adaptor.nil();

            set1075=(Token)input.LT(1);
            if ( input.LA(1)==IDENTIFIER||input.LA(1)==65||(input.LA(1)>=132 && input.LA(1)<=133)||(input.LA(1)>=135 && input.LA(1)<=148)||(input.LA(1)>=150 && input.LA(1)<=152)||input.LA(1)==154||(input.LA(1)>=157 && input.LA(1)<=159)||input.LA(1)==170||(input.LA(1)>=177 && input.LA(1)<=178)||input.LA(1)==195||input.LA(1)==202 ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set1075));
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 300, identifier_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "identifier"

    public static class keyword_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "keyword"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1033:1: keyword : ( 'abstract' | 'as' | 'base' | 'bool' | 'break' | 'byte' | 'case' | 'catch' | 'char' | 'checked' | 'class' | 'const' | 'continue' | 'decimal' | 'default' | 'delegate' | 'do' | 'double' | 'else' | 'enum' | 'event' | 'explicit' | 'extern' | 'false' | 'finally' | 'fixed' | 'float' | 'for' | 'foreach' | 'goto' | 'if' | 'implicit' | 'in' | 'int' | 'interface' | 'internal' | 'is' | 'lock' | 'long' | 'namespace' | 'new' | 'null' | 'object' | 'operator' | 'out' | 'override' | 'params' | 'private' | 'protected' | 'public' | 'readonly' | 'ref' | 'return' | 'sbyte' | 'sealed' | 'short' | 'sizeof' | 'stackalloc' | 'static' | 'string' | 'struct' | 'switch' | 'this' | 'throw' | 'true' | 'try' | 'typeof' | 'uint' | 'ulong' | 'unchecked' | 'unsafe' | 'ushort' | 'using' | 'virtual' | 'void' | 'volatile' );
    public final CSharpParser.keyword_return keyword() throws RecognitionException {
        CSharpParser.keyword_return retval = new CSharpParser.keyword_return();
        retval.start = input.LT(1);
        int keyword_StartIndex = input.index();
        Object root_0 = null;

        Token set1076=null;

        Object set1076_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 301) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1033:8: ( 'abstract' | 'as' | 'base' | 'bool' | 'break' | 'byte' | 'case' | 'catch' | 'char' | 'checked' | 'class' | 'const' | 'continue' | 'decimal' | 'default' | 'delegate' | 'do' | 'double' | 'else' | 'enum' | 'event' | 'explicit' | 'extern' | 'false' | 'finally' | 'fixed' | 'float' | 'for' | 'foreach' | 'goto' | 'if' | 'implicit' | 'in' | 'int' | 'interface' | 'internal' | 'is' | 'lock' | 'long' | 'namespace' | 'new' | 'null' | 'object' | 'operator' | 'out' | 'override' | 'params' | 'private' | 'protected' | 'public' | 'readonly' | 'ref' | 'return' | 'sbyte' | 'sealed' | 'short' | 'sizeof' | 'stackalloc' | 'static' | 'string' | 'struct' | 'switch' | 'this' | 'throw' | 'true' | 'try' | 'typeof' | 'uint' | 'ulong' | 'unchecked' | 'unsafe' | 'ushort' | 'using' | 'virtual' | 'void' | 'volatile' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:
            {
            root_0 = (Object)adaptor.nil();

            set1076=(Token)input.LT(1);
            if ( (input.LA(1)>=TRUE && input.LA(1)<=NULL)||(input.LA(1)>=USING && input.LA(1)<=IF)||input.LA(1)==61||input.LA(1)==64||(input.LA(1)>=68 && input.LA(1)<=83)||input.LA(1)==85||(input.LA(1)>=91 && input.LA(1)<=98)||(input.LA(1)>=122 && input.LA(1)<=123)||input.LA(1)==134||input.LA(1)==149||input.LA(1)==153||input.LA(1)==155||(input.LA(1)>=160 && input.LA(1)<=169)||(input.LA(1)>=171 && input.LA(1)<=176)||(input.LA(1)>=179 && input.LA(1)<=182)||(input.LA(1)>=184 && input.LA(1)<=194)||(input.LA(1)>=196 && input.LA(1)<=201) ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set1076));
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 301, keyword_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "keyword"

    public static class also_keyword_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "also_keyword"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1036:1: also_keyword : ( 'add' | 'alias' | 'assembly' | 'module' | 'field' | 'event' | 'method' | 'param' | 'property' | 'type' | 'yield' | 'from' | 'into' | 'join' | 'on' | 'where' | 'orderby' | 'group' | 'by' | 'ascending' | 'descending' | 'equals' | 'select' | 'pragma' | 'let' | 'remove' | 'set' | 'var' | '__arglist' | 'dynamic' );
    public final CSharpParser.also_keyword_return also_keyword() throws RecognitionException {
        CSharpParser.also_keyword_return retval = new CSharpParser.also_keyword_return();
        retval.start = input.LT(1);
        int also_keyword_StartIndex = input.index();
        Object root_0 = null;

        Token set1077=null;

        Object set1077_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 302) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1036:13: ( 'add' | 'alias' | 'assembly' | 'module' | 'field' | 'event' | 'method' | 'param' | 'property' | 'type' | 'yield' | 'from' | 'into' | 'join' | 'on' | 'where' | 'orderby' | 'group' | 'by' | 'ascending' | 'descending' | 'equals' | 'select' | 'pragma' | 'let' | 'remove' | 'set' | 'var' | '__arglist' | 'dynamic' )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:
            {
            root_0 = (Object)adaptor.nil();

            set1077=(Token)input.LT(1);
            if ( input.LA(1)==65||(input.LA(1)>=132 && input.LA(1)<=133)||(input.LA(1)>=135 && input.LA(1)<=152)||input.LA(1)==154||(input.LA(1)>=157 && input.LA(1)<=159)||input.LA(1)==170||(input.LA(1)>=177 && input.LA(1)<=178)||input.LA(1)==195||input.LA(1)==202 ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set1077));
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 302, also_keyword_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "also_keyword"

    public static class literal_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "literal"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1041:1: literal : ( Real_literal | NUMBER | Hex_number | Character_literal | STRINGLITERAL | Verbatim_string_literal | TRUE | FALSE | NULL );
    public final CSharpParser.literal_return literal() throws RecognitionException {
        CSharpParser.literal_return retval = new CSharpParser.literal_return();
        retval.start = input.LT(1);
        int literal_StartIndex = input.index();
        Object root_0 = null;

        Token set1078=null;

        Object set1078_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 303) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1041:8: ( Real_literal | NUMBER | Hex_number | Character_literal | STRINGLITERAL | Verbatim_string_literal | TRUE | FALSE | NULL )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:
            {
            root_0 = (Object)adaptor.nil();

            set1078=(Token)input.LT(1);
            if ( (input.LA(1)>=Real_literal && input.LA(1)<=NULL) ) {
                input.consume();
                if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set1078));
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 303, literal_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "literal"

    public static class assignment_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "assignment_list"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1322:1: assignment_list : ( assignment ';' )+ ;
    public final CSharpParser.assignment_list_return assignment_list() throws RecognitionException {
        CSharpParser.assignment_list_return retval = new CSharpParser.assignment_list_return();
        retval.start = input.LT(1);
        int assignment_list_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal1080=null;
        CSharpParser.assignment_return assignment1079 = null;


        Object char_literal1080_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 304) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1322:16: ( ( assignment ';' )+ )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1323:3: ( assignment ';' )+
            {
            root_0 = (Object)adaptor.nil();

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1323:3: ( assignment ';' )+
            int cnt273=0;
            loop273:
            do {
                int alt273=2;
                int LA273_0 = input.LA(1);

                if ( ((LA273_0>=IDENTIFIER && LA273_0<=NULL)||LA273_0==MINUS||LA273_0==65||LA273_0==68||LA273_0==83||LA273_0==85||LA273_0==88||(LA273_0>=93 && LA273_0<=98)||LA273_0==100||(LA273_0>=102 && LA273_0<=106)||LA273_0==117||(LA273_0>=132 && LA273_0<=133)||(LA273_0>=135 && LA273_0<=148)||(LA273_0>=150 && LA273_0<=152)||LA273_0==154||(LA273_0>=157 && LA273_0<=168)||LA273_0==170||(LA273_0>=177 && LA273_0<=178)||(LA273_0>=195 && LA273_0<=202)) ) {
                    alt273=1;
                }


                switch (alt273) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1323:4: assignment ';'
            	    {
            	    pushFollow(FOLLOW_assignment_in_assignment_list11170);
            	    assignment1079=assignment();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, assignment1079.getTree());
            	    char_literal1080=(Token)match(input,SEMI,FOLLOW_SEMI_in_assignment_list11172); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal1080_tree = (Object)adaptor.create(char_literal1080);
            	    adaptor.addChild(root_0, char_literal1080_tree);
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt273 >= 1 ) break loop273;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(273, input);
                        throw eee;
                }
                cnt273++;
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 304, assignment_list_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "assignment_list"

    public static class field_declarations_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "field_declarations"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1324:1: field_declarations : ( ( attributes )? ( modifiers )? type field_declaration )+ ;
    public final CSharpParser.field_declarations_return field_declarations() throws RecognitionException {
        CSharpParser.field_declarations_return retval = new CSharpParser.field_declarations_return();
        retval.start = input.LT(1);
        int field_declarations_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.attributes_return attributes1081 = null;

        CSharpParser.modifiers_return modifiers1082 = null;

        CSharpParser.type_return type1083 = null;

        CSharpParser.field_declaration_return field_declaration1084 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 305) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1324:19: ( ( ( attributes )? ( modifiers )? type field_declaration )+ )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1325:3: ( ( attributes )? ( modifiers )? type field_declaration )+
            {
            root_0 = (Object)adaptor.nil();

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1325:3: ( ( attributes )? ( modifiers )? type field_declaration )+
            int cnt276=0;
            loop276:
            do {
                int alt276=2;
                int LA276_0 = input.LA(1);

                if ( (LA276_0==IDENTIFIER||(LA276_0>=64 && LA276_0<=65)||(LA276_0>=68 && LA276_0<=80)||LA276_0==82||LA276_0==86||(LA276_0>=132 && LA276_0<=133)||(LA276_0>=135 && LA276_0<=148)||(LA276_0>=150 && LA276_0<=152)||LA276_0==154||(LA276_0>=157 && LA276_0<=168)||LA276_0==170||(LA276_0>=177 && LA276_0<=178)||(LA276_0>=195 && LA276_0<=202)) ) {
                    alt276=1;
                }


                switch (alt276) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1325:4: ( attributes )? ( modifiers )? type field_declaration
            	    {
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1325:4: ( attributes )?
            	    int alt274=2;
            	    int LA274_0 = input.LA(1);

            	    if ( (LA274_0==86) ) {
            	        alt274=1;
            	    }
            	    switch (alt274) {
            	        case 1 :
            	            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1325:4: attributes
            	            {
            	            pushFollow(FOLLOW_attributes_in_field_declarations11184);
            	            attributes1081=attributes();

            	            state._fsp--;
            	            if (state.failed) return retval;
            	            if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes1081.getTree());

            	            }
            	            break;

            	    }

            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1325:18: ( modifiers )?
            	    int alt275=2;
            	    int LA275_0 = input.LA(1);

            	    if ( (LA275_0==64||(LA275_0>=68 && LA275_0<=80)) ) {
            	        alt275=1;
            	    }
            	    switch (alt275) {
            	        case 1 :
            	            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1325:18: modifiers
            	            {
            	            pushFollow(FOLLOW_modifiers_in_field_declarations11189);
            	            modifiers1082=modifiers();

            	            state._fsp--;
            	            if (state.failed) return retval;
            	            if ( state.backtracking==0 ) adaptor.addChild(root_0, modifiers1082.getTree());

            	            }
            	            break;

            	    }

            	    pushFollow(FOLLOW_type_in_field_declarations11194);
            	    type1083=type();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, type1083.getTree());
            	    pushFollow(FOLLOW_field_declaration_in_field_declarations11198);
            	    field_declaration1084=field_declaration();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, field_declaration1084.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt276 >= 1 ) break loop276;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(276, input);
                        throw eee;
                }
                cnt276++;
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 305, field_declarations_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "field_declarations"

    public static class property_declaration_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "property_declaration_list"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1326:1: property_declaration_list : ( ( attributes )? ( modifiers )? type property_declaration )+ ;
    public final CSharpParser.property_declaration_list_return property_declaration_list() throws RecognitionException {
        CSharpParser.property_declaration_list_return retval = new CSharpParser.property_declaration_list_return();
        retval.start = input.LT(1);
        int property_declaration_list_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.attributes_return attributes1085 = null;

        CSharpParser.modifiers_return modifiers1086 = null;

        CSharpParser.type_return type1087 = null;

        CSharpParser.property_declaration_return property_declaration1088 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 306) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1326:26: ( ( ( attributes )? ( modifiers )? type property_declaration )+ )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1327:3: ( ( attributes )? ( modifiers )? type property_declaration )+
            {
            root_0 = (Object)adaptor.nil();

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1327:3: ( ( attributes )? ( modifiers )? type property_declaration )+
            int cnt279=0;
            loop279:
            do {
                int alt279=2;
                int LA279_0 = input.LA(1);

                if ( (LA279_0==IDENTIFIER||(LA279_0>=64 && LA279_0<=65)||(LA279_0>=68 && LA279_0<=80)||LA279_0==82||LA279_0==86||(LA279_0>=132 && LA279_0<=133)||(LA279_0>=135 && LA279_0<=148)||(LA279_0>=150 && LA279_0<=152)||LA279_0==154||(LA279_0>=157 && LA279_0<=168)||LA279_0==170||(LA279_0>=177 && LA279_0<=178)||(LA279_0>=195 && LA279_0<=202)) ) {
                    alt279=1;
                }


                switch (alt279) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1327:4: ( attributes )? ( modifiers )? type property_declaration
            	    {
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1327:4: ( attributes )?
            	    int alt277=2;
            	    int LA277_0 = input.LA(1);

            	    if ( (LA277_0==86) ) {
            	        alt277=1;
            	    }
            	    switch (alt277) {
            	        case 1 :
            	            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1327:4: attributes
            	            {
            	            pushFollow(FOLLOW_attributes_in_property_declaration_list11210);
            	            attributes1085=attributes();

            	            state._fsp--;
            	            if (state.failed) return retval;
            	            if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes1085.getTree());

            	            }
            	            break;

            	    }

            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1327:18: ( modifiers )?
            	    int alt278=2;
            	    int LA278_0 = input.LA(1);

            	    if ( (LA278_0==64||(LA278_0>=68 && LA278_0<=80)) ) {
            	        alt278=1;
            	    }
            	    switch (alt278) {
            	        case 1 :
            	            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1327:18: modifiers
            	            {
            	            pushFollow(FOLLOW_modifiers_in_property_declaration_list11215);
            	            modifiers1086=modifiers();

            	            state._fsp--;
            	            if (state.failed) return retval;
            	            if ( state.backtracking==0 ) adaptor.addChild(root_0, modifiers1086.getTree());

            	            }
            	            break;

            	    }

            	    pushFollow(FOLLOW_type_in_property_declaration_list11220);
            	    type1087=type();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, type1087.getTree());
            	    pushFollow(FOLLOW_property_declaration_in_property_declaration_list11224);
            	    property_declaration1088=property_declaration();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, property_declaration1088.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt279 >= 1 ) break loop279;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(279, input);
                        throw eee;
                }
                cnt279++;
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 306, property_declaration_list_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "property_declaration_list"

    public static class constant_declarations_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "constant_declarations"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1328:1: constant_declarations : ( constant_declaration )+ ;
    public final CSharpParser.constant_declarations_return constant_declarations() throws RecognitionException {
        CSharpParser.constant_declarations_return retval = new CSharpParser.constant_declarations_return();
        retval.start = input.LT(1);
        int constant_declarations_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.constant_declaration_return constant_declaration1089 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 307) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1328:22: ( ( constant_declaration )+ )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1329:3: ( constant_declaration )+
            {
            root_0 = (Object)adaptor.nil();

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1329:3: ( constant_declaration )+
            int cnt280=0;
            loop280:
            do {
                int alt280=2;
                int LA280_0 = input.LA(1);

                if ( (LA280_0==81) ) {
                    alt280=1;
                }


                switch (alt280) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1329:3: constant_declaration
            	    {
            	    pushFollow(FOLLOW_constant_declaration_in_constant_declarations11235);
            	    constant_declaration1089=constant_declaration();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, constant_declaration1089.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt280 >= 1 ) break loop280;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(280, input);
                        throw eee;
                }
                cnt280++;
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 307, constant_declarations_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "constant_declarations"

    public static class literals_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "literals"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1330:1: literals : ( literal )+ ;
    public final CSharpParser.literals_return literals() throws RecognitionException {
        CSharpParser.literals_return retval = new CSharpParser.literals_return();
        retval.start = input.LT(1);
        int literals_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.literal_return literal1090 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 308) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1330:9: ( ( literal )+ )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1331:3: ( literal )+
            {
            root_0 = (Object)adaptor.nil();

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1331:3: ( literal )+
            int cnt281=0;
            loop281:
            do {
                int alt281=2;
                int LA281_0 = input.LA(1);

                if ( ((LA281_0>=Real_literal && LA281_0<=NULL)) ) {
                    alt281=1;
                }


                switch (alt281) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1331:3: literal
            	    {
            	    pushFollow(FOLLOW_literal_in_literals11244);
            	    literal1090=literal();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, literal1090.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt281 >= 1 ) break loop281;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(281, input);
                        throw eee;
                }
                cnt281++;
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 308, literals_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "literals"

    public static class delegate_declaration_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "delegate_declaration_list"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1332:1: delegate_declaration_list : ( ( attributes )? ( modifiers )? delegate_declaration )+ ;
    public final CSharpParser.delegate_declaration_list_return delegate_declaration_list() throws RecognitionException {
        CSharpParser.delegate_declaration_list_return retval = new CSharpParser.delegate_declaration_list_return();
        retval.start = input.LT(1);
        int delegate_declaration_list_StartIndex = input.index();
        Object root_0 = null;

        CSharpParser.attributes_return attributes1091 = null;

        CSharpParser.modifiers_return modifiers1092 = null;

        CSharpParser.delegate_declaration_return delegate_declaration1093 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 309) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1332:26: ( ( ( attributes )? ( modifiers )? delegate_declaration )+ )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1333:3: ( ( attributes )? ( modifiers )? delegate_declaration )+
            {
            root_0 = (Object)adaptor.nil();

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1333:3: ( ( attributes )? ( modifiers )? delegate_declaration )+
            int cnt284=0;
            loop284:
            do {
                int alt284=2;
                int LA284_0 = input.LA(1);

                if ( (LA284_0==64||(LA284_0>=68 && LA284_0<=80)||LA284_0==86||LA284_0==97) ) {
                    alt284=1;
                }


                switch (alt284) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1333:4: ( attributes )? ( modifiers )? delegate_declaration
            	    {
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1333:4: ( attributes )?
            	    int alt282=2;
            	    int LA282_0 = input.LA(1);

            	    if ( (LA282_0==86) ) {
            	        alt282=1;
            	    }
            	    switch (alt282) {
            	        case 1 :
            	            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1333:4: attributes
            	            {
            	            pushFollow(FOLLOW_attributes_in_delegate_declaration_list11255);
            	            attributes1091=attributes();

            	            state._fsp--;
            	            if (state.failed) return retval;
            	            if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes1091.getTree());

            	            }
            	            break;

            	    }

            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1333:18: ( modifiers )?
            	    int alt283=2;
            	    int LA283_0 = input.LA(1);

            	    if ( (LA283_0==64||(LA283_0>=68 && LA283_0<=80)) ) {
            	        alt283=1;
            	    }
            	    switch (alt283) {
            	        case 1 :
            	            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1333:18: modifiers
            	            {
            	            pushFollow(FOLLOW_modifiers_in_delegate_declaration_list11260);
            	            modifiers1092=modifiers();

            	            state._fsp--;
            	            if (state.failed) return retval;
            	            if ( state.backtracking==0 ) adaptor.addChild(root_0, modifiers1092.getTree());

            	            }
            	            break;

            	    }

            	    pushFollow(FOLLOW_delegate_declaration_in_delegate_declaration_list11265);
            	    delegate_declaration1093=delegate_declaration();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, delegate_declaration1093.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt284 >= 1 ) break loop284;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(284, input);
                        throw eee;
                }
                cnt284++;
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 309, delegate_declaration_list_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "delegate_declaration_list"

    public static class local_variable_declaration_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "local_variable_declaration_list"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1334:1: local_variable_declaration_list : ( local_variable_declaration ';' )+ ;
    public final CSharpParser.local_variable_declaration_list_return local_variable_declaration_list() throws RecognitionException {
        CSharpParser.local_variable_declaration_list_return retval = new CSharpParser.local_variable_declaration_list_return();
        retval.start = input.LT(1);
        int local_variable_declaration_list_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal1095=null;
        CSharpParser.local_variable_declaration_return local_variable_declaration1094 = null;


        Object char_literal1095_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 310) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1334:32: ( ( local_variable_declaration ';' )+ )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1335:3: ( local_variable_declaration ';' )+
            {
            root_0 = (Object)adaptor.nil();

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1335:3: ( local_variable_declaration ';' )+
            int cnt285=0;
            loop285:
            do {
                int alt285=2;
                int LA285_0 = input.LA(1);

                if ( (LA285_0==IDENTIFIER||LA285_0==65||LA285_0==82||(LA285_0>=132 && LA285_0<=133)||(LA285_0>=135 && LA285_0<=148)||(LA285_0>=150 && LA285_0<=152)||LA285_0==154||(LA285_0>=157 && LA285_0<=168)||LA285_0==170||(LA285_0>=177 && LA285_0<=178)||(LA285_0>=195 && LA285_0<=202)) ) {
                    alt285=1;
                }


                switch (alt285) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1335:4: local_variable_declaration ';'
            	    {
            	    pushFollow(FOLLOW_local_variable_declaration_in_local_variable_declaration_list11277);
            	    local_variable_declaration1094=local_variable_declaration();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, local_variable_declaration1094.getTree());
            	    char_literal1095=(Token)match(input,SEMI,FOLLOW_SEMI_in_local_variable_declaration_list11279); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal1095_tree = (Object)adaptor.create(char_literal1095);
            	    adaptor.addChild(root_0, char_literal1095_tree);
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt285 >= 1 ) break loop285;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(285, input);
                        throw eee;
                }
                cnt285++;
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 310, local_variable_declaration_list_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "local_variable_declaration_list"

    public static class local_variable_initializer_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "local_variable_initializer_list"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1336:1: local_variable_initializer_list : ( local_variable_initializer ';' )+ ;
    public final CSharpParser.local_variable_initializer_list_return local_variable_initializer_list() throws RecognitionException {
        CSharpParser.local_variable_initializer_list_return retval = new CSharpParser.local_variable_initializer_list_return();
        retval.start = input.LT(1);
        int local_variable_initializer_list_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal1097=null;
        CSharpParser.local_variable_initializer_return local_variable_initializer1096 = null;


        Object char_literal1097_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 311) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1336:32: ( ( local_variable_initializer ';' )+ )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1337:3: ( local_variable_initializer ';' )+
            {
            root_0 = (Object)adaptor.nil();

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1337:3: ( local_variable_initializer ';' )+
            int cnt286=0;
            loop286:
            do {
                int alt286=2;
                int LA286_0 = input.LA(1);

                if ( ((LA286_0>=IDENTIFIER && LA286_0<=NULL)||LA286_0==MINUS||LA286_0==62||LA286_0==65||LA286_0==68||LA286_0==83||LA286_0==85||LA286_0==88||(LA286_0>=93 && LA286_0<=98)||LA286_0==100||(LA286_0>=102 && LA286_0<=106)||LA286_0==117||(LA286_0>=132 && LA286_0<=133)||(LA286_0>=135 && LA286_0<=148)||(LA286_0>=150 && LA286_0<=152)||LA286_0==154||(LA286_0>=157 && LA286_0<=168)||LA286_0==170||(LA286_0>=177 && LA286_0<=179)||(LA286_0>=195 && LA286_0<=202)) ) {
                    alt286=1;
                }


                switch (alt286) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1337:4: local_variable_initializer ';'
            	    {
            	    pushFollow(FOLLOW_local_variable_initializer_in_local_variable_initializer_list11291);
            	    local_variable_initializer1096=local_variable_initializer();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, local_variable_initializer1096.getTree());
            	    char_literal1097=(Token)match(input,SEMI,FOLLOW_SEMI_in_local_variable_initializer_list11293); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal1097_tree = (Object)adaptor.create(char_literal1097);
            	    adaptor.addChild(root_0, char_literal1097_tree);
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt286 >= 1 ) break loop286;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(286, input);
                        throw eee;
                }
                cnt286++;
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 311, local_variable_initializer_list_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "local_variable_initializer_list"

    public static class expression_list_test_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "expression_list_test"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1338:1: expression_list_test : ( expression ';' )+ ;
    public final CSharpParser.expression_list_test_return expression_list_test() throws RecognitionException {
        CSharpParser.expression_list_test_return retval = new CSharpParser.expression_list_test_return();
        retval.start = input.LT(1);
        int expression_list_test_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal1099=null;
        CSharpParser.expression_return expression1098 = null;


        Object char_literal1099_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 312) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1338:21: ( ( expression ';' )+ )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1339:3: ( expression ';' )+
            {
            root_0 = (Object)adaptor.nil();

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1339:3: ( expression ';' )+
            int cnt287=0;
            loop287:
            do {
                int alt287=2;
                int LA287_0 = input.LA(1);

                if ( ((LA287_0>=IDENTIFIER && LA287_0<=NULL)||LA287_0==MINUS||LA287_0==65||LA287_0==68||LA287_0==83||LA287_0==85||LA287_0==88||(LA287_0>=93 && LA287_0<=98)||LA287_0==100||(LA287_0>=102 && LA287_0<=106)||LA287_0==117||(LA287_0>=132 && LA287_0<=133)||(LA287_0>=135 && LA287_0<=148)||(LA287_0>=150 && LA287_0<=152)||LA287_0==154||(LA287_0>=157 && LA287_0<=168)||LA287_0==170||(LA287_0>=177 && LA287_0<=178)||(LA287_0>=195 && LA287_0<=202)) ) {
                    alt287=1;
                }


                switch (alt287) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1339:4: expression ';'
            	    {
            	    pushFollow(FOLLOW_expression_in_expression_list_test11305);
            	    expression1098=expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, expression1098.getTree());
            	    char_literal1099=(Token)match(input,SEMI,FOLLOW_SEMI_in_expression_list_test11307); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal1099_tree = (Object)adaptor.create(char_literal1099);
            	    adaptor.addChild(root_0, char_literal1099_tree);
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt287 >= 1 ) break loop287;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(287, input);
                        throw eee;
                }
                cnt287++;
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 312, expression_list_test_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "expression_list_test"

    public static class unary_expression_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "unary_expression_list"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1340:1: unary_expression_list : ( unary_expression ';' )+ ;
    public final CSharpParser.unary_expression_list_return unary_expression_list() throws RecognitionException {
        CSharpParser.unary_expression_list_return retval = new CSharpParser.unary_expression_list_return();
        retval.start = input.LT(1);
        int unary_expression_list_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal1101=null;
        CSharpParser.unary_expression_return unary_expression1100 = null;


        Object char_literal1101_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 313) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1340:22: ( ( unary_expression ';' )+ )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1341:3: ( unary_expression ';' )+
            {
            root_0 = (Object)adaptor.nil();

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1341:3: ( unary_expression ';' )+
            int cnt288=0;
            loop288:
            do {
                int alt288=2;
                int LA288_0 = input.LA(1);

                if ( ((LA288_0>=IDENTIFIER && LA288_0<=NULL)||LA288_0==MINUS||LA288_0==65||LA288_0==68||LA288_0==83||LA288_0==85||LA288_0==88||(LA288_0>=93 && LA288_0<=98)||LA288_0==100||(LA288_0>=102 && LA288_0<=106)||LA288_0==117||(LA288_0>=132 && LA288_0<=133)||(LA288_0>=135 && LA288_0<=148)||(LA288_0>=150 && LA288_0<=152)||LA288_0==154||(LA288_0>=157 && LA288_0<=168)||LA288_0==170||(LA288_0>=177 && LA288_0<=178)||(LA288_0>=195 && LA288_0<=202)) ) {
                    alt288=1;
                }


                switch (alt288) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1341:4: unary_expression ';'
            	    {
            	    pushFollow(FOLLOW_unary_expression_in_unary_expression_list11319);
            	    unary_expression1100=unary_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression1100.getTree());
            	    char_literal1101=(Token)match(input,SEMI,FOLLOW_SEMI_in_unary_expression_list11321); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal1101_tree = (Object)adaptor.create(char_literal1101);
            	    adaptor.addChild(root_0, char_literal1101_tree);
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt288 >= 1 ) break loop288;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(288, input);
                        throw eee;
                }
                cnt288++;
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 313, unary_expression_list_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "unary_expression_list"

    public static class invocation_expression_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "invocation_expression_list"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1342:1: invocation_expression_list : ( invocation_expression ';' )+ ;
    public final CSharpParser.invocation_expression_list_return invocation_expression_list() throws RecognitionException {
        CSharpParser.invocation_expression_list_return retval = new CSharpParser.invocation_expression_list_return();
        retval.start = input.LT(1);
        int invocation_expression_list_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal1103=null;
        CSharpParser.invocation_expression_return invocation_expression1102 = null;


        Object char_literal1103_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 314) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1342:27: ( ( invocation_expression ';' )+ )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1343:3: ( invocation_expression ';' )+
            {
            root_0 = (Object)adaptor.nil();

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1343:3: ( invocation_expression ';' )+
            int cnt289=0;
            loop289:
            do {
                int alt289=2;
                int LA289_0 = input.LA(1);

                if ( (LA289_0==IDENTIFIER||LA289_0==65||LA289_0==83||LA289_0==85||LA289_0==98||(LA289_0>=132 && LA289_0<=133)||(LA289_0>=135 && LA289_0<=148)||(LA289_0>=150 && LA289_0<=152)||LA289_0==154||(LA289_0>=157 && LA289_0<=168)||LA289_0==170||(LA289_0>=177 && LA289_0<=178)||(LA289_0>=195 && LA289_0<=202)) ) {
                    alt289=1;
                }


                switch (alt289) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1343:4: invocation_expression ';'
            	    {
            	    pushFollow(FOLLOW_invocation_expression_in_invocation_expression_list11333);
            	    invocation_expression1102=invocation_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, invocation_expression1102.getTree());
            	    char_literal1103=(Token)match(input,SEMI,FOLLOW_SEMI_in_invocation_expression_list11335); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal1103_tree = (Object)adaptor.create(char_literal1103);
            	    adaptor.addChild(root_0, char_literal1103_tree);
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt289 >= 1 ) break loop289;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(289, input);
                        throw eee;
                }
                cnt289++;
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 314, invocation_expression_list_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "invocation_expression_list"

    public static class primary_expression_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "primary_expression_list"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1344:1: primary_expression_list : ( primary_expression ';' )+ ;
    public final CSharpParser.primary_expression_list_return primary_expression_list() throws RecognitionException {
        CSharpParser.primary_expression_list_return retval = new CSharpParser.primary_expression_list_return();
        retval.start = input.LT(1);
        int primary_expression_list_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal1105=null;
        CSharpParser.primary_expression_return primary_expression1104 = null;


        Object char_literal1105_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 315) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1344:24: ( ( primary_expression ';' )+ )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1345:3: ( primary_expression ';' )+
            {
            root_0 = (Object)adaptor.nil();

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1345:3: ( primary_expression ';' )+
            int cnt290=0;
            loop290:
            do {
                int alt290=2;
                int LA290_0 = input.LA(1);

                if ( ((LA290_0>=IDENTIFIER && LA290_0<=NULL)||LA290_0==65||LA290_0==68||LA290_0==83||LA290_0==85||LA290_0==88||(LA290_0>=93 && LA290_0<=98)||(LA290_0>=132 && LA290_0<=133)||(LA290_0>=135 && LA290_0<=148)||(LA290_0>=150 && LA290_0<=152)||LA290_0==154||(LA290_0>=157 && LA290_0<=168)||LA290_0==170||(LA290_0>=177 && LA290_0<=178)||(LA290_0>=195 && LA290_0<=202)) ) {
                    alt290=1;
                }


                switch (alt290) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1345:4: primary_expression ';'
            	    {
            	    pushFollow(FOLLOW_primary_expression_in_primary_expression_list11347);
            	    primary_expression1104=primary_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, primary_expression1104.getTree());
            	    char_literal1105=(Token)match(input,SEMI,FOLLOW_SEMI_in_primary_expression_list11349); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal1105_tree = (Object)adaptor.create(char_literal1105);
            	    adaptor.addChild(root_0, char_literal1105_tree);
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt290 >= 1 ) break loop290;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(290, input);
                        throw eee;
                }
                cnt290++;
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 315, primary_expression_list_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "primary_expression_list"

    public static class non_assignment_expression_list_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "non_assignment_expression_list"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1346:1: non_assignment_expression_list : ( non_assignment_expression ';' )+ ;
    public final CSharpParser.non_assignment_expression_list_return non_assignment_expression_list() throws RecognitionException {
        CSharpParser.non_assignment_expression_list_return retval = new CSharpParser.non_assignment_expression_list_return();
        retval.start = input.LT(1);
        int non_assignment_expression_list_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal1107=null;
        CSharpParser.non_assignment_expression_return non_assignment_expression1106 = null;


        Object char_literal1107_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 316) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1346:31: ( ( non_assignment_expression ';' )+ )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1347:3: ( non_assignment_expression ';' )+
            {
            root_0 = (Object)adaptor.nil();

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1347:3: ( non_assignment_expression ';' )+
            int cnt291=0;
            loop291:
            do {
                int alt291=2;
                int LA291_0 = input.LA(1);

                if ( ((LA291_0>=IDENTIFIER && LA291_0<=NULL)||LA291_0==MINUS||LA291_0==65||LA291_0==68||LA291_0==83||LA291_0==85||LA291_0==88||(LA291_0>=93 && LA291_0<=98)||LA291_0==100||(LA291_0>=102 && LA291_0<=106)||LA291_0==117||(LA291_0>=132 && LA291_0<=133)||(LA291_0>=135 && LA291_0<=148)||(LA291_0>=150 && LA291_0<=152)||LA291_0==154||(LA291_0>=157 && LA291_0<=168)||LA291_0==170||(LA291_0>=177 && LA291_0<=178)||(LA291_0>=195 && LA291_0<=202)) ) {
                    alt291=1;
                }


                switch (alt291) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1347:4: non_assignment_expression ';'
            	    {
            	    pushFollow(FOLLOW_non_assignment_expression_in_non_assignment_expression_list11361);
            	    non_assignment_expression1106=non_assignment_expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, non_assignment_expression1106.getTree());
            	    char_literal1107=(Token)match(input,SEMI,FOLLOW_SEMI_in_non_assignment_expression_list11363); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal1107_tree = (Object)adaptor.create(char_literal1107);
            	    adaptor.addChild(root_0, char_literal1107_tree);
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt291 >= 1 ) break loop291;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(291, input);
                        throw eee;
                }
                cnt291++;
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 316, non_assignment_expression_list_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "non_assignment_expression_list"

    public static class method_declarations_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "method_declarations"
    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1348:1: method_declarations : ( ( modifiers )? ( 'void' | type ) method_declaration )+ ;
    public final CSharpParser.method_declarations_return method_declarations() throws RecognitionException {
        CSharpParser.method_declarations_return retval = new CSharpParser.method_declarations_return();
        retval.start = input.LT(1);
        int method_declarations_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal1109=null;
        CSharpParser.modifiers_return modifiers1108 = null;

        CSharpParser.type_return type1110 = null;

        CSharpParser.method_declaration_return method_declaration1111 = null;


        Object string_literal1109_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 317) ) { return retval; }
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1348:20: ( ( ( modifiers )? ( 'void' | type ) method_declaration )+ )
            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1349:3: ( ( modifiers )? ( 'void' | type ) method_declaration )+
            {
            root_0 = (Object)adaptor.nil();

            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1349:3: ( ( modifiers )? ( 'void' | type ) method_declaration )+
            int cnt294=0;
            loop294:
            do {
                int alt294=2;
                int LA294_0 = input.LA(1);

                if ( (LA294_0==IDENTIFIER||(LA294_0>=64 && LA294_0<=65)||(LA294_0>=68 && LA294_0<=80)||LA294_0==82||(LA294_0>=132 && LA294_0<=133)||(LA294_0>=135 && LA294_0<=148)||(LA294_0>=150 && LA294_0<=152)||LA294_0==154||(LA294_0>=157 && LA294_0<=168)||LA294_0==170||(LA294_0>=177 && LA294_0<=178)||(LA294_0>=195 && LA294_0<=202)) ) {
                    alt294=1;
                }


                switch (alt294) {
            	case 1 :
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1349:4: ( modifiers )? ( 'void' | type ) method_declaration
            	    {
            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1349:4: ( modifiers )?
            	    int alt292=2;
            	    int LA292_0 = input.LA(1);

            	    if ( (LA292_0==64||(LA292_0>=68 && LA292_0<=80)) ) {
            	        alt292=1;
            	    }
            	    switch (alt292) {
            	        case 1 :
            	            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1349:4: modifiers
            	            {
            	            pushFollow(FOLLOW_modifiers_in_method_declarations11375);
            	            modifiers1108=modifiers();

            	            state._fsp--;
            	            if (state.failed) return retval;
            	            if ( state.backtracking==0 ) adaptor.addChild(root_0, modifiers1108.getTree());

            	            }
            	            break;

            	    }

            	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1349:15: ( 'void' | type )
            	    int alt293=2;
            	    int LA293_0 = input.LA(1);

            	    if ( (LA293_0==82) ) {
            	        int LA293_1 = input.LA(2);

            	        if ( (LA293_1==100) ) {
            	            alt293=2;
            	        }
            	        else if ( ((LA293_1>=IDENTIFIER && LA293_1<=NULL)||LA293_1==65||(LA293_1>=132 && LA293_1<=133)||(LA293_1>=135 && LA293_1<=148)||(LA293_1>=150 && LA293_1<=152)||LA293_1==154||(LA293_1>=157 && LA293_1<=168)||LA293_1==170||(LA293_1>=177 && LA293_1<=178)||(LA293_1>=195 && LA293_1<=202)) ) {
            	            alt293=1;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return retval;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 293, 1, input);

            	            throw nvae;
            	        }
            	    }
            	    else if ( (LA293_0==IDENTIFIER||LA293_0==65||(LA293_0>=132 && LA293_0<=133)||(LA293_0>=135 && LA293_0<=148)||(LA293_0>=150 && LA293_0<=152)||LA293_0==154||(LA293_0>=157 && LA293_0<=168)||LA293_0==170||(LA293_0>=177 && LA293_0<=178)||(LA293_0>=195 && LA293_0<=202)) ) {
            	        alt293=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return retval;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 293, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt293) {
            	        case 1 :
            	            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1349:16: 'void'
            	            {
            	            string_literal1109=(Token)match(input,82,FOLLOW_82_in_method_declarations11379); if (state.failed) return retval;
            	            if ( state.backtracking==0 ) {
            	            string_literal1109_tree = (Object)adaptor.create(string_literal1109);
            	            adaptor.addChild(root_0, string_literal1109_tree);
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1349:25: type
            	            {
            	            pushFollow(FOLLOW_type_in_method_declarations11383);
            	            type1110=type();

            	            state._fsp--;
            	            if (state.failed) return retval;
            	            if ( state.backtracking==0 ) adaptor.addChild(root_0, type1110.getTree());

            	            }
            	            break;

            	    }

            	    pushFollow(FOLLOW_method_declaration_in_method_declarations11386);
            	    method_declaration1111=method_declaration();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, method_declaration1111.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt294 >= 1 ) break loop294;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(294, input);
                        throw eee;
                }
                cnt294++;
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 317, method_declarations_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "method_declarations"

    // $ANTLR start synpred1_cs
    public final void synpred1_cs_fragment() throws RecognitionException {   
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:60:3: ( 'partial' )
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:60:4: 'partial'
        {
        match(input,67,FOLLOW_67_in_synpred1_cs287); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred1_cs

    // $ANTLR start synpred2_cs
    public final void synpred2_cs_fragment() throws RecognitionException {   
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:91:12: ( member_name '(' )
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:91:13: member_name '('
        {
        pushFollow(FOLLOW_member_name_in_synpred2_cs596);
        member_name();

        state._fsp--;
        if (state.failed) return ;
        match(input,88,FOLLOW_88_in_synpred2_cs600); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred2_cs

    // $ANTLR start synpred3_cs
    public final void synpred3_cs_fragment() throws RecognitionException {   
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:92:10: ( member_name '{' )
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:92:11: member_name '{'
        {
        pushFollow(FOLLOW_member_name_in_synpred3_cs617);
        member_name();

        state._fsp--;
        if (state.failed) return ;
        match(input,62,FOLLOW_62_in_synpred3_cs621); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred3_cs

    // $ANTLR start synpred4_cs
    public final void synpred4_cs_fragment() throws RecognitionException {   
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:93:10: ( member_name '.' 'this' )
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:93:11: member_name '.' 'this'
        {
        pushFollow(FOLLOW_member_name_in_synpred4_cs638);
        member_name();

        state._fsp--;
        if (state.failed) return ;
        match(input,DOT,FOLLOW_DOT_in_synpred4_cs642); if (state.failed) return ;
        match(input,83,FOLLOW_83_in_synpred4_cs646); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred4_cs

    // $ANTLR start synpred5_cs
    public final void synpred5_cs_fragment() throws RecognitionException {   
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:111:3: ( 'this' brackets )
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:111:4: 'this' brackets
        {
        match(input,83,FOLLOW_83_in_synpred5_cs788); if (state.failed) return ;
        pushFollow(FOLLOW_brackets_in_synpred5_cs793);
        brackets();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred5_cs

    // $ANTLR start synpred6_cs
    public final void synpred6_cs_fragment() throws RecognitionException {   
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:112:5: ( 'base' brackets )
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:112:6: 'base' brackets
        {
        match(input,85,FOLLOW_85_in_synpred6_cs814); if (state.failed) return ;
        pushFollow(FOLLOW_brackets_in_synpred6_cs818);
        brackets();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred6_cs

    // $ANTLR start synpred7_cs
    public final void synpred7_cs_fragment() throws RecognitionException {   
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:114:15: ( object_creation_expression ( '.' | '->' | '[' ) )
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:114:16: object_creation_expression ( '.' | '->' | '[' )
        {
        pushFollow(FOLLOW_object_creation_expression_in_synpred7_cs856);
        object_creation_expression();

        state._fsp--;
        if (state.failed) return ;
        if ( (input.LA(1)>=DOT && input.LA(1)<=PTR)||input.LA(1)==86 ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred7_cs

    // $ANTLR start synpred8_cs
    public final void synpred8_cs_fragment() throws RecognitionException {   
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:118:11: ( delegate_creation_expression )
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:118:12: delegate_creation_expression
        {
        pushFollow(FOLLOW_delegate_creation_expression_in_synpred8_cs923);
        delegate_creation_expression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred8_cs

    // $ANTLR start synpred9_cs
    public final void synpred9_cs_fragment() throws RecognitionException {   
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:130:5: ( identifier '<' )
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:130:6: identifier '<'
        {
        pushFollow(FOLLOW_identifier_in_synpred9_cs1083);
        identifier();

        state._fsp--;
        if (state.failed) return ;
        match(input,99,FOLLOW_99_in_synpred9_cs1088); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred9_cs

    // $ANTLR start synpred10_cs
    public final void synpred10_cs_fragment() throws RecognitionException {   
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:168:6: ( '(' type ')' )
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:168:7: '(' type ')'
        {
        match(input,88,FOLLOW_88_in_synpred10_cs1366); if (state.failed) return ;
        pushFollow(FOLLOW_type_in_synpred10_cs1370);
        type();

        state._fsp--;
        if (state.failed) return ;
        match(input,RPAREN,FOLLOW_RPAREN_in_synpred10_cs1374); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred10_cs

    // $ANTLR start synpred11_cs
    public final void synpred11_cs_fragment() throws RecognitionException {   
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:196:3: ( array_creation_expression )
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:196:4: array_creation_expression
        {
        pushFollow(FOLLOW_array_creation_expression_in_synpred11_cs1664);
        array_creation_expression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred11_cs

    // $ANTLR start synpred12_cs
    public final void synpred12_cs_fragment() throws RecognitionException {   
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:205:16: ( arguments ( '[' | '.' | '->' ) )
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:205:17: arguments ( '[' | '.' | '->' )
        {
        pushFollow(FOLLOW_arguments_in_synpred12_cs1764);
        arguments();

        state._fsp--;
        if (state.failed) return ;
        if ( (input.LA(1)>=DOT && input.LA(1)<=PTR)||input.LA(1)==86 ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred12_cs

    // $ANTLR start synpred13_cs
    public final void synpred13_cs_fragment() throws RecognitionException {   
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:276:21: ( unbound_type_name )
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:276:22: unbound_type_name
        {
        pushFollow(FOLLOW_unbound_type_name_in_synpred13_cs2363);
        unbound_type_name();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred13_cs

    // $ANTLR start synpred14_cs
    public final void synpred14_cs_fragment() throws RecognitionException {   
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:286:7: ( generic_dimension_specifier '.' )
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:286:8: generic_dimension_specifier '.'
        {
        pushFollow(FOLLOW_generic_dimension_specifier_in_synpred14_cs2436);
        generic_dimension_specifier();

        state._fsp--;
        if (state.failed) return ;
        match(input,DOT,FOLLOW_DOT_in_synpred14_cs2440); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred14_cs

    // $ANTLR start synpred15_cs
    public final void synpred15_cs_fragment() throws RecognitionException {   
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:309:3: ( identifier '<' )
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:309:4: identifier '<'
        {
        pushFollow(FOLLOW_identifier_in_synpred15_cs2585);
        identifier();

        state._fsp--;
        if (state.failed) return ;
        match(input,99,FOLLOW_99_in_synpred15_cs2589); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred15_cs

    // $ANTLR start synpred16_cs
    public final void synpred16_cs_fragment() throws RecognitionException {   
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:317:5: ( identifier '<' )
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:317:6: identifier '<'
        {
        pushFollow(FOLLOW_identifier_in_synpred16_cs2641);
        identifier();

        state._fsp--;
        if (state.failed) return ;
        match(input,99,FOLLOW_99_in_synpred16_cs2646); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred16_cs

    // $ANTLR start synpred17_cs
    public final void synpred17_cs_fragment() throws RecognitionException {   
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:334:5: ( ( predefined_type | type_name ) rank_specifiers )
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:334:6: ( predefined_type | type_name ) rank_specifiers
        {
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:334:6: ( predefined_type | type_name )
        int alt295=2;
        int LA295_0 = input.LA(1);

        if ( ((LA295_0>=160 && LA295_0<=168)||(LA295_0>=196 && LA295_0<=201)) ) {
            alt295=1;
        }
        else if ( (LA295_0==IDENTIFIER||LA295_0==65||(LA295_0>=132 && LA295_0<=133)||(LA295_0>=135 && LA295_0<=148)||(LA295_0>=150 && LA295_0<=152)||LA295_0==154||(LA295_0>=157 && LA295_0<=159)||LA295_0==170||(LA295_0>=177 && LA295_0<=178)||LA295_0==195||LA295_0==202) ) {
            alt295=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 295, 0, input);

            throw nvae;
        }
        switch (alt295) {
            case 1 :
                // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:334:7: predefined_type
                {
                pushFollow(FOLLOW_predefined_type_in_synpred17_cs2747);
                predefined_type();

                state._fsp--;
                if (state.failed) return ;

                }
                break;
            case 2 :
                // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:334:25: type_name
                {
                pushFollow(FOLLOW_type_name_in_synpred17_cs2751);
                type_name();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }

        pushFollow(FOLLOW_rank_specifiers_in_synpred17_cs2755);
        rank_specifiers();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred17_cs

    // $ANTLR start synpred18_cs
    public final void synpred18_cs_fragment() throws RecognitionException {   
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:335:5: ( ( predefined_type | type_name ) ( ( '*' )+ | '?' ) )
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:335:6: ( predefined_type | type_name ) ( ( '*' )+ | '?' )
        {
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:335:6: ( predefined_type | type_name )
        int alt296=2;
        int LA296_0 = input.LA(1);

        if ( ((LA296_0>=160 && LA296_0<=168)||(LA296_0>=196 && LA296_0<=201)) ) {
            alt296=1;
        }
        else if ( (LA296_0==IDENTIFIER||LA296_0==65||(LA296_0>=132 && LA296_0<=133)||(LA296_0>=135 && LA296_0<=148)||(LA296_0>=150 && LA296_0<=152)||LA296_0==154||(LA296_0>=157 && LA296_0<=159)||LA296_0==170||(LA296_0>=177 && LA296_0<=178)||LA296_0==195||LA296_0==202) ) {
            alt296=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 296, 0, input);

            throw nvae;
        }
        switch (alt296) {
            case 1 :
                // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:335:7: predefined_type
                {
                pushFollow(FOLLOW_predefined_type_in_synpred18_cs2783);
                predefined_type();

                state._fsp--;
                if (state.failed) return ;

                }
                break;
            case 2 :
                // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:335:25: type_name
                {
                pushFollow(FOLLOW_type_name_in_synpred18_cs2787);
                type_name();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }

        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:335:37: ( ( '*' )+ | '?' )
        int alt298=2;
        int LA298_0 = input.LA(1);

        if ( (LA298_0==100) ) {
            alt298=1;
        }
        else if ( (LA298_0==101) ) {
            alt298=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 298, 0, input);

            throw nvae;
        }
        switch (alt298) {
            case 1 :
                // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:335:38: ( '*' )+
                {
                // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:335:38: ( '*' )+
                int cnt297=0;
                loop297:
                do {
                    int alt297=2;
                    int LA297_0 = input.LA(1);

                    if ( (LA297_0==100) ) {
                        alt297=1;
                    }


                    switch (alt297) {
                	case 1 :
                	    // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:335:38: '*'
                	    {
                	    match(input,100,FOLLOW_100_in_synpred18_cs2792); if (state.failed) return ;

                	    }
                	    break;

                	default :
                	    if ( cnt297 >= 1 ) break loop297;
                	    if (state.backtracking>0) {state.failed=true; return ;}
                            EarlyExitException eee =
                                new EarlyExitException(297, input);
                            throw eee;
                    }
                    cnt297++;
                } while (true);


                }
                break;
            case 2 :
                // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:335:45: '?'
                {
                match(input,101,FOLLOW_101_in_synpred18_cs2797); if (state.failed) return ;

                }
                break;

        }


        }
    }
    // $ANTLR end synpred18_cs

    // $ANTLR start synpred19_cs
    public final void synpred19_cs_fragment() throws RecognitionException {   
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:371:3: ( unary_expression assignment_operator )
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:371:4: unary_expression assignment_operator
        {
        pushFollow(FOLLOW_unary_expression_in_synpred19_cs3002);
        unary_expression();

        state._fsp--;
        if (state.failed) return ;
        pushFollow(FOLLOW_assignment_operator_in_synpred19_cs3006);
        assignment_operator();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred19_cs

    // $ANTLR start synpred20_cs
    public final void synpred20_cs_fragment() throws RecognitionException {   
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:380:3: ( cast_expression )
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:380:4: cast_expression
        {
        pushFollow(FOLLOW_cast_expression_in_synpred20_cs3071);
        cast_expression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred20_cs

    // $ANTLR start synpred21_cs
    public final void synpred21_cs_fragment() throws RecognitionException {   
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:406:3: ( anonymous_function_signature '=>' )
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:406:4: anonymous_function_signature '=>'
        {
        pushFollow(FOLLOW_anonymous_function_signature_in_synpred21_cs3305);
        anonymous_function_signature();

        state._fsp--;
        if (state.failed) return ;
        match(input,131,FOLLOW_131_in_synpred21_cs3309); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred21_cs

    // $ANTLR start synpred22_cs
    public final void synpred22_cs_fragment() throws RecognitionException {   
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:407:5: ( query_expression )
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:407:6: query_expression
        {
        pushFollow(FOLLOW_query_expression_in_synpred22_cs3321);
        query_expression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred22_cs

    // $ANTLR start synpred23_cs
    public final void synpred23_cs_fragment() throws RecognitionException {   
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:471:51: ( 'into' )
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:471:52: 'into'
        {
        match(input,132,FOLLOW_132_in_synpred23_cs3782); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred23_cs

    // $ANTLR start synpred24_cs
    public final void synpred24_cs_fragment() throws RecognitionException {   
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:538:34: ( ',' identifier '=' )
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:538:35: ',' identifier '='
        {
        match(input,89,FOLLOW_89_in_synpred24_cs4330); if (state.failed) return ;
        pushFollow(FOLLOW_identifier_in_synpred24_cs4334);
        identifier();

        state._fsp--;
        if (state.failed) return ;
        match(input,66,FOLLOW_66_in_synpred24_cs4338); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred24_cs

    // $ANTLR start synpred25_cs
    public final void synpred25_cs_fragment() throws RecognitionException {   
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:619:6: ( member_name '{' )
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:619:7: member_name '{'
        {
        pushFollow(FOLLOW_member_name_in_synpred25_cs4910);
        member_name();

        state._fsp--;
        if (state.failed) return ;
        match(input,62,FOLLOW_62_in_synpred25_cs4914); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred25_cs

    // $ANTLR start synpred26_cs
    public final void synpred26_cs_fragment() throws RecognitionException {   
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:726:16: ( member_name '(' )
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:726:17: member_name '('
        {
        pushFollow(FOLLOW_member_name_in_synpred26_cs5829);
        member_name();

        state._fsp--;
        if (state.failed) return ;
        match(input,88,FOLLOW_88_in_synpred26_cs5833); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred26_cs

    // $ANTLR start synpred27_cs
    public final void synpred27_cs_fragment() throws RecognitionException {   
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:727:16: ( member_name '{' )
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:727:17: member_name '{'
        {
        pushFollow(FOLLOW_member_name_in_synpred27_cs5856);
        member_name();

        state._fsp--;
        if (state.failed) return ;
        match(input,62,FOLLOW_62_in_synpred27_cs5860); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred27_cs

    // $ANTLR start synpred28_cs
    public final void synpred28_cs_fragment() throws RecognitionException {   
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:778:12: ( member_name '(' )
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:778:13: member_name '('
        {
        pushFollow(FOLLOW_member_name_in_synpred28_cs6355);
        member_name();

        state._fsp--;
        if (state.failed) return ;
        match(input,88,FOLLOW_88_in_synpred28_cs6359); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred28_cs

    // $ANTLR start synpred29_cs
    public final void synpred29_cs_fragment() throws RecognitionException {   
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:779:10: ( member_name '{' )
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:779:11: member_name '{'
        {
        pushFollow(FOLLOW_member_name_in_synpred29_cs6376);
        member_name();

        state._fsp--;
        if (state.failed) return ;
        match(input,62,FOLLOW_62_in_synpred29_cs6380); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred29_cs

    // $ANTLR start synpred30_cs
    public final void synpred30_cs_fragment() throws RecognitionException {   
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:780:10: ( member_name '.' 'this' )
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:780:11: member_name '.' 'this'
        {
        pushFollow(FOLLOW_member_name_in_synpred30_cs6397);
        member_name();

        state._fsp--;
        if (state.failed) return ;
        match(input,DOT,FOLLOW_DOT_in_synpred30_cs6401); if (state.failed) return ;
        match(input,83,FOLLOW_83_in_synpred30_cs6405); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred30_cs

    // $ANTLR start synpred31_cs
    public final void synpred31_cs_fragment() throws RecognitionException {   
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:852:24: ( arguments ( '[' | '.' | '->' ) )
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:852:25: arguments ( '[' | '.' | '->' )
        {
        pushFollow(FOLLOW_arguments_in_synpred31_cs6995);
        arguments();

        state._fsp--;
        if (state.failed) return ;
        if ( (input.LA(1)>=DOT && input.LA(1)<=PTR)||input.LA(1)==86 ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred31_cs

    // $ANTLR start synpred32_cs
    public final void synpred32_cs_fragment() throws RecognitionException {   
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:856:5: ( identifier '<' )
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:856:6: identifier '<'
        {
        pushFollow(FOLLOW_identifier_in_synpred32_cs7054);
        identifier();

        state._fsp--;
        if (state.failed) return ;
        match(input,99,FOLLOW_99_in_synpred32_cs7059); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred32_cs

    // $ANTLR start synpred33_cs
    public final void synpred33_cs_fragment() throws RecognitionException {   
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:869:3: ( declaration_statement )
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:869:4: declaration_statement
        {
        pushFollow(FOLLOW_declaration_statement_in_synpred33_cs7148);
        declaration_statement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred33_cs

    // $ANTLR start synpred34_cs
    public final void synpred34_cs_fragment() throws RecognitionException {   
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:870:5: ( identifier ':' )
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:870:6: identifier ':'
        {
        pushFollow(FOLLOW_identifier_in_synpred34_cs7160);
        identifier();

        state._fsp--;
        if (state.failed) return ;
        match(input,90,FOLLOW_90_in_synpred34_cs7164); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred34_cs

    // $ANTLR start synpred35_cs
    public final void synpred35_cs_fragment() throws RecognitionException {   
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:907:3: ( 'var' )
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:907:4: 'var'
        {
        match(input,177,FOLLOW_177_in_synpred35_cs7418); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred35_cs

    // $ANTLR start synpred36_cs
    public final void synpred36_cs_fragment() throws RecognitionException {   
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:908:5: ( 'dynamic' )
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:908:6: 'dynamic'
        {
        match(input,178,FOLLOW_178_in_synpred36_cs7430); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred36_cs

    // $ANTLR start synpred37_cs
    public final void synpred37_cs_fragment() throws RecognitionException {   
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:934:63: ( 'else' )
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:934:64: 'else'
        {
        match(input,180,FOLLOW_180_in_synpred37_cs7612); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred37_cs

    // $ANTLR start synpred38_cs
    public final void synpred38_cs_fragment() throws RecognitionException {   
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:963:3: ( local_variable_declaration )
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:963:4: local_variable_declaration
        {
        pushFollow(FOLLOW_local_variable_declaration_in_synpred38_cs7880);
        local_variable_declaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred38_cs

    // $ANTLR start synpred39_cs
    public final void synpred39_cs_fragment() throws RecognitionException {   
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1015:3: ( local_variable_declaration )
        // C:\\Users\\Thomas\\workspaceGallieo\\CSharpMapper\\src\\mapper\\cs.g:1015:4: local_variable_declaration
        {
        pushFollow(FOLLOW_local_variable_declaration_in_synpred39_cs8330);
        local_variable_declaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred39_cs

    // Delegated rules

    public final boolean synpred24_cs() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred24_cs_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred9_cs() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred9_cs_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred19_cs() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_cs_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_cs() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_cs_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred15_cs() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred15_cs_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_cs() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_cs_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred12_cs() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred12_cs_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred32_cs() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred32_cs_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred29_cs() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred29_cs_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred18_cs() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred18_cs_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred16_cs() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred16_cs_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred10_cs() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_cs_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_cs() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_cs_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred28_cs() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred28_cs_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred17_cs() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred17_cs_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred14_cs() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred14_cs_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_cs() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_cs_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred25_cs() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred25_cs_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred37_cs() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred37_cs_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred31_cs() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred31_cs_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred22_cs() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred22_cs_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred11_cs() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred11_cs_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred7_cs() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred7_cs_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred34_cs() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred34_cs_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred23_cs() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred23_cs_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred36_cs() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred36_cs_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred21_cs() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred21_cs_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred13_cs() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_cs_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred8_cs() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_cs_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred33_cs() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred33_cs_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred26_cs() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred26_cs_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred30_cs() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred30_cs_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred38_cs() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred38_cs_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred35_cs() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred35_cs_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred3_cs() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred3_cs_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred39_cs() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred39_cs_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred1_cs() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_cs_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred27_cs() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred27_cs_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred20_cs() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_cs_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA21 dfa21 = new DFA21(this);
    protected DFA20 dfa20 = new DFA20(this);
    protected DFA27 dfa27 = new DFA27(this);
    protected DFA29 dfa29 = new DFA29(this);
    protected DFA38 dfa38 = new DFA38(this);
    protected DFA46 dfa46 = new DFA46(this);
    protected DFA50 dfa50 = new DFA50(this);
    protected DFA71 dfa71 = new DFA71(this);
    protected DFA72 dfa72 = new DFA72(this);
    protected DFA101 dfa101 = new DFA101(this);
    protected DFA105 dfa105 = new DFA105(this);
    protected DFA107 dfa107 = new DFA107(this);
    protected DFA230 dfa230 = new DFA230(this);
    protected DFA229 dfa229 = new DFA229(this);
    protected DFA233 dfa233 = new DFA233(this);
    protected DFA241 dfa241 = new DFA241(this);
    protected DFA242 dfa242 = new DFA242(this);
    protected DFA259 dfa259 = new DFA259(this);
    protected DFA271 dfa271 = new DFA271(this);
    static final String DFA21_eotS =
        "\20\uffff";
    static final String DFA21_eofS =
        "\20\uffff";
    static final String DFA21_minS =
        "\1\4\4\uffff\1\4\1\uffff\1\4\10\uffff";
    static final String DFA21_maxS =
        "\1\u00ca\4\uffff\1\u00ca\1\uffff\1\u00ca\10\uffff";
    static final String DFA21_acceptS =
        "\1\uffff\1\1\1\2\1\3\1\4\1\uffff\1\6\1\uffff\1\7\1\10\1\11\1\12"+
        "\1\13\1\15\1\5\1\14";
    static final String DFA21_specialS =
        "\20\uffff}>";
    static final String[] DFA21_transitionS = {
            "\1\7\16\uffff\1\12\55\uffff\1\7\1\uffff\1\3\15\uffff\1\1\1"+
            "\5\16\uffff\1\13\10\uffff\1\15\31\uffff\2\7\1\uffff\16\7\1\2"+
            "\3\7\1\uffff\1\7\1\10\1\uffff\3\7\11\6\1\11\1\7\1\uffff\1\4"+
            "\1\uffff\2\14\1\uffff\2\7\20\uffff\1\7\6\6\1\7",
            "",
            "",
            "",
            "",
            "\12\16\63\uffff\1\16\42\uffff\1\6\37\uffff\2\16\1\uffff\16"+
            "\16\1\uffff\3\16\1\uffff\1\16\2\uffff\14\16\1\uffff\1\16\6\uffff"+
            "\2\16\20\uffff\10\16",
            "",
            "\13\6\62\uffff\1\6\21\uffff\2\6\1\uffff\1\6\1\uffff\1\17\12"+
            "\uffff\3\6\36\uffff\2\6\1\uffff\16\6\1\uffff\3\6\1\uffff\1\6"+
            "\2\uffff\14\6\1\uffff\1\6\2\uffff\1\6\3\uffff\2\6\20\uffff\10"+
            "\6",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA21_eot = DFA.unpackEncodedString(DFA21_eotS);
    static final short[] DFA21_eof = DFA.unpackEncodedString(DFA21_eofS);
    static final char[] DFA21_min = DFA.unpackEncodedStringToUnsignedChars(DFA21_minS);
    static final char[] DFA21_max = DFA.unpackEncodedStringToUnsignedChars(DFA21_maxS);
    static final short[] DFA21_accept = DFA.unpackEncodedString(DFA21_acceptS);
    static final short[] DFA21_special = DFA.unpackEncodedString(DFA21_specialS);
    static final short[][] DFA21_transition;

    static {
        int numStates = DFA21_transitionS.length;
        DFA21_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA21_transition[i] = DFA.unpackEncodedString(DFA21_transitionS[i]);
        }
    }

    class DFA21 extends DFA {

        public DFA21(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 21;
            this.eot = DFA21_eot;
            this.eof = DFA21_eof;
            this.min = DFA21_min;
            this.max = DFA21_max;
            this.accept = DFA21_accept;
            this.special = DFA21_special;
            this.transition = DFA21_transition;
        }
        public String getDescription() {
            return "83:3: ( 'const' type constant_declarators ';' | event_declaration | 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration ) | interface_declaration | 'void' method_declaration | type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration ) | class_declaration | struct_declaration | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration | destructor_declaration )";
        }
    }
    static final String DFA20_eotS =
        "\12\uffff";
    static final String DFA20_eofS =
        "\12\uffff";
    static final String DFA20_minS =
        "\1\4\3\0\6\uffff";
    static final String DFA20_maxS =
        "\1\u00ca\3\0\6\uffff";
    static final String DFA20_acceptS =
        "\4\uffff\1\4\1\6\1\1\1\2\1\3\1\5";
    static final String DFA20_specialS =
        "\1\uffff\1\0\1\1\1\2\6\uffff}>";
    static final String[] DFA20_transitionS = {
            "\1\2\11\3\63\uffff\1\2\21\uffff\1\4\60\uffff\2\2\1\uffff\16"+
            "\2\1\uffff\3\2\1\uffff\1\2\2\uffff\3\2\11\1\1\uffff\1\2\2\uffff"+
            "\1\5\3\uffff\2\2\20\uffff\1\2\6\1\1\2",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA20_eot = DFA.unpackEncodedString(DFA20_eotS);
    static final short[] DFA20_eof = DFA.unpackEncodedString(DFA20_eofS);
    static final char[] DFA20_min = DFA.unpackEncodedStringToUnsignedChars(DFA20_minS);
    static final char[] DFA20_max = DFA.unpackEncodedStringToUnsignedChars(DFA20_maxS);
    static final short[] DFA20_accept = DFA.unpackEncodedString(DFA20_acceptS);
    static final short[] DFA20_special = DFA.unpackEncodedString(DFA20_specialS);
    static final short[][] DFA20_transition;

    static {
        int numStates = DFA20_transitionS.length;
        DFA20_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA20_transition[i] = DFA.unpackEncodedString(DFA20_transitionS[i]);
        }
    }

    class DFA20 extends DFA {

        public DFA20(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 20;
            this.eot = DFA20_eot;
            this.eof = DFA20_eof;
            this.min = DFA20_min;
            this.max = DFA20_max;
            this.accept = DFA20_accept;
            this.special = DFA20_special;
            this.transition = DFA20_transition;
        }
        public String getDescription() {
            return "91:10: ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA20_1 = input.LA(1);

                         
                        int index20_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_cs()) ) {s = 6;}

                        else if ( (synpred3_cs()) ) {s = 7;}

                         
                        input.seek(index20_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA20_2 = input.LA(1);

                         
                        int index20_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_cs()) ) {s = 6;}

                        else if ( (synpred3_cs()) ) {s = 7;}

                        else if ( (synpred4_cs()) ) {s = 8;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index20_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA20_3 = input.LA(1);

                         
                        int index20_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_cs()) ) {s = 6;}

                        else if ( (synpred3_cs()) ) {s = 7;}

                         
                        input.seek(index20_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 20, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA27_eotS =
        "\20\uffff";
    static final String DFA27_eofS =
        "\20\uffff";
    static final String DFA27_minS =
        "\1\4\1\0\16\uffff";
    static final String DFA27_maxS =
        "\1\u00ca\1\0\16\uffff";
    static final String DFA27_acceptS =
        "\2\uffff\1\3\5\uffff\1\4\1\5\1\6\1\7\1\10\1\11\1\1\1\2";
    static final String DFA27_specialS =
        "\1\uffff\1\0\16\uffff}>";
    static final String[] DFA27_transitionS = {
            "\12\2\63\uffff\1\2\2\uffff\1\10\16\uffff\1\1\1\uffff\1\2\2"+
            "\uffff\1\2\4\uffff\1\11\1\12\1\13\1\14\1\15\1\2\41\uffff\2\2"+
            "\1\uffff\16\2\1\uffff\3\2\1\uffff\1\2\2\uffff\14\2\1\uffff\1"+
            "\2\6\uffff\2\2\20\uffff\10\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA27_eot = DFA.unpackEncodedString(DFA27_eotS);
    static final short[] DFA27_eof = DFA.unpackEncodedString(DFA27_eofS);
    static final char[] DFA27_min = DFA.unpackEncodedStringToUnsignedChars(DFA27_minS);
    static final char[] DFA27_max = DFA.unpackEncodedStringToUnsignedChars(DFA27_maxS);
    static final short[] DFA27_accept = DFA.unpackEncodedString(DFA27_acceptS);
    static final short[] DFA27_special = DFA.unpackEncodedString(DFA27_specialS);
    static final short[][] DFA27_transition;

    static {
        int numStates = DFA27_transitionS.length;
        DFA27_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA27_transition[i] = DFA.unpackEncodedString(DFA27_transitionS[i]);
        }
    }

    class DFA27 extends DFA {

        public DFA27(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 27;
            this.eot = DFA27_eot;
            this.eof = DFA27_eof;
            this.min = DFA27_min;
            this.max = DFA27_max;
            this.accept = DFA27_accept;
            this.special = DFA27_special;
            this.transition = DFA27_transition;
        }
        public String getDescription() {
            return "110:1: primary_expression : ( ( 'this' brackets )=> 'this' brackets ( primary_expression_part )* | ( 'base' brackets )=> 'this' brackets ( primary_expression_part )* | primary_expression_start ( primary_expression_part )* | 'new' ( ( object_creation_expression ( '.' | '->' | '[' ) )=> object_creation_expression ( primary_expression_part )+ | ( delegate_creation_expression )=> delegate_creation_expression | object_creation_expression | anonymous_object_creation_expression ) | sizeof_expression | checked_expression | unchecked_expression | default_value_expression | anonymous_method_expression );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA27_1 = input.LA(1);

                         
                        int index27_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_cs()) ) {s = 14;}

                        else if ( (synpred6_cs()) ) {s = 15;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index27_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 27, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA29_eotS =
        "\12\uffff";
    static final String DFA29_eofS =
        "\12\uffff";
    static final String DFA29_minS =
        "\1\4\1\uffff\1\0\7\uffff";
    static final String DFA29_maxS =
        "\1\u00ca\1\uffff\1\0\7\uffff";
    static final String DFA29_acceptS =
        "\1\uffff\1\1\1\uffff\1\4\1\5\1\6\1\7\1\10\1\2\1\3";
    static final String DFA29_specialS =
        "\2\uffff\1\0\7\uffff}>";
    static final String[] DFA29_transitionS = {
            "\1\2\11\7\63\uffff\1\2\21\uffff\1\3\1\uffff\1\4\2\uffff\1\5"+
            "\11\uffff\1\6\41\uffff\2\2\1\uffff\16\2\1\uffff\3\2\1\uffff"+
            "\1\2\2\uffff\3\2\11\1\1\uffff\1\2\6\uffff\2\2\20\uffff\1\2\6"+
            "\1\1\2",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA29_eot = DFA.unpackEncodedString(DFA29_eotS);
    static final short[] DFA29_eof = DFA.unpackEncodedString(DFA29_eofS);
    static final char[] DFA29_min = DFA.unpackEncodedStringToUnsignedChars(DFA29_minS);
    static final char[] DFA29_max = DFA.unpackEncodedStringToUnsignedChars(DFA29_maxS);
    static final short[] DFA29_accept = DFA.unpackEncodedString(DFA29_acceptS);
    static final short[] DFA29_special = DFA.unpackEncodedString(DFA29_specialS);
    static final short[][] DFA29_transition;

    static {
        int numStates = DFA29_transitionS.length;
        DFA29_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA29_transition[i] = DFA.unpackEncodedString(DFA29_transitionS[i]);
        }
    }

    class DFA29 extends DFA {

        public DFA29(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 29;
            this.eot = DFA29_eot;
            this.eof = DFA29_eof;
            this.min = DFA29_min;
            this.max = DFA29_max;
            this.accept = DFA29_accept;
            this.special = DFA29_special;
            this.transition = DFA29_transition;
        }
        public String getDescription() {
            return "128:1: primary_expression_start : ( predefined_type | ( identifier '<' )=> identifier generic_argument_list | identifier ( '::' identifier )? | 'this' | 'base' | paren_expression | typeof_expression | literal );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA29_2 = input.LA(1);

                         
                        int index29_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred9_cs()) ) {s = 8;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index29_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 29, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA38_eotS =
        "\30\uffff";
    static final String DFA38_eofS =
        "\30\uffff";
    static final String DFA38_minS =
        "\1\4\1\0\26\uffff";
    static final String DFA38_maxS =
        "\1\u00ca\1\0\26\uffff";
    static final String DFA38_acceptS =
        "\2\uffff\1\2\24\uffff\1\1";
    static final String DFA38_specialS =
        "\1\uffff\1\0\26\uffff}>";
    static final String[] DFA38_transitionS = {
            "\12\2\2\uffff\1\2\60\uffff\1\2\2\uffff\1\2\16\uffff\1\2\1\uffff"+
            "\1\2\2\uffff\1\1\4\uffff\6\2\1\uffff\1\2\1\uffff\5\2\12\uffff"+
            "\1\2\16\uffff\2\2\1\uffff\16\2\1\uffff\3\2\1\uffff\1\2\2\uffff"+
            "\14\2\1\uffff\1\2\6\uffff\2\2\20\uffff\10\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA38_eot = DFA.unpackEncodedString(DFA38_eotS);
    static final short[] DFA38_eof = DFA.unpackEncodedString(DFA38_eofS);
    static final char[] DFA38_min = DFA.unpackEncodedStringToUnsignedChars(DFA38_minS);
    static final char[] DFA38_max = DFA.unpackEncodedStringToUnsignedChars(DFA38_maxS);
    static final short[] DFA38_accept = DFA.unpackEncodedString(DFA38_acceptS);
    static final short[] DFA38_special = DFA.unpackEncodedString(DFA38_specialS);
    static final short[][] DFA38_transition;

    static {
        int numStates = DFA38_transitionS.length;
        DFA38_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA38_transition[i] = DFA.unpackEncodedString(DFA38_transitionS[i]);
        }
    }

    class DFA38 extends DFA {

        public DFA38(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 38;
            this.eot = DFA38_eot;
            this.eof = DFA38_eof;
            this.min = DFA38_min;
            this.max = DFA38_max;
            this.accept = DFA38_accept;
            this.special = DFA38_special;
            this.transition = DFA38_transition;
        }
        public String getDescription() {
            return "168:5: ( ( '(' type ')' )=> '(' type ')' ( ref_variable_reference | variable_reference ) | variable_reference )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA38_1 = input.LA(1);

                         
                        int index38_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_cs()) ) {s = 23;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index38_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 38, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA46_eotS =
        "\17\uffff";
    static final String DFA46_eofS =
        "\17\uffff";
    static final String DFA46_minS =
        "\1\4\1\0\15\uffff";
    static final String DFA46_maxS =
        "\1\u00ca\1\0\15\uffff";
    static final String DFA46_acceptS =
        "\2\uffff\1\2\13\uffff\1\1";
    static final String DFA46_specialS =
        "\1\uffff\1\0\15\uffff}>";
    static final String[] DFA46_transitionS = {
            "\12\2\63\uffff\1\2\2\uffff\1\1\16\uffff\1\2\1\uffff\1\2\2\uffff"+
            "\1\2\4\uffff\6\2\41\uffff\2\2\1\uffff\16\2\1\uffff\3\2\1\uffff"+
            "\1\2\2\uffff\14\2\1\uffff\1\2\6\uffff\2\2\20\uffff\10\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA46_eot = DFA.unpackEncodedString(DFA46_eotS);
    static final short[] DFA46_eof = DFA.unpackEncodedString(DFA46_eofS);
    static final char[] DFA46_min = DFA.unpackEncodedStringToUnsignedChars(DFA46_minS);
    static final char[] DFA46_max = DFA.unpackEncodedStringToUnsignedChars(DFA46_maxS);
    static final short[] DFA46_accept = DFA.unpackEncodedString(DFA46_acceptS);
    static final short[] DFA46_special = DFA.unpackEncodedString(DFA46_specialS);
    static final short[][] DFA46_transition;

    static {
        int numStates = DFA46_transitionS.length;
        DFA46_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA46_transition[i] = DFA.unpackEncodedString(DFA46_transitionS[i]);
        }
    }

    class DFA46 extends DFA {

        public DFA46(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 46;
            this.eot = DFA46_eot;
            this.eof = DFA46_eof;
            this.min = DFA46_min;
            this.max = DFA46_max;
            this.accept = DFA46_accept;
            this.special = DFA46_special;
            this.transition = DFA46_transition;
        }
        public String getDescription() {
            return "195:1: primary_or_array_creation_expression : ( ( array_creation_expression )=> array_creation_expression | primary_expression );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA46_1 = input.LA(1);

                         
                        int index46_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_cs()) ) {s = 14;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index46_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 46, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA50_eotS =
        "\5\uffff";
    static final String DFA50_eofS =
        "\1\2\3\uffff\1\2";
    static final String DFA50_minS =
        "\2\4\2\uffff\1\4";
    static final String DFA50_maxS =
        "\2\u00ca\2\uffff\1\u00ca";
    static final String DFA50_acceptS =
        "\2\uffff\1\1\1\2\1\uffff";
    static final String DFA50_specialS =
        "\5\uffff}>";
    static final String[] DFA50_transitionS = {
            "\1\2\11\uffff\2\3\2\2\7\uffff\2\2\43\uffff\2\2\1\uffff\2\2"+
            "\23\uffff\1\1\1\2\1\3\2\2\10\uffff\6\2\2\uffff\30\2\1\uffff"+
            "\2\2\1\uffff\16\2\1\uffff\3\2\1\uffff\1\2\2\uffff\3\2\12\uffff"+
            "\1\2\6\uffff\2\2\20\uffff\1\2\6\uffff\1\2",
            "\12\3\2\uffff\1\3\60\uffff\1\3\2\uffff\1\3\16\uffff\1\3\1"+
            "\uffff\1\3\1\uffff\1\4\1\3\1\2\3\uffff\6\3\1\uffff\1\3\1\uffff"+
            "\5\3\12\uffff\1\3\16\uffff\2\3\1\uffff\16\3\1\uffff\3\3\1\uffff"+
            "\1\3\2\uffff\14\3\1\uffff\1\3\6\uffff\2\3\20\uffff\10\3",
            "",
            "",
            "\1\2\11\uffff\2\3\2\2\7\uffff\2\2\43\uffff\2\2\1\uffff\2\2"+
            "\23\uffff\1\1\1\2\1\3\2\2\10\uffff\6\2\2\uffff\30\2\1\uffff"+
            "\2\2\1\uffff\16\2\1\uffff\3\2\1\uffff\1\2\2\uffff\3\2\12\uffff"+
            "\1\2\6\uffff\2\2\20\uffff\1\2\6\uffff\1\2"
    };

    static final short[] DFA50_eot = DFA.unpackEncodedString(DFA50_eotS);
    static final short[] DFA50_eof = DFA.unpackEncodedString(DFA50_eofS);
    static final char[] DFA50_min = DFA.unpackEncodedStringToUnsignedChars(DFA50_minS);
    static final char[] DFA50_max = DFA.unpackEncodedStringToUnsignedChars(DFA50_maxS);
    static final short[] DFA50_accept = DFA.unpackEncodedString(DFA50_acceptS);
    static final short[] DFA50_special = DFA.unpackEncodedString(DFA50_specialS);
    static final short[][] DFA50_transition;

    static {
        int numStates = DFA50_transitionS.length;
        DFA50_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA50_transition[i] = DFA.unpackEncodedString(DFA50_transitionS[i]);
        }
    }

    class DFA50 extends DFA {

        public DFA50(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 50;
            this.eot = DFA50_eot;
            this.eof = DFA50_eof;
            this.min = DFA50_min;
            this.max = DFA50_max;
            this.accept = DFA50_accept;
            this.special = DFA50_special;
            this.transition = DFA50_transition;
        }
        public String getDescription() {
            return "203:11: ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments )";
        }
    }
    static final String DFA71_eotS =
        "\16\uffff";
    static final String DFA71_eofS =
        "\16\uffff";
    static final String DFA71_minS =
        "\1\4\1\16\1\uffff\1\32\3\4\1\uffff\2\16\2\uffff\2\4";
    static final String DFA71_maxS =
        "\1\u00ca\1\145\1\uffff\1\144\3\u00ca\1\uffff\2\145\2\uffff\2\u00ca";
    static final String DFA71_acceptS =
        "\2\uffff\1\2\4\uffff\1\3\2\uffff\2\1\2\uffff";
    static final String DFA71_specialS =
        "\6\uffff\1\2\5\uffff\1\1\1\0}>";
    static final String[] DFA71_transitionS = {
            "\1\1\74\uffff\1\1\20\uffff\1\3\61\uffff\2\1\1\uffff\16\1\1"+
            "\uffff\3\1\1\uffff\1\1\2\uffff\3\1\11\2\1\uffff\1\1\6\uffff"+
            "\2\1\20\uffff\1\1\6\2\1\1",
            "\1\5\13\uffff\1\2\71\uffff\1\4\1\uffff\1\2\14\uffff\1\6\2"+
            "\2",
            "",
            "\1\7\111\uffff\1\2",
            "\1\10\74\uffff\1\10\102\uffff\2\10\1\uffff\16\10\1\uffff\3"+
            "\10\1\uffff\1\10\2\uffff\3\10\12\uffff\1\10\6\uffff\2\10\20"+
            "\uffff\1\10\6\uffff\1\10",
            "\1\11\74\uffff\1\11\102\uffff\2\11\1\uffff\16\11\1\uffff\3"+
            "\11\1\uffff\1\11\2\uffff\3\11\12\uffff\1\11\6\uffff\2\11\20"+
            "\uffff\1\11\6\uffff\1\11",
            "\1\2\14\uffff\1\13\57\uffff\1\2\20\uffff\1\2\6\uffff\1\12"+
            "\52\uffff\2\2\1\uffff\16\2\1\uffff\3\2\1\uffff\1\2\2\uffff\14"+
            "\2\1\uffff\1\2\6\uffff\2\2\20\uffff\10\2",
            "",
            "\1\5\13\uffff\1\2\73\uffff\1\2\14\uffff\1\14\2\2",
            "\1\5\13\uffff\1\2\73\uffff\1\2\14\uffff\1\15\2\2",
            "",
            "",
            "\1\2\14\uffff\1\13\57\uffff\1\2\20\uffff\1\2\6\uffff\1\12"+
            "\52\uffff\2\2\1\uffff\16\2\1\uffff\3\2\1\uffff\1\2\2\uffff\14"+
            "\2\1\uffff\1\2\6\uffff\2\2\20\uffff\10\2",
            "\1\2\14\uffff\1\13\57\uffff\1\2\20\uffff\1\2\6\uffff\1\12"+
            "\52\uffff\2\2\1\uffff\16\2\1\uffff\3\2\1\uffff\1\2\2\uffff\14"+
            "\2\1\uffff\1\2\6\uffff\2\2\20\uffff\10\2"
    };

    static final short[] DFA71_eot = DFA.unpackEncodedString(DFA71_eotS);
    static final short[] DFA71_eof = DFA.unpackEncodedString(DFA71_eofS);
    static final char[] DFA71_min = DFA.unpackEncodedStringToUnsignedChars(DFA71_minS);
    static final char[] DFA71_max = DFA.unpackEncodedStringToUnsignedChars(DFA71_maxS);
    static final short[] DFA71_accept = DFA.unpackEncodedString(DFA71_acceptS);
    static final short[] DFA71_special = DFA.unpackEncodedString(DFA71_specialS);
    static final short[][] DFA71_transition;

    static {
        int numStates = DFA71_transitionS.length;
        DFA71_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA71_transition[i] = DFA.unpackEncodedString(DFA71_transitionS[i]);
        }
    }

    class DFA71 extends DFA {

        public DFA71(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 71;
            this.eot = DFA71_eot;
            this.eof = DFA71_eof;
            this.min = DFA71_min;
            this.max = DFA71_max;
            this.accept = DFA71_accept;
            this.special = DFA71_special;
            this.transition = DFA71_transition;
        }
        public String getDescription() {
            return "276:20: ( ( unbound_type_name )=> unbound_type_name | type | 'void' )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA71_13 = input.LA(1);

                         
                        int index71_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA71_13==89) && (synpred13_cs())) {s = 10;}

                        else if ( (LA71_13==GT) && (synpred13_cs())) {s = 11;}

                        else if ( (LA71_13==IDENTIFIER||LA71_13==65||LA71_13==82||(LA71_13>=132 && LA71_13<=133)||(LA71_13>=135 && LA71_13<=148)||(LA71_13>=150 && LA71_13<=152)||LA71_13==154||(LA71_13>=157 && LA71_13<=168)||LA71_13==170||(LA71_13>=177 && LA71_13<=178)||(LA71_13>=195 && LA71_13<=202)) ) {s = 2;}

                         
                        input.seek(index71_13);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA71_12 = input.LA(1);

                         
                        int index71_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA71_12==89) && (synpred13_cs())) {s = 10;}

                        else if ( (LA71_12==GT) && (synpred13_cs())) {s = 11;}

                        else if ( (LA71_12==IDENTIFIER||LA71_12==65||LA71_12==82||(LA71_12>=132 && LA71_12<=133)||(LA71_12>=135 && LA71_12<=148)||(LA71_12>=150 && LA71_12<=152)||LA71_12==154||(LA71_12>=157 && LA71_12<=168)||LA71_12==170||(LA71_12>=177 && LA71_12<=178)||(LA71_12>=195 && LA71_12<=202)) ) {s = 2;}

                         
                        input.seek(index71_12);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA71_6 = input.LA(1);

                         
                        int index71_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA71_6==89) && (synpred13_cs())) {s = 10;}

                        else if ( (LA71_6==GT) && (synpred13_cs())) {s = 11;}

                        else if ( (LA71_6==IDENTIFIER||LA71_6==65||LA71_6==82||(LA71_6>=132 && LA71_6<=133)||(LA71_6>=135 && LA71_6<=148)||(LA71_6>=150 && LA71_6<=152)||LA71_6==154||(LA71_6>=157 && LA71_6<=168)||LA71_6==170||(LA71_6>=177 && LA71_6<=178)||(LA71_6>=195 && LA71_6<=202)) ) {s = 2;}

                         
                        input.seek(index71_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 71, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA72_eotS =
        "\7\uffff";
    static final String DFA72_eofS =
        "\4\uffff\1\6\2\uffff";
    static final String DFA72_minS =
        "\1\16\1\21\1\uffff\1\21\1\16\2\uffff";
    static final String DFA72_maxS =
        "\1\143\1\131\1\uffff\1\131\1\32\2\uffff";
    static final String DFA72_acceptS =
        "\2\uffff\1\2\2\uffff\1\1\1\3";
    static final String DFA72_specialS =
        "\4\uffff\1\0\2\uffff}>";
    static final String[] DFA72_transitionS = {
            "\1\2\124\uffff\1\1",
            "\1\4\107\uffff\1\3",
            "",
            "\1\4\107\uffff\1\3",
            "\1\5\13\uffff\1\6",
            "",
            ""
    };

    static final short[] DFA72_eot = DFA.unpackEncodedString(DFA72_eotS);
    static final short[] DFA72_eof = DFA.unpackEncodedString(DFA72_eofS);
    static final char[] DFA72_min = DFA.unpackEncodedStringToUnsignedChars(DFA72_minS);
    static final char[] DFA72_max = DFA.unpackEncodedStringToUnsignedChars(DFA72_maxS);
    static final short[] DFA72_accept = DFA.unpackEncodedString(DFA72_acceptS);
    static final short[] DFA72_special = DFA.unpackEncodedString(DFA72_specialS);
    static final short[][] DFA72_transition;

    static {
        int numStates = DFA72_transitionS.length;
        DFA72_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA72_transition[i] = DFA.unpackEncodedString(DFA72_transitionS[i]);
        }
    }

    class DFA72 extends DFA {

        public DFA72(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 72;
            this.eot = DFA72_eot;
            this.eof = DFA72_eof;
            this.min = DFA72_min;
            this.max = DFA72_max;
            this.accept = DFA72_accept;
            this.special = DFA72_special;
            this.transition = DFA72_transition;
        }
        public String getDescription() {
            return "()* loopback of 286:5: ( ( ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part ) | unbound_type_name_part )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA72_4 = input.LA(1);

                         
                        int index72_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA72_4==DOT) && (synpred14_cs())) {s = 5;}

                        else if ( (LA72_4==EOF||LA72_4==RPAREN) ) {s = 6;}

                         
                        input.seek(index72_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 72, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA101_eotS =
        "\31\uffff";
    static final String DFA101_eofS =
        "\31\uffff";
    static final String DFA101_minS =
        "\1\4\26\0\2\uffff";
    static final String DFA101_maxS =
        "\1\u00ca\26\0\2\uffff";
    static final String DFA101_acceptS =
        "\27\uffff\1\1\1\2";
    static final String DFA101_specialS =
        "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1"+
        "\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\2\uffff}>";
    static final String[] DFA101_transitionS = {
            "\1\26\11\10\2\uffff\1\17\60\uffff\1\26\2\uffff\1\2\16\uffff"+
            "\1\3\1\uffff\1\6\2\uffff\1\1\4\uffff\1\11\1\12\1\13\1\14\1\15"+
            "\1\7\1\uffff\1\24\1\uffff\1\22\1\23\1\16\1\20\1\21\12\uffff"+
            "\1\25\16\uffff\1\26\1\5\1\uffff\16\26\1\uffff\3\26\1\uffff\1"+
            "\26\2\uffff\3\26\11\4\1\uffff\1\26\6\uffff\2\26\20\uffff\1\26"+
            "\6\4\1\26",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] DFA101_eot = DFA.unpackEncodedString(DFA101_eotS);
    static final short[] DFA101_eof = DFA.unpackEncodedString(DFA101_eofS);
    static final char[] DFA101_min = DFA.unpackEncodedStringToUnsignedChars(DFA101_minS);
    static final char[] DFA101_max = DFA.unpackEncodedStringToUnsignedChars(DFA101_maxS);
    static final short[] DFA101_accept = DFA.unpackEncodedString(DFA101_acceptS);
    static final short[] DFA101_special = DFA.unpackEncodedString(DFA101_specialS);
    static final short[][] DFA101_transition;

    static {
        int numStates = DFA101_transitionS.length;
        DFA101_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA101_transition[i] = DFA.unpackEncodedString(DFA101_transitionS[i]);
        }
    }

    class DFA101 extends DFA {

        public DFA101(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 101;
            this.eot = DFA101_eot;
            this.eof = DFA101_eof;
            this.min = DFA101_min;
            this.max = DFA101_max;
            this.accept = DFA101_accept;
            this.special = DFA101_special;
            this.transition = DFA101_transition;
        }
        public String getDescription() {
            return "370:1: expression : ( ( unary_expression assignment_operator )=> assignment | non_assignment_expression );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA101_1 = input.LA(1);

                         
                        int index101_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_cs()) ) {s = 23;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index101_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA101_2 = input.LA(1);

                         
                        int index101_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_cs()) ) {s = 23;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index101_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA101_3 = input.LA(1);

                         
                        int index101_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_cs()) ) {s = 23;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index101_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA101_4 = input.LA(1);

                         
                        int index101_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_cs()) ) {s = 23;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index101_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA101_5 = input.LA(1);

                         
                        int index101_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_cs()) ) {s = 23;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index101_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA101_6 = input.LA(1);

                         
                        int index101_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_cs()) ) {s = 23;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index101_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA101_7 = input.LA(1);

                         
                        int index101_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_cs()) ) {s = 23;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index101_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA101_8 = input.LA(1);

                         
                        int index101_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_cs()) ) {s = 23;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index101_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA101_9 = input.LA(1);

                         
                        int index101_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_cs()) ) {s = 23;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index101_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA101_10 = input.LA(1);

                         
                        int index101_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_cs()) ) {s = 23;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index101_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA101_11 = input.LA(1);

                         
                        int index101_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_cs()) ) {s = 23;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index101_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA101_12 = input.LA(1);

                         
                        int index101_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_cs()) ) {s = 23;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index101_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA101_13 = input.LA(1);

                         
                        int index101_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_cs()) ) {s = 23;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index101_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA101_14 = input.LA(1);

                         
                        int index101_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_cs()) ) {s = 23;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index101_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA101_15 = input.LA(1);

                         
                        int index101_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_cs()) ) {s = 23;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index101_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA101_16 = input.LA(1);

                         
                        int index101_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_cs()) ) {s = 23;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index101_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA101_17 = input.LA(1);

                         
                        int index101_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_cs()) ) {s = 23;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index101_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA101_18 = input.LA(1);

                         
                        int index101_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_cs()) ) {s = 23;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index101_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA101_19 = input.LA(1);

                         
                        int index101_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_cs()) ) {s = 23;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index101_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA101_20 = input.LA(1);

                         
                        int index101_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_cs()) ) {s = 23;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index101_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA101_21 = input.LA(1);

                         
                        int index101_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_cs()) ) {s = 23;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index101_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA101_22 = input.LA(1);

                         
                        int index101_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_cs()) ) {s = 23;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index101_22);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 101, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA105_eotS =
        "\27\uffff";
    static final String DFA105_eofS =
        "\27\uffff";
    static final String DFA105_minS =
        "\1\4\1\0\25\uffff";
    static final String DFA105_maxS =
        "\1\u00ca\1\0\25\uffff";
    static final String DFA105_acceptS =
        "\2\uffff\1\2\13\uffff\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\1";
    static final String DFA105_specialS =
        "\1\uffff\1\0\25\uffff}>";
    static final String[] DFA105_transitionS = {
            "\12\2\2\uffff\1\17\60\uffff\1\2\2\uffff\1\2\16\uffff\1\2\1"+
            "\uffff\1\2\2\uffff\1\1\4\uffff\6\2\1\uffff\1\24\1\uffff\1\22"+
            "\1\23\1\16\1\20\1\21\12\uffff\1\25\16\uffff\2\2\1\uffff\16\2"+
            "\1\uffff\3\2\1\uffff\1\2\2\uffff\14\2\1\uffff\1\2\6\uffff\2"+
            "\2\20\uffff\10\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA105_eot = DFA.unpackEncodedString(DFA105_eotS);
    static final short[] DFA105_eof = DFA.unpackEncodedString(DFA105_eofS);
    static final char[] DFA105_min = DFA.unpackEncodedStringToUnsignedChars(DFA105_minS);
    static final char[] DFA105_max = DFA.unpackEncodedStringToUnsignedChars(DFA105_maxS);
    static final short[] DFA105_accept = DFA.unpackEncodedString(DFA105_acceptS);
    static final short[] DFA105_special = DFA.unpackEncodedString(DFA105_specialS);
    static final short[][] DFA105_transition;

    static {
        int numStates = DFA105_transitionS.length;
        DFA105_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA105_transition[i] = DFA.unpackEncodedString(DFA105_transitionS[i]);
        }
    }

    class DFA105 extends DFA {

        public DFA105(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 105;
            this.eot = DFA105_eot;
            this.eof = DFA105_eof;
            this.min = DFA105_min;
            this.max = DFA105_max;
            this.accept = DFA105_accept;
            this.special = DFA105_special;
            this.transition = DFA105_transition;
        }
        public String getDescription() {
            return "378:1: unary_expression : ( ( cast_expression )=> cast_expression | primary_or_array_creation_expression ( '++' )? ( '--' )? | '+' unary_expression | '-' unary_expression | '!' unary_expression | '~' unary_expression | pre_increment_expression | pre_decrement_expression | pointer_indirection_expression | addressof_expression );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA105_1 = input.LA(1);

                         
                        int index105_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_cs()) ) {s = 22;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index105_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 105, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA107_eotS =
        "\31\uffff";
    static final String DFA107_eofS =
        "\31\uffff";
    static final String DFA107_minS =
        "\1\4\3\0\25\uffff";
    static final String DFA107_maxS =
        "\1\u00ca\3\0\25\uffff";
    static final String DFA107_acceptS =
        "\4\uffff\1\3\22\uffff\1\1\1\2";
    static final String DFA107_specialS =
        "\1\uffff\1\0\1\1\1\2\25\uffff}>";
    static final String[] DFA107_transitionS = {
            "\1\3\11\4\2\uffff\1\4\60\uffff\1\3\2\uffff\1\4\16\uffff\1\4"+
            "\1\uffff\1\4\2\uffff\1\1\4\uffff\6\4\1\uffff\1\4\1\uffff\5\4"+
            "\12\uffff\1\4\16\uffff\1\3\1\2\1\uffff\16\3\1\uffff\3\3\1\uffff"+
            "\1\3\2\uffff\3\3\11\4\1\uffff\1\3\6\uffff\2\3\20\uffff\1\3\6"+
            "\4\1\3",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA107_eot = DFA.unpackEncodedString(DFA107_eotS);
    static final short[] DFA107_eof = DFA.unpackEncodedString(DFA107_eofS);
    static final char[] DFA107_min = DFA.unpackEncodedStringToUnsignedChars(DFA107_minS);
    static final char[] DFA107_max = DFA.unpackEncodedStringToUnsignedChars(DFA107_maxS);
    static final short[] DFA107_accept = DFA.unpackEncodedString(DFA107_acceptS);
    static final short[] DFA107_special = DFA.unpackEncodedString(DFA107_specialS);
    static final short[][] DFA107_transition;

    static {
        int numStates = DFA107_transitionS.length;
        DFA107_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA107_transition[i] = DFA.unpackEncodedString(DFA107_transitionS[i]);
        }
    }

    class DFA107 extends DFA {

        public DFA107(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 107;
            this.eot = DFA107_eot;
            this.eof = DFA107_eof;
            this.min = DFA107_min;
            this.max = DFA107_max;
            this.accept = DFA107_accept;
            this.special = DFA107_special;
            this.transition = DFA107_transition;
        }
        public String getDescription() {
            return "404:1: non_assignment_expression : ( ( anonymous_function_signature '=>' )=> lambda_expression | ( query_expression )=> query_expression | conditional_expression );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA107_1 = input.LA(1);

                         
                        int index107_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred21_cs()) ) {s = 23;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index107_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA107_2 = input.LA(1);

                         
                        int index107_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred21_cs()) ) {s = 23;}

                        else if ( (synpred22_cs()) ) {s = 24;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index107_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA107_3 = input.LA(1);

                         
                        int index107_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred21_cs()) ) {s = 23;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index107_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 107, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA230_eotS =
        "\17\uffff";
    static final String DFA230_eofS =
        "\17\uffff";
    static final String DFA230_minS =
        "\1\4\5\uffff\1\4\1\uffff\1\4\6\uffff";
    static final String DFA230_maxS =
        "\1\u00ca\5\uffff\1\u00ca\1\uffff\1\u00ca\6\uffff";
    static final String DFA230_acceptS =
        "\1\uffff\1\1\1\2\1\3\1\4\1\5\1\uffff\1\7\1\uffff\1\10\1\11\1\12"+
        "\1\13\1\6\1\14";
    static final String DFA230_specialS =
        "\17\uffff}>";
    static final String[] DFA230_transitionS = {
            "\1\10\16\uffff\1\12\55\uffff\1\10\1\uffff\1\3\15\uffff\1\1"+
            "\1\6\16\uffff\1\13\42\uffff\2\10\1\uffff\16\10\1\2\3\10\1\uffff"+
            "\1\10\1\5\1\uffff\3\10\11\7\1\11\1\10\1\uffff\1\4\1\uffff\2"+
            "\14\1\uffff\2\10\20\uffff\1\10\6\7\1\10",
            "",
            "",
            "",
            "",
            "",
            "\12\15\63\uffff\1\15\42\uffff\1\7\37\uffff\2\15\1\uffff\16"+
            "\15\1\uffff\3\15\1\uffff\1\15\2\uffff\14\15\1\uffff\1\15\6\uffff"+
            "\2\15\20\uffff\10\15",
            "",
            "\13\7\62\uffff\1\7\21\uffff\2\7\1\uffff\1\7\1\uffff\1\16\12"+
            "\uffff\3\7\36\uffff\2\7\1\uffff\16\7\1\uffff\3\7\1\uffff\1\7"+
            "\2\uffff\14\7\1\uffff\1\7\2\uffff\1\7\3\uffff\2\7\20\uffff\10"+
            "\7",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA230_eot = DFA.unpackEncodedString(DFA230_eotS);
    static final short[] DFA230_eof = DFA.unpackEncodedString(DFA230_eofS);
    static final char[] DFA230_min = DFA.unpackEncodedStringToUnsignedChars(DFA230_minS);
    static final char[] DFA230_max = DFA.unpackEncodedStringToUnsignedChars(DFA230_maxS);
    static final short[] DFA230_accept = DFA.unpackEncodedString(DFA230_acceptS);
    static final short[] DFA230_special = DFA.unpackEncodedString(DFA230_specialS);
    static final short[][] DFA230_transition;

    static {
        int numStates = DFA230_transitionS.length;
        DFA230_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA230_transition[i] = DFA.unpackEncodedString(DFA230_transitionS[i]);
        }
    }

    class DFA230 extends DFA {

        public DFA230(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 230;
            this.eot = DFA230_eot;
            this.eof = DFA230_eof;
            this.min = DFA230_min;
            this.max = DFA230_max;
            this.accept = DFA230_accept;
            this.special = DFA230_special;
            this.transition = DFA230_transition;
        }
        public String getDescription() {
            return "768:3: ( 'const' type constant_declarators ';' | event_declaration | 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration ) | interface_declaration | class_declaration | 'void' method_declaration | type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration ) | struct_declaration | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration )";
        }
    }
    static final String DFA229_eotS =
        "\12\uffff";
    static final String DFA229_eofS =
        "\12\uffff";
    static final String DFA229_minS =
        "\1\4\3\0\6\uffff";
    static final String DFA229_maxS =
        "\1\u00ca\3\0\6\uffff";
    static final String DFA229_acceptS =
        "\4\uffff\1\4\1\6\1\1\1\2\1\3\1\5";
    static final String DFA229_specialS =
        "\1\uffff\1\0\1\1\1\2\6\uffff}>";
    static final String[] DFA229_transitionS = {
            "\1\2\11\3\63\uffff\1\2\21\uffff\1\4\60\uffff\2\2\1\uffff\16"+
            "\2\1\uffff\3\2\1\uffff\1\2\2\uffff\3\2\11\1\1\uffff\1\2\2\uffff"+
            "\1\5\3\uffff\2\2\20\uffff\1\2\6\1\1\2",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA229_eot = DFA.unpackEncodedString(DFA229_eotS);
    static final short[] DFA229_eof = DFA.unpackEncodedString(DFA229_eofS);
    static final char[] DFA229_min = DFA.unpackEncodedStringToUnsignedChars(DFA229_minS);
    static final char[] DFA229_max = DFA.unpackEncodedStringToUnsignedChars(DFA229_maxS);
    static final short[] DFA229_accept = DFA.unpackEncodedString(DFA229_acceptS);
    static final short[] DFA229_special = DFA.unpackEncodedString(DFA229_specialS);
    static final short[][] DFA229_transition;

    static {
        int numStates = DFA229_transitionS.length;
        DFA229_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA229_transition[i] = DFA.unpackEncodedString(DFA229_transitionS[i]);
        }
    }

    class DFA229 extends DFA {

        public DFA229(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 229;
            this.eot = DFA229_eot;
            this.eof = DFA229_eof;
            this.min = DFA229_min;
            this.max = DFA229_max;
            this.accept = DFA229_accept;
            this.special = DFA229_special;
            this.transition = DFA229_transition;
        }
        public String getDescription() {
            return "778:10: ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA229_1 = input.LA(1);

                         
                        int index229_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred28_cs()) ) {s = 6;}

                        else if ( (synpred29_cs()) ) {s = 7;}

                         
                        input.seek(index229_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA229_2 = input.LA(1);

                         
                        int index229_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred28_cs()) ) {s = 6;}

                        else if ( (synpred29_cs()) ) {s = 7;}

                        else if ( (synpred30_cs()) ) {s = 8;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index229_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA229_3 = input.LA(1);

                         
                        int index229_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred28_cs()) ) {s = 6;}

                        else if ( (synpred29_cs()) ) {s = 7;}

                         
                        input.seek(index229_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 229, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA233_eotS =
        "\20\uffff";
    static final String DFA233_eofS =
        "\20\uffff";
    static final String DFA233_minS =
        "\1\21\7\uffff\1\21\7\uffff";
    static final String DFA233_maxS =
        "\1\177\7\uffff\1\131\7\uffff";
    static final String DFA233_acceptS =
        "\1\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\uffff\1\11\1\12\1\14\1\15"+
        "\1\16\1\10\1\13";
    static final String DFA233_specialS =
        "\20\uffff}>";
    static final String[] DFA233_transitionS = {
            "\1\10\121\uffff\1\13\1\1\17\uffff\1\14\1\4\1\2\1\3\1\7\1\15"+
            "\2\uffff\1\11\1\12\1\6\1\5",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\16\107\uffff\1\17",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA233_eot = DFA.unpackEncodedString(DFA233_eotS);
    static final short[] DFA233_eof = DFA.unpackEncodedString(DFA233_eofS);
    static final char[] DFA233_min = DFA.unpackEncodedStringToUnsignedChars(DFA233_minS);
    static final char[] DFA233_max = DFA.unpackEncodedStringToUnsignedChars(DFA233_maxS);
    static final short[] DFA233_accept = DFA.unpackEncodedString(DFA233_acceptS);
    static final short[] DFA233_special = DFA.unpackEncodedString(DFA233_specialS);
    static final short[][] DFA233_transition;

    static {
        int numStates = DFA233_transitionS.length;
        DFA233_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA233_transition[i] = DFA.unpackEncodedString(DFA233_transitionS[i]);
        }
    }

    class DFA233 extends DFA {

        public DFA233(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 233;
            this.eot = DFA233_eot;
            this.eof = DFA233_eof;
            this.min = DFA233_min;
            this.max = DFA233_max;
            this.accept = DFA233_accept;
            this.special = DFA233_special;
            this.transition = DFA233_transition;
        }
        public String getDescription() {
            return "818:1: overloadable_binary_operator : ( '*' | '/' | '%' | '&' | '|' | '^' | '<<' | '>' '>' | '==' | '!=' | '>' | '<' | '>=' | '<=' );";
        }
    }
    static final String DFA241_eotS =
        "\57\uffff";
    static final String DFA241_eofS =
        "\57\uffff";
    static final String DFA241_minS =
        "\1\4\4\0\24\uffff\1\0\23\uffff\1\0\1\uffff";
    static final String DFA241_maxS =
        "\1\u00ca\4\0\24\uffff\1\0\23\uffff\1\0\1\uffff";
    static final String DFA241_acceptS =
        "\5\uffff\2\1\1\3\46\uffff\1\2";
    static final String DFA241_specialS =
        "\1\0\1\1\1\2\1\3\1\4\24\uffff\1\5\23\uffff\1\6\1\uffff}>";
    static final String[] DFA241_transitionS = {
            "\1\55\11\7\2\uffff\1\7\1\uffff\1\7\1\uffff\1\7\4\uffff\1\7"+
            "\44\uffff\1\7\2\uffff\1\55\2\uffff\1\7\4\uffff\1\7\7\uffff\1"+
            "\6\1\5\1\7\1\uffff\1\7\2\uffff\1\7\4\uffff\6\7\1\uffff\1\7\1"+
            "\uffff\5\7\12\uffff\1\7\16\uffff\1\55\1\31\1\uffff\16\55\1\uffff"+
            "\3\55\1\7\1\55\2\uffff\3\55\11\3\1\uffff\1\55\5\uffff\1\7\1"+
            "\1\1\2\2\uffff\1\7\1\uffff\11\7\2\uffff\1\7\1\4\6\3\1\55",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            ""
    };

    static final short[] DFA241_eot = DFA.unpackEncodedString(DFA241_eotS);
    static final short[] DFA241_eof = DFA.unpackEncodedString(DFA241_eofS);
    static final char[] DFA241_min = DFA.unpackEncodedStringToUnsignedChars(DFA241_minS);
    static final char[] DFA241_max = DFA.unpackEncodedStringToUnsignedChars(DFA241_maxS);
    static final short[] DFA241_accept = DFA.unpackEncodedString(DFA241_acceptS);
    static final short[] DFA241_special = DFA.unpackEncodedString(DFA241_specialS);
    static final short[][] DFA241_transition;

    static {
        int numStates = DFA241_transitionS.length;
        DFA241_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA241_transition[i] = DFA.unpackEncodedString(DFA241_transitionS[i]);
        }
    }

    class DFA241 extends DFA {

        public DFA241(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 241;
            this.eot = DFA241_eot;
            this.eof = DFA241_eof;
            this.min = DFA241_min;
            this.max = DFA241_max;
            this.accept = DFA241_accept;
            this.special = DFA241_special;
            this.transition = DFA241_transition;
        }
        public String getDescription() {
            return "868:1: statement : ( ( declaration_statement )=> declaration_statement | ( identifier ':' )=> labeled_statement | embedded_statement );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA241_0 = input.LA(1);

                         
                        int index241_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA241_0==177) ) {s = 1;}

                        else if ( (LA241_0==178) ) {s = 2;}

                        else if ( ((LA241_0>=160 && LA241_0<=168)||(LA241_0>=196 && LA241_0<=201)) ) {s = 3;}

                        else if ( (LA241_0==195) ) {s = 4;}

                        else if ( (LA241_0==82) && (synpred33_cs())) {s = 5;}

                        else if ( (LA241_0==81) && (synpred33_cs())) {s = 6;}

                        else if ( ((LA241_0>=Real_literal && LA241_0<=NULL)||LA241_0==MINUS||LA241_0==USING||LA241_0==IF||LA241_0==SEMI||LA241_0==62||LA241_0==68||LA241_0==73||LA241_0==83||LA241_0==85||LA241_0==88||(LA241_0>=93 && LA241_0<=98)||LA241_0==100||(LA241_0>=102 && LA241_0<=106)||LA241_0==117||LA241_0==153||LA241_0==176||LA241_0==181||(LA241_0>=183 && LA241_0<=191)||LA241_0==194) ) {s = 7;}

                        else if ( (LA241_0==133) ) {s = 25;}

                        else if ( (LA241_0==IDENTIFIER||LA241_0==65||LA241_0==132||(LA241_0>=135 && LA241_0<=148)||(LA241_0>=150 && LA241_0<=152)||LA241_0==154||(LA241_0>=157 && LA241_0<=159)||LA241_0==170||LA241_0==202) ) {s = 45;}

                         
                        input.seek(index241_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA241_1 = input.LA(1);

                         
                        int index241_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_cs()) ) {s = 6;}

                        else if ( (synpred34_cs()) ) {s = 46;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index241_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA241_2 = input.LA(1);

                         
                        int index241_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_cs()) ) {s = 6;}

                        else if ( (synpred34_cs()) ) {s = 46;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index241_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA241_3 = input.LA(1);

                         
                        int index241_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_cs()) ) {s = 6;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index241_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA241_4 = input.LA(1);

                         
                        int index241_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_cs()) ) {s = 6;}

                        else if ( (synpred34_cs()) ) {s = 46;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index241_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA241_25 = input.LA(1);

                         
                        int index241_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_cs()) ) {s = 6;}

                        else if ( (synpred34_cs()) ) {s = 46;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index241_25);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA241_45 = input.LA(1);

                         
                        int index241_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_cs()) ) {s = 6;}

                        else if ( (synpred34_cs()) ) {s = 46;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index241_45);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 241, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA242_eotS =
        "\21\uffff";
    static final String DFA242_eofS =
        "\21\uffff";
    static final String DFA242_minS =
        "\1\4\5\uffff\2\31\2\uffff\1\16\6\uffff";
    static final String DFA242_maxS =
        "\1\u00ca\5\uffff\2\130\2\uffff\1\u00bb\6\uffff";
    static final String DFA242_acceptS =
        "\1\uffff\1\1\1\2\1\3\1\4\1\5\2\uffff\1\10\1\11\1\uffff\1\13\1\14"+
        "\1\15\1\6\1\7\1\12";
    static final String DFA242_specialS =
        "\21\uffff}>";
    static final String[] DFA242_transitionS = {
            "\12\15\2\uffff\1\15\1\uffff\1\11\1\uffff\1\2\4\uffff\1\1\44"+
            "\uffff\1\1\2\uffff\1\15\2\uffff\1\15\4\uffff\1\13\11\uffff\1"+
            "\15\1\uffff\1\15\2\uffff\1\15\4\uffff\1\15\1\6\1\7\3\15\1\uffff"+
            "\1\15\1\uffff\5\15\12\uffff\1\15\16\uffff\2\15\1\uffff\16\15"+
            "\1\uffff\3\15\1\4\1\15\2\uffff\14\15\1\uffff\1\15\5\uffff\1"+
            "\14\2\15\2\uffff\1\2\1\uffff\4\3\4\4\1\5\2\uffff\1\10\1\12\7"+
            "\15",
            "",
            "",
            "",
            "",
            "",
            "\1\16\44\uffff\1\16\31\uffff\1\15",
            "\1\17\44\uffff\1\17\31\uffff\1\15",
            "",
            "",
            "\4\15\7\uffff\1\15\50\uffff\1\15\21\uffff\1\15\1\uffff\1\15"+
            "\1\uffff\2\15\11\uffff\6\15\2\uffff\31\15\25\uffff\1\20\41\uffff"+
            "\1\20",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA242_eot = DFA.unpackEncodedString(DFA242_eotS);
    static final short[] DFA242_eof = DFA.unpackEncodedString(DFA242_eofS);
    static final char[] DFA242_min = DFA.unpackEncodedStringToUnsignedChars(DFA242_minS);
    static final char[] DFA242_max = DFA.unpackEncodedStringToUnsignedChars(DFA242_maxS);
    static final short[] DFA242_accept = DFA.unpackEncodedString(DFA242_acceptS);
    static final short[] DFA242_special = DFA.unpackEncodedString(DFA242_specialS);
    static final short[][] DFA242_transition;

    static {
        int numStates = DFA242_transitionS.length;
        DFA242_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA242_transition[i] = DFA.unpackEncodedString(DFA242_transitionS[i]);
        }
    }

    class DFA242 extends DFA {

        public DFA242(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 242;
            this.eot = DFA242_eot;
            this.eof = DFA242_eof;
            this.min = DFA242_min;
            this.max = DFA242_max;
            this.accept = DFA242_accept;
            this.special = DFA242_special;
            this.transition = DFA242_transition;
        }
        public String getDescription() {
            return "873:1: embedded_statement : ( block | selection_statement | iteration_statement | jump_statement | try_statement | checked_statement | unchecked_statement | lock_statement | using_statement | yield_statement | unsafe_statement | fixed_statement | expression_statement );";
        }
    }
    static final String DFA259_eotS =
        "\32\uffff";
    static final String DFA259_eofS =
        "\32\uffff";
    static final String DFA259_minS =
        "\1\4\4\0\24\uffff\1\0";
    static final String DFA259_maxS =
        "\1\u00ca\4\0\24\uffff\1\0";
    static final String DFA259_acceptS =
        "\5\uffff\1\1\1\2\23\uffff";
    static final String DFA259_specialS =
        "\1\0\1\1\1\2\1\3\1\4\24\uffff\1\5}>";
    static final String[] DFA259_transitionS = {
            "\1\31\11\6\2\uffff\1\6\60\uffff\1\31\2\uffff\1\6\15\uffff\1"+
            "\5\1\6\1\uffff\1\6\2\uffff\1\6\4\uffff\6\6\1\uffff\1\6\1\uffff"+
            "\5\6\12\uffff\1\6\16\uffff\1\31\1\4\1\uffff\16\31\1\uffff\3"+
            "\31\1\uffff\1\31\2\uffff\3\31\11\3\1\uffff\1\31\6\uffff\1\1"+
            "\1\2\20\uffff\1\31\6\3\1\31",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff"
    };

    static final short[] DFA259_eot = DFA.unpackEncodedString(DFA259_eotS);
    static final short[] DFA259_eof = DFA.unpackEncodedString(DFA259_eofS);
    static final char[] DFA259_min = DFA.unpackEncodedStringToUnsignedChars(DFA259_minS);
    static final char[] DFA259_max = DFA.unpackEncodedStringToUnsignedChars(DFA259_maxS);
    static final short[] DFA259_accept = DFA.unpackEncodedString(DFA259_acceptS);
    static final short[] DFA259_special = DFA.unpackEncodedString(DFA259_specialS);
    static final short[][] DFA259_transition;

    static {
        int numStates = DFA259_transitionS.length;
        DFA259_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA259_transition[i] = DFA.unpackEncodedString(DFA259_transitionS[i]);
        }
    }

    class DFA259 extends DFA {

        public DFA259(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 259;
            this.eot = DFA259_eot;
            this.eof = DFA259_eof;
            this.min = DFA259_min;
            this.max = DFA259_max;
            this.accept = DFA259_accept;
            this.special = DFA259_special;
            this.transition = DFA259_transition;
        }
        public String getDescription() {
            return "962:1: for_initializer : ( ( local_variable_declaration )=> local_variable_declaration | statement_expression_list );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA259_0 = input.LA(1);

                         
                        int index259_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA259_0==177) ) {s = 1;}

                        else if ( (LA259_0==178) ) {s = 2;}

                        else if ( ((LA259_0>=160 && LA259_0<=168)||(LA259_0>=196 && LA259_0<=201)) ) {s = 3;}

                        else if ( (LA259_0==133) ) {s = 4;}

                        else if ( (LA259_0==82) && (synpred38_cs())) {s = 5;}

                        else if ( ((LA259_0>=Real_literal && LA259_0<=NULL)||LA259_0==MINUS||LA259_0==68||LA259_0==83||LA259_0==85||LA259_0==88||(LA259_0>=93 && LA259_0<=98)||LA259_0==100||(LA259_0>=102 && LA259_0<=106)||LA259_0==117) ) {s = 6;}

                        else if ( (LA259_0==IDENTIFIER||LA259_0==65||LA259_0==132||(LA259_0>=135 && LA259_0<=148)||(LA259_0>=150 && LA259_0<=152)||LA259_0==154||(LA259_0>=157 && LA259_0<=159)||LA259_0==170||LA259_0==195||LA259_0==202) ) {s = 25;}

                         
                        input.seek(index259_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA259_1 = input.LA(1);

                         
                        int index259_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred38_cs()) ) {s = 5;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index259_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA259_2 = input.LA(1);

                         
                        int index259_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred38_cs()) ) {s = 5;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index259_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA259_3 = input.LA(1);

                         
                        int index259_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred38_cs()) ) {s = 5;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index259_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA259_4 = input.LA(1);

                         
                        int index259_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred38_cs()) ) {s = 5;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index259_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA259_25 = input.LA(1);

                         
                        int index259_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred38_cs()) ) {s = 5;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index259_25);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 259, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA271_eotS =
        "\32\uffff";
    static final String DFA271_eofS =
        "\32\uffff";
    static final String DFA271_minS =
        "\1\4\4\0\24\uffff\1\0";
    static final String DFA271_maxS =
        "\1\u00ca\4\0\24\uffff\1\0";
    static final String DFA271_acceptS =
        "\5\uffff\1\1\1\2\23\uffff";
    static final String DFA271_specialS =
        "\1\0\1\1\1\2\1\3\1\4\24\uffff\1\5}>";
    static final String[] DFA271_transitionS = {
            "\1\31\11\6\2\uffff\1\6\60\uffff\1\31\2\uffff\1\6\15\uffff\1"+
            "\5\1\6\1\uffff\1\6\2\uffff\1\6\4\uffff\6\6\1\uffff\1\6\1\uffff"+
            "\5\6\12\uffff\1\6\16\uffff\1\31\1\4\1\uffff\16\31\1\uffff\3"+
            "\31\1\uffff\1\31\2\uffff\3\31\11\3\1\uffff\1\31\6\uffff\1\1"+
            "\1\2\20\uffff\1\31\6\3\1\31",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff"
    };

    static final short[] DFA271_eot = DFA.unpackEncodedString(DFA271_eotS);
    static final short[] DFA271_eof = DFA.unpackEncodedString(DFA271_eofS);
    static final char[] DFA271_min = DFA.unpackEncodedStringToUnsignedChars(DFA271_minS);
    static final char[] DFA271_max = DFA.unpackEncodedStringToUnsignedChars(DFA271_maxS);
    static final short[] DFA271_accept = DFA.unpackEncodedString(DFA271_acceptS);
    static final short[] DFA271_special = DFA.unpackEncodedString(DFA271_specialS);
    static final short[][] DFA271_transition;

    static {
        int numStates = DFA271_transitionS.length;
        DFA271_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA271_transition[i] = DFA.unpackEncodedString(DFA271_transitionS[i]);
        }
    }

    class DFA271 extends DFA {

        public DFA271(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 271;
            this.eot = DFA271_eot;
            this.eof = DFA271_eof;
            this.min = DFA271_min;
            this.max = DFA271_max;
            this.accept = DFA271_accept;
            this.special = DFA271_special;
            this.transition = DFA271_transition;
        }
        public String getDescription() {
            return "1014:1: resource_acquisition : ( ( local_variable_declaration )=> local_variable_declaration | expression );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA271_0 = input.LA(1);

                         
                        int index271_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA271_0==177) ) {s = 1;}

                        else if ( (LA271_0==178) ) {s = 2;}

                        else if ( ((LA271_0>=160 && LA271_0<=168)||(LA271_0>=196 && LA271_0<=201)) ) {s = 3;}

                        else if ( (LA271_0==133) ) {s = 4;}

                        else if ( (LA271_0==82) && (synpred39_cs())) {s = 5;}

                        else if ( ((LA271_0>=Real_literal && LA271_0<=NULL)||LA271_0==MINUS||LA271_0==68||LA271_0==83||LA271_0==85||LA271_0==88||(LA271_0>=93 && LA271_0<=98)||LA271_0==100||(LA271_0>=102 && LA271_0<=106)||LA271_0==117) ) {s = 6;}

                        else if ( (LA271_0==IDENTIFIER||LA271_0==65||LA271_0==132||(LA271_0>=135 && LA271_0<=148)||(LA271_0>=150 && LA271_0<=152)||LA271_0==154||(LA271_0>=157 && LA271_0<=159)||LA271_0==170||LA271_0==195||LA271_0==202) ) {s = 25;}

                         
                        input.seek(index271_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA271_1 = input.LA(1);

                         
                        int index271_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred39_cs()) ) {s = 5;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index271_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA271_2 = input.LA(1);

                         
                        int index271_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred39_cs()) ) {s = 5;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index271_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA271_3 = input.LA(1);

                         
                        int index271_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred39_cs()) ) {s = 5;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index271_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA271_4 = input.LA(1);

                         
                        int index271_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred39_cs()) ) {s = 5;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index271_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA271_25 = input.LA(1);

                         
                        int index271_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred39_cs()) ) {s = 5;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index271_25);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 271, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_namespace_body_in_compilation_unit76 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_61_in_namespace_declaration86 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_qualified_identifier_in_namespace_declaration90 = new BitSet(new long[]{0x4000000000000000L});
    public static final BitSet FOLLOW_namespace_block_in_namespace_declaration94 = new BitSet(new long[]{0x0000000002000002L});
    public static final BitSet FOLLOW_SEMI_in_namespace_declaration98 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_62_in_namespace_block108 = new BitSet(new long[]{0xA0000000000C0000L,0x000000020041FFF9L,0x0000120008000000L});
    public static final BitSet FOLLOW_namespace_body_in_namespace_block112 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_63_in_namespace_block117 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_extern_alias_directives_in_namespace_body127 = new BitSet(new long[]{0x20000000000C0002L,0x000000020041FFF9L,0x0000120008000000L});
    public static final BitSet FOLLOW_using_directives_in_namespace_body132 = new BitSet(new long[]{0x2000000000080002L,0x000000020041FFF9L,0x0000120008000000L});
    public static final BitSet FOLLOW_global_attributes_in_namespace_body137 = new BitSet(new long[]{0x2000000000080002L,0x000000020041FFF9L,0x0000120008000000L});
    public static final BitSet FOLLOW_namespace_member_declarations_in_namespace_body142 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_extern_alias_directive_in_extern_alias_directives152 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000001L});
    public static final BitSet FOLLOW_64_in_extern_alias_directive162 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_extern_alias_directive166 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_identifier_in_extern_alias_directive170 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_SEMI_in_extern_alias_directive173 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_using_directive_in_using_directives182 = new BitSet(new long[]{0x0000000000040002L});
    public static final BitSet FOLLOW_using_alias_directive_in_using_directive193 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_using_namespace_directive_in_using_directive199 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_USING_in_using_alias_directive209 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_identifier_in_using_alias_directive213 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_66_in_using_alias_directive217 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_namespace_or_type_name_in_using_alias_directive221 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_SEMI_in_using_alias_directive225 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_USING_in_using_namespace_directive234 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_namespace_name_in_using_namespace_directive238 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_SEMI_in_using_namespace_directive242 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_namespace_member_declaration_in_namespace_member_declarations251 = new BitSet(new long[]{0x2000000000080002L,0x000000020041FFF9L,0x0000120008000000L});
    public static final BitSet FOLLOW_namespace_declaration_in_namespace_member_declaration261 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_attributes_in_namespace_member_declaration267 = new BitSet(new long[]{0x2000000000080000L,0x000000020041FFF9L,0x0000120008000000L});
    public static final BitSet FOLLOW_modifiers_in_namespace_member_declaration272 = new BitSet(new long[]{0x2000000000080000L,0x000000020041FFF9L,0x0000120008000000L});
    public static final BitSet FOLLOW_type_declaration_in_namespace_member_declaration277 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_67_in_type_declaration292 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000120008000000L});
    public static final BitSet FOLLOW_class_declaration_in_type_declaration297 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_struct_declaration_in_type_declaration317 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interface_declaration_in_type_declaration337 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_class_declaration_in_type_declaration344 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_struct_declaration_in_type_declaration350 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interface_declaration_in_type_declaration356 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_enum_declaration_in_type_declaration362 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_delegate_declaration_in_type_declaration368 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifier_in_qualified_identifier378 = new BitSet(new long[]{0x0000000000004002L});
    public static final BitSet FOLLOW_DOT_in_qualified_identifier381 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_identifier_in_qualified_identifier383 = new BitSet(new long[]{0x0000000000004002L});
    public static final BitSet FOLLOW_namespace_or_type_name_in_namespace_name395 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_modifier_in_modifiers405 = new BitSet(new long[]{0x0000000000000002L,0x000000000001FFF1L});
    public static final BitSet FOLLOW_set_in_modifier0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_attributes_in_class_member_declaration481 = new BitSet(new long[]{0x2000000000080010L,0x000004020047FFFBL,0x0006D7FFEDFFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_modifiers_in_class_member_declaration488 = new BitSet(new long[]{0x2000000000080010L,0x000004020047FFFBL,0x0006D7FFEDFFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_81_in_class_member_declaration495 = new BitSet(new long[]{0x0000000000000010L,0x0000000000040002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_type_in_class_member_declaration499 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_constant_declarators_in_class_member_declaration503 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_SEMI_in_class_member_declaration507 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_event_declaration_in_class_member_declaration513 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_67_in_class_member_declaration522 = new BitSet(new long[]{0x0000000000003FF0L,0x0000000000000002L,0x000617FFEDDFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_method_declaration_in_class_member_declaration525 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interface_declaration_in_class_member_declaration539 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_class_declaration_in_class_member_declaration553 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_struct_declaration_in_class_member_declaration567 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interface_declaration_in_class_member_declaration574 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_82_in_class_member_declaration581 = new BitSet(new long[]{0x0000000000003FF0L,0x0000000000000002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_method_declaration_in_class_member_declaration585 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_class_member_declaration591 = new BitSet(new long[]{0x0000000000003FF0L,0x0000000000080002L,0x000625FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_method_declaration_in_class_member_declaration605 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_property_declaration_in_class_member_declaration626 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_name_in_class_member_declaration651 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_DOT_in_class_member_declaration653 = new BitSet(new long[]{0x0000000000000000L,0x0000000000080000L});
    public static final BitSet FOLLOW_indexer_declaration_in_class_member_declaration655 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_indexer_declaration_in_class_member_declaration666 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_field_declaration_in_class_member_declaration681 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_operator_declaration_in_class_member_declaration700 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_class_declaration_in_class_member_declaration721 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_struct_declaration_in_class_member_declaration730 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_enum_declaration_in_class_member_declaration738 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_delegate_declaration_in_class_member_declaration748 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_conversion_operator_declaration_in_class_member_declaration756 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_constructor_declaration_in_class_member_declaration762 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_destructor_declaration_in_class_member_declaration769 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_83_in_primary_expression798 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_brackets_in_primary_expression802 = new BitSet(new long[]{0x000000000000C002L,0x0000000001400000L});
    public static final BitSet FOLLOW_primary_expression_part_in_primary_expression806 = new BitSet(new long[]{0x000000000000C002L,0x0000000001400000L});
    public static final BitSet FOLLOW_83_in_primary_expression823 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_brackets_in_primary_expression827 = new BitSet(new long[]{0x000000000000C002L,0x0000000001400000L});
    public static final BitSet FOLLOW_primary_expression_part_in_primary_expression831 = new BitSet(new long[]{0x000000000000C002L,0x0000000001400000L});
    public static final BitSet FOLLOW_primary_expression_start_in_primary_expression838 = new BitSet(new long[]{0x000000000000C002L,0x0000000001400000L});
    public static final BitSet FOLLOW_primary_expression_part_in_primary_expression842 = new BitSet(new long[]{0x000000000000C002L,0x0000000001400000L});
    public static final BitSet FOLLOW_68_in_primary_expression849 = new BitSet(new long[]{0x4000000000000010L,0x0000000000040002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_object_creation_expression_in_primary_expression882 = new BitSet(new long[]{0x000000000000C000L,0x0000000001400000L});
    public static final BitSet FOLLOW_primary_expression_part_in_primary_expression886 = new BitSet(new long[]{0x000000000000C002L,0x0000000001400000L});
    public static final BitSet FOLLOW_delegate_creation_expression_in_primary_expression928 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_object_creation_expression_in_primary_expression940 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_anonymous_object_creation_expression_in_primary_expression952 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_sizeof_expression_in_primary_expression972 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_checked_expression_in_primary_expression989 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unchecked_expression_in_primary_expression1011 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_default_value_expression_in_primary_expression1031 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_anonymous_method_expression_in_primary_expression1047 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_predefined_type_in_primary_expression_start1064 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifier_in_primary_expression_start1093 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_generic_argument_list_in_primary_expression_start1097 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifier_in_primary_expression_start1103 = new BitSet(new long[]{0x0000000000000002L,0x0000000000100000L});
    public static final BitSet FOLLOW_84_in_primary_expression_start1106 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_identifier_in_primary_expression_start1110 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_83_in_primary_expression_start1118 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_85_in_primary_expression_start1125 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_paren_expression_in_primary_expression_start1131 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeof_expression_in_primary_expression_start1137 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_literal_in_primary_expression_start1156 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_access_identifier_in_primary_expression_part1169 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_brackets_or_arguments_in_primary_expression_part1175 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_access_operator_in_access_identifier1184 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_type_or_generic_in_access_identifier1188 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_access_operator0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_brackets_in_brackets_or_arguments1212 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_arguments_in_brackets_or_arguments1216 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_86_in_brackets1225 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1A80012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_expression_list_in_brackets1229 = new BitSet(new long[]{0x0000000000000000L,0x0000000000800000L});
    public static final BitSet FOLLOW_87_in_brackets1234 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_88_in_paren_expression1246 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_expression_in_paren_expression1250 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_RPAREN_in_paren_expression1254 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_88_in_arguments1264 = new BitSet(new long[]{0x0000000004013FF0L,0x002007D7F9280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_argument_list_in_arguments1268 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_RPAREN_in_arguments1273 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_argument_in_argument_list1283 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_89_in_argument_list1286 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7F9280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_argument_in_argument_list1288 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_argument_name_in_argument1299 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7F9280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_argument_value_in_argument1303 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_argument_value_in_argument1309 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifier_in_argument_name1317 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_90_in_argument_name1321 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_argument_value1330 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ref_variable_reference_in_argument_value1337 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_91_in_argument_value1344 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_variable_reference_in_argument_value1348 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_92_in_ref_variable_reference1357 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_88_in_ref_variable_reference1381 = new BitSet(new long[]{0x0000000000000010L,0x0000000000040002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_type_in_ref_variable_reference1385 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_RPAREN_in_ref_variable_reference1389 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7F1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_ref_variable_reference_in_ref_variable_reference1394 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variable_reference_in_ref_variable_reference1398 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variable_reference_in_ref_variable_reference1461 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_variable_reference1473 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rank_specifier_in_rank_specifiers1482 = new BitSet(new long[]{0x0000000000000002L,0x0000000000400000L});
    public static final BitSet FOLLOW_86_in_rank_specifier1501 = new BitSet(new long[]{0x0000000000000000L,0x0000000002800000L});
    public static final BitSet FOLLOW_dim_separators_in_rank_specifier1505 = new BitSet(new long[]{0x0000000000000000L,0x0000000000800000L});
    public static final BitSet FOLLOW_87_in_rank_specifier1510 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_89_in_dim_separators1520 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_type_name_in_delegate_creation_expression1535 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_88_in_delegate_creation_expression1539 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_type_name_in_delegate_creation_expression1543 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_RPAREN_in_delegate_creation_expression1547 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_anonymous_object_initializer_in_anonymous_object_creation_expression1560 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_62_in_anonymous_object_initializer1570 = new BitSet(new long[]{0x8000000000000010L,0x0000000002000002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_member_declarator_list_in_anonymous_object_initializer1574 = new BitSet(new long[]{0x8000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_89_in_anonymous_object_initializer1579 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_63_in_anonymous_object_initializer1584 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_member_declarator_in_member_declarator_list1593 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_89_in_member_declarator_list1597 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_member_declarator_in_member_declarator_list1599 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_identifier_in_member_declarator1612 = new BitSet(new long[]{0x0000000000004000L,0x0000000800000004L});
    public static final BitSet FOLLOW_generic_argument_list_in_member_declarator1617 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DOT_in_member_declarator1631 = new BitSet(new long[]{0x0000000000003FF0L,0x00000007E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_primary_or_array_creation_expression_in_member_declarator1635 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_66_in_member_declarator1649 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_expression_in_member_declarator1653 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_array_creation_expression_in_primary_or_array_creation_expression1669 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_primary_expression_in_primary_or_array_creation_expression1675 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_68_in_array_creation_expression1688 = new BitSet(new long[]{0x4000000000000010L,0x0000000000440002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_type_in_array_creation_expression1698 = new BitSet(new long[]{0x4000000000000010L,0x0000000000440002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_86_in_array_creation_expression1703 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_expression_list_in_array_creation_expression1707 = new BitSet(new long[]{0x0000000000000000L,0x0000000000800000L});
    public static final BitSet FOLLOW_87_in_array_creation_expression1711 = new BitSet(new long[]{0x400000000000C012L,0x0000000001440002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_rank_specifiers_in_array_creation_expression1728 = new BitSet(new long[]{0x4000000000000012L,0x0000000000440002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_array_initializer_in_array_creation_expression1733 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_arguments_in_array_creation_expression1779 = new BitSet(new long[]{0x000000000000C000L,0x0000000001400000L});
    public static final BitSet FOLLOW_invocation_part_in_array_creation_expression1783 = new BitSet(new long[]{0x000000000000C000L,0x0000000001400000L});
    public static final BitSet FOLLOW_invocation_part_in_array_creation_expression1800 = new BitSet(new long[]{0x000000000000C000L,0x0000000001400000L});
    public static final BitSet FOLLOW_arguments_in_array_creation_expression1806 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_array_initializer_in_array_creation_expression1843 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rank_specifier_in_array_creation_expression1864 = new BitSet(new long[]{0x4000000000000010L,0x0000000000440002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_array_initializer_in_array_creation_expression1876 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_62_in_array_initializer1903 = new BitSet(new long[]{0xC000000000013FF0L,0x002007D7E36C0012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_variable_initializer_list_in_array_initializer1907 = new BitSet(new long[]{0x8000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_89_in_array_initializer1912 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_63_in_array_initializer1917 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variable_initializer_in_variable_initializer_list1926 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_89_in_variable_initializer_list1929 = new BitSet(new long[]{0x4000000000013FF0L,0x002007D7E16C0012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_variable_initializer_in_variable_initializer_list1931 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_expression_in_variable_initializer1942 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_array_initializer_in_variable_initializer1947 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_93_in_sizeof_expression1956 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_88_in_sizeof_expression1960 = new BitSet(new long[]{0x0000000000000010L,0x0000000000040002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_unmanaged_type_in_sizeof_expression1964 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_RPAREN_in_sizeof_expression1968 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_94_in_checked_expression1977 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_88_in_checked_expression1981 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_expression_in_checked_expression1985 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_RPAREN_in_checked_expression1989 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_95_in_unchecked_expression1999 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_88_in_unchecked_expression2003 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_expression_in_unchecked_expression2007 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_RPAREN_in_unchecked_expression2011 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_96_in_default_value_expression2021 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_88_in_default_value_expression2025 = new BitSet(new long[]{0x0000000000000010L,0x0000000000040002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_type_in_default_value_expression2029 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_RPAREN_in_default_value_expression2033 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_97_in_anonymous_method_expression2042 = new BitSet(new long[]{0x4000000002000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_explicit_anonymous_function_signature_in_anonymous_method_expression2046 = new BitSet(new long[]{0x4000000002000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_block_in_anonymous_method_expression2051 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_88_in_explicit_anonymous_function_signature2059 = new BitSet(new long[]{0x0000000004000010L,0x0000000018040002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_explicit_anonymous_function_parameter_list_in_explicit_anonymous_function_signature2063 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_RPAREN_in_explicit_anonymous_function_signature2068 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_explicit_anonymous_function_parameter_in_explicit_anonymous_function_parameter_list2077 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_89_in_explicit_anonymous_function_parameter_list2082 = new BitSet(new long[]{0x0000000000000010L,0x0000000018040002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_explicit_anonymous_function_parameter_in_explicit_anonymous_function_parameter_list2086 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_anonymous_function_parameter_modifier_in_explicit_anonymous_function_parameter2099 = new BitSet(new long[]{0x0000000000000010L,0x0000000000040002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_type_in_explicit_anonymous_function_parameter2104 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_identifier_in_explicit_anonymous_function_parameter2108 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_anonymous_function_parameter_modifier0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_object_creation_expression2135 = new BitSet(new long[]{0x4000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_88_in_object_creation_expression2146 = new BitSet(new long[]{0x0000000004013FF0L,0x002007D7F9280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_argument_list_in_object_creation_expression2150 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_RPAREN_in_object_creation_expression2155 = new BitSet(new long[]{0x4000000000000002L,0x0000000001000000L});
    public static final BitSet FOLLOW_object_or_collection_initializer_in_object_creation_expression2159 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_object_or_collection_initializer_in_object_creation_expression2172 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_62_in_object_or_collection_initializer2186 = new BitSet(new long[]{0xC000000000013FF0L,0x002007D7E3280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_object_initializer_in_object_or_collection_initializer2190 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_collection_initializer_in_object_or_collection_initializer2199 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_element_initializer_list_in_collection_initializer2210 = new BitSet(new long[]{0x8000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_89_in_collection_initializer2214 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_63_in_collection_initializer2219 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_element_initializer_in_element_initializer_list2229 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_89_in_element_initializer_list2233 = new BitSet(new long[]{0xC000000000013FF0L,0x002007D7E3280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_element_initializer_in_element_initializer_list2235 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_non_assignment_expression_in_element_initializer2247 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_62_in_element_initializer2254 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_expression_list_in_element_initializer2258 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_63_in_element_initializer2262 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_member_initializer_list_in_object_initializer2278 = new BitSet(new long[]{0x8000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_89_in_object_initializer2283 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_63_in_object_initializer2288 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_member_initializer_in_member_initializer_list2298 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_89_in_member_initializer_list2302 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_member_initializer_in_member_initializer_list2304 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifier_in_member_initializer2315 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_66_in_member_initializer2319 = new BitSet(new long[]{0x4000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_initializer_value_in_member_initializer2323 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_initializer_value2333 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_object_or_collection_initializer_in_initializer_value2340 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_98_in_typeof_expression2353 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_88_in_typeof_expression2357 = new BitSet(new long[]{0x0000000000000010L,0x0000000000040002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_unbound_type_name_in_typeof_expression2368 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_type_in_typeof_expression2384 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_82_in_typeof_expression2401 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_RPAREN_in_typeof_expression2406 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unbound_type_name_start_in_unbound_type_name2424 = new BitSet(new long[]{0x0000000000004000L,0x0000000800000000L});
    public static final BitSet FOLLOW_generic_dimension_specifier_in_unbound_type_name2445 = new BitSet(new long[]{0x0000000000004000L,0x0000000800000000L});
    public static final BitSet FOLLOW_unbound_type_name_part_in_unbound_type_name2449 = new BitSet(new long[]{0x0000000000004000L,0x0000000800000000L});
    public static final BitSet FOLLOW_unbound_type_name_part_in_unbound_type_name2458 = new BitSet(new long[]{0x0000000000004000L,0x0000000800000000L});
    public static final BitSet FOLLOW_generic_dimension_specifier_in_unbound_type_name2471 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifier_in_unbound_type_name_start2483 = new BitSet(new long[]{0x0000000000000002L,0x0000000000100000L});
    public static final BitSet FOLLOW_84_in_unbound_type_name_start2486 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_identifier_in_unbound_type_name_start2488 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DOT_in_unbound_type_name_part2498 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_identifier_in_unbound_type_name_part2502 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_99_in_generic_dimension_specifier2511 = new BitSet(new long[]{0x0000000000020000L,0x0000000002000000L});
    public static final BitSet FOLLOW_commas_in_generic_dimension_specifier2515 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_GT_in_generic_dimension_specifier2520 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_89_in_commas2530 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_namespace_or_type_name_in_type_name2547 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_or_generic_in_namespace_or_type_name2557 = new BitSet(new long[]{0x0000000000004002L,0x0000000000100000L});
    public static final BitSet FOLLOW_84_in_namespace_or_type_name2562 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_type_or_generic_in_namespace_or_type_name2564 = new BitSet(new long[]{0x0000000000004002L});
    public static final BitSet FOLLOW_DOT_in_namespace_or_type_name2569 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_type_or_generic_in_namespace_or_type_name2573 = new BitSet(new long[]{0x0000000000004002L});
    public static final BitSet FOLLOW_identifier_in_type_or_generic2594 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_generic_argument_list_in_type_or_generic2598 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifier_in_type_or_generic2604 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_qid_start_in_qid2618 = new BitSet(new long[]{0x000000000000C002L});
    public static final BitSet FOLLOW_qid_part_in_qid2622 = new BitSet(new long[]{0x000000000000C002L});
    public static final BitSet FOLLOW_predefined_type_in_qid_start2634 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifier_in_qid_start2651 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_generic_argument_list_in_qid_start2655 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifier_in_qid_start2663 = new BitSet(new long[]{0x0000000000000002L,0x0000000000100000L});
    public static final BitSet FOLLOW_84_in_qid_start2668 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_identifier_in_qid_start2672 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_literal_in_qid_start2680 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_access_identifier_in_qid_part2697 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_99_in_generic_argument_list2708 = new BitSet(new long[]{0x0000000000000010L,0x0000000000040002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_type_arguments_in_generic_argument_list2712 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_GT_in_generic_argument_list2716 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_type_arguments2726 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_89_in_type_arguments2729 = new BitSet(new long[]{0x0000000000000010L,0x0000000000040002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_type_in_type_arguments2731 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_predefined_type_in_type2761 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_type_name_in_type2765 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_rank_specifiers_in_type2770 = new BitSet(new long[]{0x0000000000000002L,0x0000001000000000L});
    public static final BitSet FOLLOW_100_in_type2774 = new BitSet(new long[]{0x0000000000000002L,0x0000001000000000L});
    public static final BitSet FOLLOW_predefined_type_in_type2804 = new BitSet(new long[]{0x0000000000000000L,0x0000003000000000L});
    public static final BitSet FOLLOW_type_name_in_type2808 = new BitSet(new long[]{0x0000000000000000L,0x0000003000000000L});
    public static final BitSet FOLLOW_100_in_type2814 = new BitSet(new long[]{0x0000000000000002L,0x0000001000000000L});
    public static final BitSet FOLLOW_101_in_type2819 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_predefined_type_in_type2827 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_name_in_type2831 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_82_in_type2838 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_100_in_type2840 = new BitSet(new long[]{0x0000000000000002L,0x0000001000000000L});
    public static final BitSet FOLLOW_predefined_type_in_non_nullable_type2853 = new BitSet(new long[]{0x0000000000000002L,0x0000001000400000L});
    public static final BitSet FOLLOW_type_name_in_non_nullable_type2857 = new BitSet(new long[]{0x0000000000000002L,0x0000001000400000L});
    public static final BitSet FOLLOW_rank_specifiers_in_non_nullable_type2868 = new BitSet(new long[]{0x0000000000000002L,0x0000001000000000L});
    public static final BitSet FOLLOW_100_in_non_nullable_type2872 = new BitSet(new long[]{0x0000000000000002L,0x0000001000000000L});
    public static final BitSet FOLLOW_100_in_non_nullable_type2884 = new BitSet(new long[]{0x0000000000000002L,0x0000001000000000L});
    public static final BitSet FOLLOW_82_in_non_nullable_type2899 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_100_in_non_nullable_type2903 = new BitSet(new long[]{0x0000000000000002L,0x0000001000000000L});
    public static final BitSet FOLLOW_type_in_non_array_type2916 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_array_type2924 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_unmanaged_type2932 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_class_type2940 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_pointer_type2948 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SEMI_in_block2961 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_62_in_block2967 = new BitSet(new long[]{0xC000000002153FF0L,0x002007D7E12E0212L,0xFFA705FFE7DFFFB0L,0x00000000000007FCL});
    public static final BitSet FOLLOW_statement_list_in_block2971 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_63_in_block2976 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_statement_in_statement_list2984 = new BitSet(new long[]{0x4000000002153FF2L,0x002007D7E12E0212L,0xFFA705FFE7DFFFB0L,0x00000000000007FCL});
    public static final BitSet FOLLOW_assignment_in_expression3011 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_non_assignment_expression_in_expression3019 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_expression_list3030 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_89_in_expression_list3034 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_expression_in_expression_list3038 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_unary_expression_in_assignment3049 = new BitSet(new long[]{0x0000000000020000L,0x000FF80000000004L});
    public static final BitSet FOLLOW_assignment_operator_in_assignment3053 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_expression_in_assignment3057 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_cast_expression_in_unary_expression3076 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_primary_or_array_creation_expression_in_unary_expression3082 = new BitSet(new long[]{0x0000000000000002L,0x000000C000000000L});
    public static final BitSet FOLLOW_102_in_unary_expression3086 = new BitSet(new long[]{0x0000000000000002L,0x0000008000000000L});
    public static final BitSet FOLLOW_103_in_unary_expression3091 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_104_in_unary_expression3098 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_unary_expression_in_unary_expression3102 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_MINUS_in_unary_expression3109 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_unary_expression_in_unary_expression3113 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_105_in_unary_expression3120 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_unary_expression_in_unary_expression3124 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_106_in_unary_expression3131 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_unary_expression_in_unary_expression3135 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_pre_increment_expression_in_unary_expression3142 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_pre_decrement_expression_in_unary_expression3149 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_pointer_indirection_expression_in_unary_expression3156 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_addressof_expression_in_unary_expression3162 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_88_in_cast_expression3174 = new BitSet(new long[]{0x0000000000000010L,0x0000000000040002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_type_in_cast_expression3178 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_RPAREN_in_cast_expression3182 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_unary_expression_in_cast_expression3186 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_66_in_assignment_operator3195 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_107_in_assignment_operator3199 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_108_in_assignment_operator3203 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_109_in_assignment_operator3207 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_110_in_assignment_operator3211 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_111_in_assignment_operator3215 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_112_in_assignment_operator3219 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_113_in_assignment_operator3223 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_114_in_assignment_operator3227 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_115_in_assignment_operator3231 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_GT_in_assignment_operator3235 = new BitSet(new long[]{0x0000000000000000L,0x0010000000000000L});
    public static final BitSet FOLLOW_116_in_assignment_operator3237 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_102_in_pre_increment_expression3247 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_unary_expression_in_pre_increment_expression3251 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_103_in_pre_decrement_expression3261 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_unary_expression_in_pre_decrement_expression3265 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_100_in_pointer_indirection_expression3274 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_unary_expression_in_pointer_indirection_expression3278 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_117_in_addressof_expression3287 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_unary_expression_in_addressof_expression3291 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_lambda_expression_in_non_assignment_expression3314 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_query_expression_in_non_assignment_expression3326 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_conditional_expression_in_non_assignment_expression3333 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unary_expression_in_multiplicative_expression3349 = new BitSet(new long[]{0x0000000000000002L,0x00C0001000000000L});
    public static final BitSet FOLLOW_set_in_multiplicative_expression3354 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_unary_expression_in_multiplicative_expression3364 = new BitSet(new long[]{0x0000000000000002L,0x00C0001000000000L});
    public static final BitSet FOLLOW_multiplicative_expression_in_additive_expression3376 = new BitSet(new long[]{0x0000000000010002L,0x0000010000000000L});
    public static final BitSet FOLLOW_set_in_additive_expression3379 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_multiplicative_expression_in_additive_expression3387 = new BitSet(new long[]{0x0000000000010002L,0x0000010000000000L});
    public static final BitSet FOLLOW_additive_expression_in_shift_expression3399 = new BitSet(new long[]{0x0000000000020002L,0x0100000000000000L});
    public static final BitSet FOLLOW_120_in_shift_expression3403 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_GT_in_shift_expression3405 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_GT_in_shift_expression3407 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_additive_expression_in_shift_expression3410 = new BitSet(new long[]{0x0000000000020002L,0x0100000000000000L});
    public static final BitSet FOLLOW_shift_expression_in_relational_expression3421 = new BitSet(new long[]{0x0000000000020002L,0x0E10000800000000L});
    public static final BitSet FOLLOW_set_in_relational_expression3430 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_shift_expression_in_relational_expression3441 = new BitSet(new long[]{0x0000000000020002L,0x0E10000800000000L});
    public static final BitSet FOLLOW_set_in_relational_expression3453 = new BitSet(new long[]{0x0000000000000010L,0x0000000000040002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_non_nullable_type_in_relational_expression3461 = new BitSet(new long[]{0x0000000000020002L,0x0E10000800000000L});
    public static final BitSet FOLLOW_relational_expression_in_equality_expression3478 = new BitSet(new long[]{0x0000000000000002L,0x3000000000000000L});
    public static final BitSet FOLLOW_set_in_equality_expression3486 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_relational_expression_in_equality_expression3494 = new BitSet(new long[]{0x0000000000000002L,0x3000000000000000L});
    public static final BitSet FOLLOW_equality_expression_in_and_expression3505 = new BitSet(new long[]{0x0000000000000002L,0x0020000000000000L});
    public static final BitSet FOLLOW_117_in_and_expression3508 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_equality_expression_in_and_expression3512 = new BitSet(new long[]{0x0000000000000002L,0x0020000000000000L});
    public static final BitSet FOLLOW_and_expression_in_exclusive_or_expression3523 = new BitSet(new long[]{0x0000000000000002L,0x4000000000000000L});
    public static final BitSet FOLLOW_126_in_exclusive_or_expression3526 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_and_expression_in_exclusive_or_expression3530 = new BitSet(new long[]{0x0000000000000002L,0x4000000000000000L});
    public static final BitSet FOLLOW_exclusive_or_expression_in_inclusive_or_expression3541 = new BitSet(new long[]{0x0000000000000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_127_in_inclusive_or_expression3546 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_exclusive_or_expression_in_inclusive_or_expression3550 = new BitSet(new long[]{0x0000000000000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_inclusive_or_expression_in_conditional_and_expression3561 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_128_in_conditional_and_expression3566 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_inclusive_or_expression_in_conditional_and_expression3570 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_conditional_and_expression_in_conditional_or_expression3581 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_129_in_conditional_or_expression3585 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_conditional_and_expression_in_conditional_or_expression3589 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_conditional_or_expression_in_null_coalescing_expression3601 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_130_in_null_coalescing_expression3606 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_conditional_or_expression_in_null_coalescing_expression3610 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_null_coalescing_expression_in_conditional_expression3621 = new BitSet(new long[]{0x0000000000000002L,0x0000002000000000L});
    public static final BitSet FOLLOW_101_in_conditional_expression3626 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_expression_in_conditional_expression3630 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_90_in_conditional_expression3634 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_expression_in_conditional_expression3638 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_anonymous_function_signature_in_lambda_expression3659 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_131_in_lambda_expression3663 = new BitSet(new long[]{0x4000000002013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_anonymous_function_body_in_lambda_expression3667 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_88_in_anonymous_function_signature3675 = new BitSet(new long[]{0x0000000004000010L,0x0000000019040002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_explicit_anonymous_function_parameter_list_in_anonymous_function_signature3678 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_implicit_anonymous_function_parameter_list_in_anonymous_function_signature3686 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_RPAREN_in_anonymous_function_signature3691 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_implicit_anonymous_function_parameter_list_in_anonymous_function_signature3697 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_implicit_anonymous_function_parameter_in_implicit_anonymous_function_parameter_list3708 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_89_in_implicit_anonymous_function_parameter_list3713 = new BitSet(new long[]{0x0000000000000010L,0x0000000001000002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_implicit_anonymous_function_parameter_in_implicit_anonymous_function_parameter_list3717 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_identifier_in_implicit_anonymous_function_parameter3728 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_anonymous_function_body3736 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_anonymous_function_body3742 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_from_clause_in_query_expression3755 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x000000000002CCA0L});
    public static final BitSet FOLLOW_query_body_in_query_expression3759 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_query_body_clauses_in_query_body3771 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x000000000002CCA0L});
    public static final BitSet FOLLOW_select_or_group_clause_in_query_body3776 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_query_continuation_in_query_body3787 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_132_in_query_continuation3798 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_identifier_in_query_continuation3802 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x000000000002CCA0L});
    public static final BitSet FOLLOW_query_body_in_query_continuation3806 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_query_body_clause_in_query_body_clauses3814 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000020CA0L});
    public static final BitSet FOLLOW_from_clause_in_query_body_clause3824 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_let_clause_in_query_body_clause3830 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_where_clause_in_query_body_clause3836 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_join_clause_in_query_body_clause3842 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_orderby_clause_in_query_body_clause3848 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_133_in_from_clause3856 = new BitSet(new long[]{0x0000000000000010L,0x0000000000040002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_type_in_from_clause3860 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_identifier_in_from_clause3865 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_134_in_from_clause3869 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_expression_in_from_clause3873 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_135_in_join_clause3882 = new BitSet(new long[]{0x0000000000000010L,0x0000000000040002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_type_in_join_clause3886 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_identifier_in_join_clause3891 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_134_in_join_clause3895 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_expression_in_join_clause3899 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_136_in_join_clause3903 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_expression_in_join_clause3907 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_137_in_join_clause3911 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_expression_in_join_clause3915 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_132_in_join_clause3918 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_identifier_in_join_clause3920 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_138_in_let_clause3931 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_identifier_in_let_clause3935 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_66_in_let_clause3939 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_expression_in_let_clause3943 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_139_in_orderby_clause3951 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_ordering_list_in_orderby_clause3955 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ordering_in_ordering_list3964 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_89_in_ordering_list3969 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_ordering_in_ordering_list3973 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_expression_in_ordering3984 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000003000L});
    public static final BitSet FOLLOW_ordering_direction_in_ordering3989 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_ordering_direction0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_select_clause_in_select_or_group_clause4015 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_group_clause_in_select_or_group_clause4021 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_142_in_select_clause4030 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_expression_in_select_clause4034 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_143_in_group_clause4043 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_expression_in_group_clause4047 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000010000L});
    public static final BitSet FOLLOW_144_in_group_clause4051 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_expression_in_group_clause4055 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_145_in_where_clause4064 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_boolean_expression_in_where_clause4068 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_boolean_expression4077 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_global_attribute_in_global_attributes4090 = new BitSet(new long[]{0x0000000000000002L,0x0000000000400000L});
    public static final BitSet FOLLOW_86_in_global_attribute4101 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x00000000000C0000L});
    public static final BitSet FOLLOW_global_attribute_target_specifier_in_global_attribute4105 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_attribute_list_in_global_attribute4109 = new BitSet(new long[]{0x0000000000000000L,0x0000000002800000L});
    public static final BitSet FOLLOW_89_in_global_attribute4113 = new BitSet(new long[]{0x0000000000000000L,0x0000000000800000L});
    public static final BitSet FOLLOW_87_in_global_attribute4118 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_global_attribute_target_in_global_attribute_target_specifier4128 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_90_in_global_attribute_target_specifier4132 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_global_attribute_target0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_attribute_sections_in_attributes4156 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_attribute_section_in_attribute_sections4166 = new BitSet(new long[]{0x0000000000000002L,0x0000000000400000L});
    public static final BitSet FOLLOW_86_in_attribute_section4177 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x000605FFE7FFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_attribute_target_specifier_in_attribute_section4181 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_attribute_list_in_attribute_section4186 = new BitSet(new long[]{0x0000000000000000L,0x0000000002800000L});
    public static final BitSet FOLLOW_89_in_attribute_section4190 = new BitSet(new long[]{0x0000000000000000L,0x0000000000800000L});
    public static final BitSet FOLLOW_87_in_attribute_section4195 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_attribute_target_in_attribute_target_specifier4205 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_90_in_attribute_target_specifier4209 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_attribute_target0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_attribute_in_attribute_list4253 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_89_in_attribute_list4256 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_attribute_in_attribute_list4258 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_type_name_in_attribute4271 = new BitSet(new long[]{0x0000000000000002L,0x0000000001000000L});
    public static final BitSet FOLLOW_attribute_arguments_in_attribute4275 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_88_in_attribute_arguments4287 = new BitSet(new long[]{0x0000000004013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_RPAREN_in_attribute_arguments4292 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_positional_argument_in_attribute_arguments4324 = new BitSet(new long[]{0x0000000004000010L,0x0000000002000002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_named_argument_in_attribute_arguments4343 = new BitSet(new long[]{0x0000000004000010L,0x0000000002000002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_89_in_attribute_arguments4367 = new BitSet(new long[]{0x0000000004013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_positional_argument_in_attribute_arguments4369 = new BitSet(new long[]{0x0000000004000010L,0x0000000002000002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_RPAREN_in_attribute_arguments4383 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_positional_argument_in_positional_argument_list4401 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_89_in_positional_argument_list4404 = new BitSet(new long[]{0x0000000004013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_positional_argument_in_positional_argument_list4406 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_attribute_argument_expression_in_positional_argument4418 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_named_argument_in_named_argument_list4428 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_89_in_named_argument_list4431 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_named_argument_in_named_argument_list4433 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_identifier_in_named_argument4445 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_66_in_named_argument4449 = new BitSet(new long[]{0x0000000004013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_attribute_argument_expression_in_named_argument4453 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_attribute_argument_expression4463 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_155_in_class_declaration4477 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_type_or_generic_in_class_declaration4480 = new BitSet(new long[]{0x4000000000000000L,0x0000000004000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_class_base_in_class_declaration4484 = new BitSet(new long[]{0x4000000000000000L,0x0000000004000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_type_parameter_constraints_clauses_in_class_declaration4489 = new BitSet(new long[]{0x4000000000000000L,0x0000000004000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_class_body_in_class_declaration4494 = new BitSet(new long[]{0x0000000002000002L});
    public static final BitSet FOLLOW_SEMI_in_class_declaration4498 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_90_in_class_base4514 = new BitSet(new long[]{0x0000000000000010L,0x0000000000040002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_interface_type_list_in_class_base4518 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_interface_type_list4530 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_89_in_interface_type_list4533 = new BitSet(new long[]{0x0000000000000010L,0x0000000000040002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_type_in_interface_type_list4537 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_62_in_class_body4549 = new BitSet(new long[]{0xA000000000080010L,0x000004020047FFFBL,0x0006D7FFEDFFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_class_member_declarations_in_class_body4553 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_63_in_class_body4558 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_class_member_declaration_in_class_member_declarations4567 = new BitSet(new long[]{0x2000000000080012L,0x000004020047FFFBL,0x0006D7FFEDFFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_81_in_constant_declaration4579 = new BitSet(new long[]{0x0000000000000010L,0x0000000000040002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_type_in_constant_declaration4583 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_constant_declarators_in_constant_declaration4587 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_SEMI_in_constant_declaration4591 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_constant_declarator_in_constant_declarators4600 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_89_in_constant_declarators4603 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_constant_declarator_in_constant_declarators4605 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_identifier_in_constant_declarator4616 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000004L});
    public static final BitSet FOLLOW_66_in_constant_declarator4621 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_constant_expression_in_constant_declarator4625 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_constant_expression4636 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variable_declarators_in_field_declaration4646 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_SEMI_in_field_declaration4650 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variable_declarator_in_variable_declarators4660 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_89_in_variable_declarators4663 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_variable_declarator_in_variable_declarators4667 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_type_name_in_variable_declarator4678 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000004L});
    public static final BitSet FOLLOW_66_in_variable_declarator4681 = new BitSet(new long[]{0x4000000000013FF0L,0x002007D7E16C0012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_variable_initializer_in_variable_declarator4685 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_method_header_in_method_declaration4701 = new BitSet(new long[]{0x4000000002000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_method_body_in_method_declaration4705 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_member_name_in_method_header4714 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_88_in_method_header4717 = new BitSet(new long[]{0x0000000004000010L,0x00000000184C0002L,0x00060DFFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_formal_parameter_list_in_method_header4721 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_RPAREN_in_method_header4726 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_type_parameter_constraints_clauses_in_method_header4730 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_method_body4740 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_qid_in_member_name4749 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_member_name_in_property_declaration4763 = new BitSet(new long[]{0x4000000000000000L});
    public static final BitSet FOLLOW_62_in_property_declaration4767 = new BitSet(new long[]{0x0000000000000000L,0x00000000004001E0L,0x0000000030000000L});
    public static final BitSet FOLLOW_accessor_declarations_in_property_declaration4771 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_63_in_property_declaration4775 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_attributes_in_accessor_declarations4784 = new BitSet(new long[]{0x0000000000000000L,0x00000000004001E0L,0x0000000030000000L});
    public static final BitSet FOLLOW_get_accessor_declaration_in_accessor_declarations4792 = new BitSet(new long[]{0x0000000000000002L,0x00000000004001E0L,0x0000000030000000L});
    public static final BitSet FOLLOW_attributes_in_accessor_declarations4796 = new BitSet(new long[]{0x0000000000000002L,0x00000000004001E0L,0x0000000030000000L});
    public static final BitSet FOLLOW_set_accessor_declaration_in_accessor_declarations4801 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_accessor_declaration_in_accessor_declarations4810 = new BitSet(new long[]{0x0000000000000002L,0x00000000004001E0L,0x0000000010000000L});
    public static final BitSet FOLLOW_attributes_in_accessor_declarations4814 = new BitSet(new long[]{0x0000000000000002L,0x00000000000001E0L,0x0000000010000000L});
    public static final BitSet FOLLOW_get_accessor_declaration_in_accessor_declarations4819 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_accessor_modifier_in_get_accessor_declaration4830 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_156_in_get_accessor_declaration4835 = new BitSet(new long[]{0x4000000002000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_accessor_body_in_get_accessor_declaration4839 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_accessor_modifier_in_set_accessor_declaration4848 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_157_in_set_accessor_declaration4853 = new BitSet(new long[]{0x4000000002000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_accessor_body_in_set_accessor_declaration4857 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_accessor_modifier0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_accessor_body4887 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_149_in_event_declaration4898 = new BitSet(new long[]{0x0000000000000010L,0x0000000000040002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_type_in_event_declaration4902 = new BitSet(new long[]{0x0000000000003FF0L,0x0000000000000002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_member_name_in_event_declaration4919 = new BitSet(new long[]{0x4000000000000000L});
    public static final BitSet FOLLOW_62_in_event_declaration4923 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L,0x00000000C0000000L});
    public static final BitSet FOLLOW_event_accessor_declarations_in_event_declaration4927 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_63_in_event_declaration4931 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variable_declarators_in_event_declaration4939 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_SEMI_in_event_declaration4943 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_modifier_in_event_modifiers4958 = new BitSet(new long[]{0x0000000000000002L,0x000000000001FFF1L});
    public static final BitSet FOLLOW_attributes_in_event_accessor_declarations4968 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L,0x00000000C0000000L});
    public static final BitSet FOLLOW_add_accessor_declaration_in_event_accessor_declarations4975 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L,0x00000000C0000000L});
    public static final BitSet FOLLOW_attributes_in_event_accessor_declarations4979 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L,0x00000000C0000000L});
    public static final BitSet FOLLOW_remove_accessor_declaration_in_event_accessor_declarations4984 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_remove_accessor_declaration_in_event_accessor_declarations5006 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L,0x0000000040000000L});
    public static final BitSet FOLLOW_attributes_in_event_accessor_declarations5010 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_add_accessor_declaration_in_event_accessor_declarations5015 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_158_in_add_accessor_declaration5026 = new BitSet(new long[]{0x4000000002000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_block_in_add_accessor_declaration5030 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_159_in_remove_accessor_declaration5039 = new BitSet(new long[]{0x4000000002000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_block_in_remove_accessor_declaration5043 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ENUM_in_enum_declaration5056 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_identifier_in_enum_declaration5060 = new BitSet(new long[]{0x4000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_enum_base_in_enum_declaration5064 = new BitSet(new long[]{0x4000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_enum_body_in_enum_declaration5069 = new BitSet(new long[]{0x0000000002000002L});
    public static final BitSet FOLLOW_SEMI_in_enum_declaration5073 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_90_in_enum_base5083 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x000001FF00000000L});
    public static final BitSet FOLLOW_integral_type_in_enum_base5087 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_62_in_enum_body5096 = new BitSet(new long[]{0x8000000000000010L,0x0000000000400002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_enum_member_declarations_in_enum_body5099 = new BitSet(new long[]{0x8000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_89_in_enum_body5101 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_63_in_enum_body5108 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_enum_member_declaration_in_enum_member_declarations5117 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_89_in_enum_member_declarations5120 = new BitSet(new long[]{0x0000000000000010L,0x0000000000400002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_enum_member_declaration_in_enum_member_declarations5122 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_attributes_in_enum_member_declaration5133 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_identifier_in_enum_member_declaration5138 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000004L});
    public static final BitSet FOLLOW_66_in_enum_member_declaration5143 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_expression_in_enum_member_declaration5147 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_integral_type0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_97_in_delegate_declaration5206 = new BitSet(new long[]{0x0000000000000010L,0x0000000000040002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_return_type_in_delegate_declaration5210 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_identifier_in_delegate_declaration5214 = new BitSet(new long[]{0x0000000000000000L,0x0000000801000000L});
    public static final BitSet FOLLOW_variant_generic_parameter_list_in_delegate_declaration5217 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_88_in_delegate_declaration5227 = new BitSet(new long[]{0x0000000004000010L,0x00000000184C0002L,0x00060DFFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_formal_parameter_list_in_delegate_declaration5231 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_RPAREN_in_delegate_declaration5236 = new BitSet(new long[]{0x0000000002000000L,0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_type_parameter_constraints_clauses_in_delegate_declaration5240 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_SEMI_in_delegate_declaration5245 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_modifier_in_delegate_modifiers5254 = new BitSet(new long[]{0x0000000000000002L,0x000000000001FFF1L});
    public static final BitSet FOLLOW_99_in_variant_generic_parameter_list5265 = new BitSet(new long[]{0x0000000000000010L,0x0000000008400002L,0x00060400E5DFFFF0L,0x0000000000000408L});
    public static final BitSet FOLLOW_variant_type_parameters_in_variant_generic_parameter_list5269 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_GT_in_variant_generic_parameter_list5273 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variant_type_variable_name_in_variant_type_parameters5282 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_89_in_variant_type_parameters5285 = new BitSet(new long[]{0x0000000000000010L,0x0000000008400002L,0x00060400E5DFFFF0L,0x0000000000000408L});
    public static final BitSet FOLLOW_variant_type_variable_name_in_variant_type_parameters5287 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_attributes_in_variant_type_variable_name5298 = new BitSet(new long[]{0x0000000000000010L,0x0000000008400002L,0x00060400E5DFFFF0L,0x0000000000000408L});
    public static final BitSet FOLLOW_variance_annotation_in_variant_type_variable_name5303 = new BitSet(new long[]{0x0000000000000010L,0x0000000008400002L,0x00060400E5DFFFF0L,0x0000000000000408L});
    public static final BitSet FOLLOW_type_variable_name_in_variant_type_variable_name5308 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_variance_annotation0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_parameter_constraints_clause_in_type_parameter_constraints_clauses5331 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_89_in_type_parameter_constraints_clauses5336 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_type_parameter_constraints_clause_in_type_parameter_constraints_clauses5340 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_145_in_type_parameter_constraints_clause5351 = new BitSet(new long[]{0x0000000000000010L,0x0000000008400002L,0x00060400E5DFFFF0L,0x0000000000000408L});
    public static final BitSet FOLLOW_type_variable_name_in_type_parameter_constraints_clause5355 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_90_in_type_parameter_constraints_clause5359 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000012L,0x000607FFEDDFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_type_parameter_constraint_list_in_type_parameter_constraints_clause5363 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_type_parameter_constraint_list5426 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_89_in_type_parameter_constraint_list5437 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_secondary_constraint_list_in_type_parameter_constraint_list5441 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_89_in_type_parameter_constraint_list5448 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000012L,0x000607FFEDDFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_constructor_constraint_in_type_parameter_constraint_list5452 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_secondary_constraint_list_in_type_parameter_constraint_list5460 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_89_in_type_parameter_constraint_list5465 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000012L,0x000607FFEDDFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_constructor_constraint_in_type_parameter_constraint_list5469 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_constructor_constraint_in_type_parameter_constraint_list5477 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_secondary_constraint_in_secondary_constraint_list5490 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_89_in_secondary_constraint_list5493 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_secondary_constraint_in_secondary_constraint_list5495 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_type_name_in_secondary_constraint5506 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifier_in_type_variable_name5517 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_68_in_constructor_constraint5526 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_88_in_constructor_constraint5530 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_RPAREN_in_constructor_constraint5534 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_return_type5543 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_82_in_return_type5550 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_formal_parameter_in_formal_parameter_list5558 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_89_in_formal_parameter_list5561 = new BitSet(new long[]{0x0000000000000010L,0x00000000184C0002L,0x00060DFFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_formal_parameter_in_formal_parameter_list5563 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_attributes_in_formal_parameter5574 = new BitSet(new long[]{0x0000000000000010L,0x00000000184C0002L,0x00060DFFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_fixed_parameter_in_formal_parameter5580 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parameter_array_in_formal_parameter5584 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_170_in_formal_parameter5592 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_fixed_parameter_in_fixed_parameters5602 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_89_in_fixed_parameters5607 = new BitSet(new long[]{0x0000000000000010L,0x00000000180C0002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_fixed_parameter_in_fixed_parameters5611 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_parameter_modifier_in_fixed_parameter5623 = new BitSet(new long[]{0x0000000000000010L,0x0000000000040002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_type_in_fixed_parameter5628 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_identifier_in_fixed_parameter5632 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000004L});
    public static final BitSet FOLLOW_default_argument_in_fixed_parameter5636 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_66_in_default_argument5647 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_expression_in_default_argument5649 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_parameter_modifier0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_171_in_parameter_array5674 = new BitSet(new long[]{0x0000000000000010L,0x0000000000040002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_type_in_parameter_array5678 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_identifier_in_parameter_array5682 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_172_in_interface_declaration5693 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_identifier_in_interface_declaration5697 = new BitSet(new long[]{0x4000000000000000L,0x0000000804000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_variant_generic_parameter_list_in_interface_declaration5701 = new BitSet(new long[]{0x4000000000000000L,0x0000000804000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_interface_base_in_interface_declaration5711 = new BitSet(new long[]{0x4000000000000000L,0x0000000804000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_type_parameter_constraints_clauses_in_interface_declaration5716 = new BitSet(new long[]{0x4000000000000000L,0x0000000804000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_interface_body_in_interface_declaration5721 = new BitSet(new long[]{0x0000000002000002L});
    public static final BitSet FOLLOW_SEMI_in_interface_declaration5725 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_modifier_in_interface_modifiers5736 = new BitSet(new long[]{0x0000000000000002L,0x000000000001FFF1L});
    public static final BitSet FOLLOW_90_in_interface_base5749 = new BitSet(new long[]{0x0000000000000010L,0x0000000000040002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_interface_type_list_in_interface_base5751 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_62_in_interface_body5760 = new BitSet(new long[]{0x8000000000000010L,0x000000000045FFF3L,0x000605FFE5FFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_interface_member_declarations_in_interface_body5764 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_63_in_interface_body5769 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interface_member_declaration_in_interface_member_declarations5778 = new BitSet(new long[]{0x0000000000000012L,0x000000000045FFF3L,0x000605FFE5FFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_attributes_in_interface_member_declaration5788 = new BitSet(new long[]{0x0000000000000010L,0x000000000005FFF3L,0x000605FFE5FFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_modifiers_in_interface_member_declaration5794 = new BitSet(new long[]{0x0000000000000010L,0x0000000000040002L,0x000605FFE5FFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_82_in_interface_member_declaration5802 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_interface_method_declaration_in_interface_member_declaration5806 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interface_event_declaration_in_interface_member_declaration5814 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_interface_member_declaration5822 = new BitSet(new long[]{0x0000000000000010L,0x0000000000080002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_interface_method_declaration_in_interface_member_declaration5838 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interface_property_declaration_in_interface_member_declaration5865 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interface_indexer_declaration_in_interface_member_declaration5879 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifier_in_interface_property_declaration5901 = new BitSet(new long[]{0x4000000000000000L});
    public static final BitSet FOLLOW_62_in_interface_property_declaration5905 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L,0x0000000030000000L});
    public static final BitSet FOLLOW_interface_accessor_declarations_in_interface_property_declaration5909 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_63_in_interface_property_declaration5913 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifier_in_interface_method_declaration5922 = new BitSet(new long[]{0x0000000000000000L,0x0000000801000000L});
    public static final BitSet FOLLOW_generic_argument_list_in_interface_method_declaration5926 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_88_in_interface_method_declaration5935 = new BitSet(new long[]{0x0000000004000010L,0x00000000184C0002L,0x00060DFFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_formal_parameter_list_in_interface_method_declaration5939 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_RPAREN_in_interface_method_declaration5944 = new BitSet(new long[]{0x0000000002000000L,0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_type_parameter_constraints_clauses_in_interface_method_declaration5948 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_SEMI_in_interface_method_declaration5953 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_149_in_interface_event_declaration5966 = new BitSet(new long[]{0x0000000000000010L,0x0000000000040002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_type_in_interface_event_declaration5970 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_identifier_in_interface_event_declaration5974 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_SEMI_in_interface_event_declaration5978 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_83_in_interface_indexer_declaration5992 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_86_in_interface_indexer_declaration5996 = new BitSet(new long[]{0x0000000000000010L,0x00000000184C0002L,0x00060DFFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_formal_parameter_list_in_interface_indexer_declaration6000 = new BitSet(new long[]{0x0000000000000000L,0x0000000000800000L});
    public static final BitSet FOLLOW_87_in_interface_indexer_declaration6004 = new BitSet(new long[]{0x4000000000000000L});
    public static final BitSet FOLLOW_62_in_interface_indexer_declaration6008 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L,0x0000000030000000L});
    public static final BitSet FOLLOW_interface_accessor_declarations_in_interface_indexer_declaration6012 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_63_in_interface_indexer_declaration6016 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_attributes_in_interface_accessor_declarations6025 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L,0x0000000030000000L});
    public static final BitSet FOLLOW_interface_get_accessor_declaration_in_interface_accessor_declarations6036 = new BitSet(new long[]{0x0000000000000002L,0x0000000000400000L,0x0000000030000000L});
    public static final BitSet FOLLOW_attributes_in_interface_accessor_declarations6040 = new BitSet(new long[]{0x0000000000000002L,0x0000000000400000L,0x0000000030000000L});
    public static final BitSet FOLLOW_interface_set_accessor_declaration_in_interface_accessor_declarations6045 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interface_set_accessor_declaration_in_interface_accessor_declarations6054 = new BitSet(new long[]{0x0000000000000002L,0x0000000000400000L,0x0000000010000000L});
    public static final BitSet FOLLOW_attributes_in_interface_accessor_declarations6058 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_interface_get_accessor_declaration_in_interface_accessor_declarations6063 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_156_in_interface_get_accessor_declaration6074 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_SEMI_in_interface_get_accessor_declaration6078 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_157_in_interface_set_accessor_declaration6090 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_SEMI_in_interface_set_accessor_declaration6094 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_modifier_in_method_modifiers6106 = new BitSet(new long[]{0x0000000000000002L,0x000000000001FFF1L});
    public static final BitSet FOLLOW_169_in_struct_declaration6120 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_type_or_generic_in_struct_declaration6124 = new BitSet(new long[]{0x4000000000000000L,0x0000000004000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_struct_interfaces_in_struct_declaration6128 = new BitSet(new long[]{0x4000000000000000L,0x0000000004000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_type_parameter_constraints_clauses_in_struct_declaration6133 = new BitSet(new long[]{0x4000000000000000L,0x0000000004000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_struct_body_in_struct_declaration6138 = new BitSet(new long[]{0x0000000002000002L});
    public static final BitSet FOLLOW_SEMI_in_struct_declaration6142 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_struct_modifier_in_struct_modifiers6152 = new BitSet(new long[]{0x0000000000000002L,0x00000000000003F0L});
    public static final BitSet FOLLOW_set_in_struct_modifier0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_90_in_struct_interfaces6191 = new BitSet(new long[]{0x0000000000000010L,0x0000000000040002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_interface_type_list_in_struct_interfaces6195 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_62_in_struct_body6203 = new BitSet(new long[]{0xA000000000080010L,0x000000020047FFFBL,0x0006D7FFEDFFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_struct_member_declarations_in_struct_body6207 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_63_in_struct_body6212 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_struct_member_declaration_in_struct_member_declarations6220 = new BitSet(new long[]{0x2000000000080012L,0x000000020047FFFBL,0x0006D7FFEDFFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_attributes_in_struct_member_declaration6230 = new BitSet(new long[]{0x2000000000080010L,0x000000020047FFFBL,0x0006D7FFEDFFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_modifiers_in_struct_member_declaration6237 = new BitSet(new long[]{0x2000000000080010L,0x000000020047FFFBL,0x0006D7FFEDFFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_81_in_struct_member_declaration6244 = new BitSet(new long[]{0x0000000000000010L,0x0000000000040002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_type_in_struct_member_declaration6248 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_constant_declarators_in_struct_member_declaration6252 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_SEMI_in_struct_member_declaration6256 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_event_declaration_in_struct_member_declaration6262 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_67_in_struct_member_declaration6271 = new BitSet(new long[]{0x0000000000003FF0L,0x0000000000000002L,0x000617FFEDDFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_method_declaration_in_struct_member_declaration6274 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interface_declaration_in_struct_member_declaration6288 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_class_declaration_in_struct_member_declaration6302 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_struct_declaration_in_struct_member_declaration6316 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interface_declaration_in_struct_member_declaration6324 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_class_declaration_in_struct_member_declaration6331 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_82_in_struct_member_declaration6340 = new BitSet(new long[]{0x0000000000003FF0L,0x0000000000000002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_method_declaration_in_struct_member_declaration6344 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_struct_member_declaration6350 = new BitSet(new long[]{0x0000000000003FF0L,0x0000000000080002L,0x000625FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_method_declaration_in_struct_member_declaration6364 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_property_declaration_in_struct_member_declaration6385 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_name_in_struct_member_declaration6410 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_DOT_in_struct_member_declaration6412 = new BitSet(new long[]{0x0000000000000000L,0x0000000000080000L});
    public static final BitSet FOLLOW_indexer_declaration_in_struct_member_declaration6414 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_indexer_declaration_in_struct_member_declaration6425 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_field_declaration_in_struct_member_declaration6440 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_operator_declaration_in_struct_member_declaration6459 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_struct_declaration_in_struct_member_declaration6480 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_enum_declaration_in_struct_member_declaration6488 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_delegate_declaration_in_struct_member_declaration6498 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_conversion_operator_declaration_in_struct_member_declaration6506 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_constructor_declaration_in_struct_member_declaration6512 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_indexer_declarator_in_indexer_declaration6532 = new BitSet(new long[]{0x4000000000000000L});
    public static final BitSet FOLLOW_62_in_indexer_declaration6536 = new BitSet(new long[]{0x0000000000000000L,0x00000000004001E0L,0x0000000030000000L});
    public static final BitSet FOLLOW_accessor_declarations_in_indexer_declaration6540 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_63_in_indexer_declaration6544 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_83_in_indexer_declarator6556 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_86_in_indexer_declarator6560 = new BitSet(new long[]{0x0000000000000010L,0x00000000184C0002L,0x00060DFFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_formal_parameter_list_in_indexer_declarator6564 = new BitSet(new long[]{0x0000000000000000L,0x0000000000800000L});
    public static final BitSet FOLLOW_87_in_indexer_declarator6568 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_operator_declarator_in_operator_declaration6581 = new BitSet(new long[]{0x4000000002000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_operator_body_in_operator_declaration6585 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_173_in_operator_declarator6594 = new BitSet(new long[]{0x0000000000031800L,0xF3F007D800000000L});
    public static final BitSet FOLLOW_set_in_operator_declarator6604 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_88_in_operator_declarator6614 = new BitSet(new long[]{0x0000000000000010L,0x0000000000040002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_type_in_operator_declarator6618 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_identifier_in_operator_declarator6622 = new BitSet(new long[]{0x0000000004000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_binary_operator_declarator_in_operator_declarator6625 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unary_operator_declarator_in_operator_declarator6629 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_overloadable_unary_operator_in_operator_declarator6638 = new BitSet(new long[]{0x0000000004000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_unary_operator_declarator_in_operator_declarator6642 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_overloadable_binary_operator_in_operator_declarator6650 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_binary_operator_declarator_in_operator_declarator6654 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RPAREN_in_unary_operator_declarator6667 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_overloadable_unary_operator0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_89_in_binary_operator_declarator6712 = new BitSet(new long[]{0x0000000000000010L,0x0000000000040002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_type_in_binary_operator_declarator6716 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_identifier_in_binary_operator_declarator6720 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_RPAREN_in_binary_operator_declarator6724 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_100_in_overloadable_binary_operator6736 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_118_in_overloadable_binary_operator6740 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_119_in_overloadable_binary_operator6744 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_117_in_overloadable_binary_operator6748 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_127_in_overloadable_binary_operator6752 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_126_in_overloadable_binary_operator6756 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_120_in_overloadable_binary_operator6760 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_GT_in_overloadable_binary_operator6764 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_GT_in_overloadable_binary_operator6766 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_124_in_overloadable_binary_operator6770 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_125_in_overloadable_binary_operator6774 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_GT_in_overloadable_binary_operator6778 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_99_in_overloadable_binary_operator6782 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_116_in_overloadable_binary_operator6786 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_121_in_overloadable_binary_operator6790 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_conversion_operator_declarator_in_conversion_operator_declaration6801 = new BitSet(new long[]{0x4000000002000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_operator_body_in_conversion_operator_declaration6805 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_conversion_operator_declarator6814 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000200000000000L});
    public static final BitSet FOLLOW_173_in_conversion_operator_declarator6823 = new BitSet(new long[]{0x0000000000000010L,0x0000000000040002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_type_in_conversion_operator_declarator6827 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_88_in_conversion_operator_declarator6831 = new BitSet(new long[]{0x0000000000000010L,0x0000000000040002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_type_in_conversion_operator_declarator6835 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_identifier_in_conversion_operator_declarator6839 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_RPAREN_in_conversion_operator_declarator6843 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_operator_body6852 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_constructor_declarator_in_constructor_declaration6863 = new BitSet(new long[]{0x4000000002000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_constructor_body_in_constructor_declaration6867 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifier_in_constructor_declarator6876 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_88_in_constructor_declarator6880 = new BitSet(new long[]{0x0000000004000010L,0x00000000184C0002L,0x00060DFFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_formal_parameter_list_in_constructor_declarator6884 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_RPAREN_in_constructor_declarator6889 = new BitSet(new long[]{0x0000000000000002L,0x0000000004000000L});
    public static final BitSet FOLLOW_constructor_initializer_in_constructor_declarator6893 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_90_in_constructor_initializer6903 = new BitSet(new long[]{0x0000000000000000L,0x0000000000280000L});
    public static final BitSet FOLLOW_set_in_constructor_initializer6907 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_88_in_constructor_initializer6917 = new BitSet(new long[]{0x0000000004013FF0L,0x002007D7F9280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_argument_list_in_constructor_initializer6921 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_RPAREN_in_constructor_initializer6926 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_constructor_body6935 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_106_in_destructor_declaration6952 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_identifier_in_destructor_declaration6955 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_88_in_destructor_declaration6959 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_RPAREN_in_destructor_declaration6963 = new BitSet(new long[]{0x4000000002000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_destructor_body_in_destructor_declaration6968 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_destructor_body6977 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_invocation_start_in_invocation_expression6988 = new BitSet(new long[]{0x000000000000C000L,0x0000000001400000L});
    public static final BitSet FOLLOW_arguments_in_invocation_expression7010 = new BitSet(new long[]{0x000000000000C000L,0x0000000001400000L});
    public static final BitSet FOLLOW_invocation_part_in_invocation_expression7014 = new BitSet(new long[]{0x000000000000C000L,0x0000000001400000L});
    public static final BitSet FOLLOW_invocation_part_in_invocation_expression7031 = new BitSet(new long[]{0x000000000000C000L,0x0000000001400000L});
    public static final BitSet FOLLOW_arguments_in_invocation_expression7037 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_predefined_type_in_invocation_start7046 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifier_in_invocation_start7064 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_generic_argument_list_in_invocation_start7068 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_83_in_invocation_start7074 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_85_in_invocation_start7081 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifier_in_invocation_start7087 = new BitSet(new long[]{0x0000000000000002L,0x0000000000100000L});
    public static final BitSet FOLLOW_84_in_invocation_start7092 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_identifier_in_invocation_start7096 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeof_expression_in_invocation_start7104 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_access_identifier_in_invocation_part7129 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_brackets_in_invocation_part7135 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declaration_statement_in_statement7153 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_labeled_statement_in_statement7169 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_embedded_statement_in_statement7175 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_embedded_statement7187 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_selection_statement_in_embedded_statement7193 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_iteration_statement_in_embedded_statement7200 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_jump_statement_in_embedded_statement7207 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_try_statement_in_embedded_statement7217 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_checked_statement_in_embedded_statement7223 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unchecked_statement_in_embedded_statement7229 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_lock_statement_in_embedded_statement7235 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_using_statement_in_embedded_statement7241 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_yield_statement_in_embedded_statement7248 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unsafe_statement_in_embedded_statement7255 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_fixed_statement_in_embedded_statement7261 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_statement_in_embedded_statement7267 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_176_in_fixed_statement7280 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_88_in_fixed_statement7284 = new BitSet(new long[]{0x0000000000000010L,0x0000000000040002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_pointer_type_in_fixed_statement7288 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_fixed_pointer_declarators_in_fixed_statement7290 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_RPAREN_in_fixed_statement7294 = new BitSet(new long[]{0x4000000002153FF0L,0x002007D7E12E0212L,0xFFA705FFE7DFFFB0L,0x00000000000007FCL});
    public static final BitSet FOLLOW_embedded_statement_in_fixed_statement7298 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_fixed_pointer_declarator_in_fixed_pointer_declarators7307 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_89_in_fixed_pointer_declarators7312 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_fixed_pointer_declarator_in_fixed_pointer_declarators7316 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_identifier_in_fixed_pointer_declarator7327 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_66_in_fixed_pointer_declarator7331 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_fixed_pointer_initializer_in_fixed_pointer_declarator7335 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_fixed_pointer_initializer7347 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_73_in_unsafe_statement7355 = new BitSet(new long[]{0x4000000002000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_block_in_unsafe_statement7359 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifier_in_labeled_statement7367 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_90_in_labeled_statement7371 = new BitSet(new long[]{0x4000000002153FF0L,0x002007D7E12E0212L,0xFFA705FFE7DFFFB0L,0x00000000000007FCL});
    public static final BitSet FOLLOW_statement_in_labeled_statement7375 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_local_variable_declaration_in_declaration_statement7385 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_local_constant_declaration_in_declaration_statement7392 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_SEMI_in_declaration_statement7395 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_local_variable_type_in_local_variable_declaration7404 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_local_variable_declarators_in_local_variable_declaration7408 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_177_in_local_variable_type7423 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_178_in_local_variable_type7435 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_local_variable_type7441 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_local_variable_declarator_in_local_variable_declarators7450 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_89_in_local_variable_declarators7453 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_local_variable_declarator_in_local_variable_declarators7455 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_identifier_in_local_variable_declarator7466 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000004L});
    public static final BitSet FOLLOW_66_in_local_variable_declarator7469 = new BitSet(new long[]{0x4000000000013FF0L,0x002007D7E16C0012L,0x000E05FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_local_variable_initializer_in_local_variable_declarator7473 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_local_variable_initializer7485 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_array_initializer_in_local_variable_initializer7491 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_stackalloc_initializer_in_local_variable_initializer7498 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_179_in_stackalloc_initializer7506 = new BitSet(new long[]{0x0000000000000010L,0x0000000000040002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_unmanaged_type_in_stackalloc_initializer7510 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_86_in_stackalloc_initializer7514 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_expression_in_stackalloc_initializer7518 = new BitSet(new long[]{0x0000000000000000L,0x0000000000800000L});
    public static final BitSet FOLLOW_87_in_stackalloc_initializer7522 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_81_in_local_constant_declaration7531 = new BitSet(new long[]{0x0000000000000010L,0x0000000000040002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_type_in_local_constant_declaration7535 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_constant_declarators_in_local_constant_declaration7539 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_expression_statement7548 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_SEMI_in_expression_statement7552 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_statement_expression7563 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_if_statement_in_selection_statement7574 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_switch_statement_in_selection_statement7580 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IF_in_if_statement7592 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_88_in_if_statement7596 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_boolean_expression_in_if_statement7600 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_RPAREN_in_if_statement7604 = new BitSet(new long[]{0x4000000002153FF0L,0x002007D7E12E0212L,0xFFA705FFE7DFFFB0L,0x00000000000007FCL});
    public static final BitSet FOLLOW_embedded_statement_in_if_statement7608 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0010000000000000L});
    public static final BitSet FOLLOW_else_statement_in_if_statement7617 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_180_in_else_statement7630 = new BitSet(new long[]{0x4000000002153FF0L,0x002007D7E12E0212L,0xFFA705FFE7DFFFB0L,0x00000000000007FCL});
    public static final BitSet FOLLOW_embedded_statement_in_else_statement7634 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_181_in_switch_statement7643 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_88_in_switch_statement7647 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_expression_in_switch_statement7651 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_RPAREN_in_switch_statement7655 = new BitSet(new long[]{0x4000000000000000L});
    public static final BitSet FOLLOW_switch_block_in_switch_statement7659 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_62_in_switch_block7668 = new BitSet(new long[]{0x8000000000000000L,0x0000000100000000L,0x0040000000000000L});
    public static final BitSet FOLLOW_switch_sections_in_switch_block7672 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_63_in_switch_block7677 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_switch_section_in_switch_sections7686 = new BitSet(new long[]{0x0000000000000002L,0x0000000100000000L,0x0040000000000000L});
    public static final BitSet FOLLOW_switch_labels_in_switch_section7696 = new BitSet(new long[]{0x4000000002153FF0L,0x002007D7E12E0212L,0xFFA705FFE7DFFFB0L,0x00000000000007FCL});
    public static final BitSet FOLLOW_statement_list_in_switch_section7700 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_switch_label_in_switch_labels7709 = new BitSet(new long[]{0x0000000000000002L,0x0000000100000000L,0x0040000000000000L});
    public static final BitSet FOLLOW_182_in_switch_label7720 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_constant_expression_in_switch_label7724 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_90_in_switch_label7728 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_96_in_switch_label7736 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_90_in_switch_label7740 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_while_statement_in_iteration_statement7750 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_do_statement_in_iteration_statement7756 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_for_statement_in_iteration_statement7762 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_foreach_statement_in_iteration_statement7768 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_183_in_while_statement7777 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_88_in_while_statement7781 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_boolean_expression_in_while_statement7785 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_RPAREN_in_while_statement7789 = new BitSet(new long[]{0x4000000002153FF0L,0x002007D7E12E0212L,0xFFA705FFE7DFFFB0L,0x00000000000007FCL});
    public static final BitSet FOLLOW_embedded_statement_in_while_statement7793 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_184_in_do_statement7802 = new BitSet(new long[]{0x4000000002153FF0L,0x002007D7E12E0212L,0xFFA705FFE7DFFFB0L,0x00000000000007FCL});
    public static final BitSet FOLLOW_embedded_statement_in_do_statement7806 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0080000000000000L});
    public static final BitSet FOLLOW_183_in_do_statement7810 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_88_in_do_statement7814 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_boolean_expression_in_do_statement7818 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_RPAREN_in_do_statement7822 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_SEMI_in_do_statement7826 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_185_in_for_statement7835 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_88_in_for_statement7839 = new BitSet(new long[]{0x0000000002013FF0L,0x002007D7E12C0012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_for_initializer_in_for_statement7843 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_SEMI_in_for_statement7848 = new BitSet(new long[]{0x0000000002013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_for_condition_in_for_statement7852 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_SEMI_in_for_statement7857 = new BitSet(new long[]{0x0000000004013FF0L,0x002007D7E12C0012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_for_iterator_in_for_statement7861 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_RPAREN_in_for_statement7866 = new BitSet(new long[]{0x4000000002153FF0L,0x002007D7E12E0212L,0xFFA705FFE7DFFFB0L,0x00000000000007FCL});
    public static final BitSet FOLLOW_embedded_statement_in_for_statement7870 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_local_variable_declaration_in_for_initializer7885 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_statement_expression_list_in_for_initializer7891 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_boolean_expression_in_for_condition7903 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_statement_expression_list_in_for_iterator7912 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_statement_expression_in_statement_expression_list7921 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_89_in_statement_expression_list7924 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E12C0012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_statement_expression_in_statement_expression_list7926 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_186_in_foreach_statement7937 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_88_in_foreach_statement7941 = new BitSet(new long[]{0x0000000000000010L,0x0000000000040002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_local_variable_type_in_foreach_statement7945 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_identifier_in_foreach_statement7949 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_134_in_foreach_statement7953 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_expression_in_foreach_statement7957 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_RPAREN_in_foreach_statement7961 = new BitSet(new long[]{0x4000000002153FF0L,0x002007D7E12E0212L,0xFFA705FFE7DFFFB0L,0x00000000000007FCL});
    public static final BitSet FOLLOW_embedded_statement_in_foreach_statement7965 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_break_statement_in_jump_statement7974 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_continue_statement_in_jump_statement7980 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_goto_statement_in_jump_statement7986 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_return_statement_in_jump_statement7992 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_throw_statement_in_jump_statement7998 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_187_in_break_statement8007 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_SEMI_in_break_statement8011 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_188_in_continue_statement8020 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_SEMI_in_continue_statement8024 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_189_in_goto_statement8033 = new BitSet(new long[]{0x0000000000000010L,0x0000000100000002L,0x00460400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_identifier_in_goto_statement8039 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_182_in_goto_statement8050 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_constant_expression_in_goto_statement8054 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_96_in_goto_statement8065 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_SEMI_in_goto_statement8070 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_153_in_return_statement8079 = new BitSet(new long[]{0x0000000002013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_expression_in_return_statement8083 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_SEMI_in_return_statement8088 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_190_in_throw_statement8097 = new BitSet(new long[]{0x0000000002013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_expression_in_throw_statement8101 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_SEMI_in_throw_statement8106 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_191_in_try_statement8119 = new BitSet(new long[]{0x4000000002000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_block_in_try_statement8123 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000003L});
    public static final BitSet FOLLOW_catch_clauses_in_try_statement8129 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000003L});
    public static final BitSet FOLLOW_finally_clause_in_try_statement8133 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_finally_clause_in_try_statement8150 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_192_in_catch_clauses8160 = new BitSet(new long[]{0x4000000002000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_specific_catch_clauses_in_catch_clauses8165 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_general_catch_clause_in_catch_clauses8169 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specific_catch_clause_in_specific_catch_clauses8179 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_192_in_specific_catch_clauses8184 = new BitSet(new long[]{0x4000000002000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_specific_catch_clause_in_specific_catch_clauses8189 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_general_catch_clause_in_specific_catch_clauses8193 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_88_in_specific_catch_clause8204 = new BitSet(new long[]{0x0000000000000010L,0x0000000000040002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_class_type_in_specific_catch_clause8208 = new BitSet(new long[]{0x0000000004000010L,0x0000000000000002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_identifier_in_specific_catch_clause8212 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_RPAREN_in_specific_catch_clause8217 = new BitSet(new long[]{0x4000000002000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_block_in_specific_catch_clause8221 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_general_catch_clause8230 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_193_in_finally_clause8239 = new BitSet(new long[]{0x4000000002000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_block_in_finally_clause8243 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_94_in_checked_statement8252 = new BitSet(new long[]{0x4000000002000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_block_in_checked_statement8256 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_95_in_unchecked_statement8265 = new BitSet(new long[]{0x4000000002000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_block_in_unchecked_statement8269 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_194_in_lock_statement8278 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_88_in_lock_statement8282 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_expression_in_lock_statement8285 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_RPAREN_in_lock_statement8289 = new BitSet(new long[]{0x4000000002153FF0L,0x002007D7E12E0212L,0xFFA705FFE7DFFFB0L,0x00000000000007FCL});
    public static final BitSet FOLLOW_embedded_statement_in_lock_statement8293 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_USING_in_using_statement8302 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_88_in_using_statement8306 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E12C0012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_resource_acquisition_in_using_statement8311 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_RPAREN_in_using_statement8315 = new BitSet(new long[]{0x4000000002153FF0L,0x002007D7E12E0212L,0xFFA705FFE7DFFFB0L,0x00000000000007FCL});
    public static final BitSet FOLLOW_embedded_statement_in_using_statement8320 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_local_variable_declaration_in_resource_acquisition8335 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_resource_acquisition8341 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_195_in_yield_statement8350 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0800000002000000L});
    public static final BitSet FOLLOW_153_in_yield_statement8355 = new BitSet(new long[]{0x0000000000013FF0L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_expression_in_yield_statement8359 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_SEMI_in_yield_statement8363 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_187_in_yield_statement8379 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_SEMI_in_yield_statement8383 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_predefined_type0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_identifier0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_keyword0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_also_keyword0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_literal0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_assignment_in_assignment_list11170 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_SEMI_in_assignment_list11172 = new BitSet(new long[]{0x0000000000013FF2L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_attributes_in_field_declarations11184 = new BitSet(new long[]{0x0000000000000010L,0x000000000005FFF3L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_modifiers_in_field_declarations11189 = new BitSet(new long[]{0x0000000000000010L,0x0000000000040002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_type_in_field_declarations11194 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_field_declaration_in_field_declarations11198 = new BitSet(new long[]{0x0000000000000012L,0x000000000045FFF3L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_attributes_in_property_declaration_list11210 = new BitSet(new long[]{0x0000000000000010L,0x000000000005FFF3L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_modifiers_in_property_declaration_list11215 = new BitSet(new long[]{0x0000000000000010L,0x0000000000040002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_type_in_property_declaration_list11220 = new BitSet(new long[]{0x0000000000003FF0L,0x0000000000000002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_property_declaration_in_property_declaration_list11224 = new BitSet(new long[]{0x0000000000000012L,0x000000000045FFF3L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_constant_declaration_in_constant_declarations11235 = new BitSet(new long[]{0x0000000000000002L,0x0000000000020000L});
    public static final BitSet FOLLOW_literal_in_literals11244 = new BitSet(new long[]{0x0000000000003FF2L,0x0000000000000002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_attributes_in_delegate_declaration_list11255 = new BitSet(new long[]{0x2000000000080000L,0x000000020041FFF9L,0x0000120008000000L});
    public static final BitSet FOLLOW_modifiers_in_delegate_declaration_list11260 = new BitSet(new long[]{0x2000000000080000L,0x000000020041FFF9L,0x0000120008000000L});
    public static final BitSet FOLLOW_delegate_declaration_in_delegate_declaration_list11265 = new BitSet(new long[]{0x2000000000080002L,0x000000020041FFF9L,0x0000120008000000L});
    public static final BitSet FOLLOW_local_variable_declaration_in_local_variable_declaration_list11277 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_SEMI_in_local_variable_declaration_list11279 = new BitSet(new long[]{0x0000000000000012L,0x0000000000040002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_local_variable_initializer_in_local_variable_initializer_list11291 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_SEMI_in_local_variable_initializer_list11293 = new BitSet(new long[]{0x4000000000013FF2L,0x002007D7E16C0012L,0x000E05FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_expression_in_expression_list_test11305 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_SEMI_in_expression_list_test11307 = new BitSet(new long[]{0x0000000000013FF2L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_unary_expression_in_unary_expression_list11319 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_SEMI_in_unary_expression_list11321 = new BitSet(new long[]{0x0000000000013FF2L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_invocation_expression_in_invocation_expression_list11333 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_SEMI_in_invocation_expression_list11335 = new BitSet(new long[]{0x0000000000000012L,0x0000000400280002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_primary_expression_in_primary_expression_list11347 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_SEMI_in_primary_expression_list11349 = new BitSet(new long[]{0x0000000000003FF2L,0x00000007E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_non_assignment_expression_in_non_assignment_expression_list11361 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_SEMI_in_non_assignment_expression_list11363 = new BitSet(new long[]{0x0000000000013FF2L,0x002007D7E1280012L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_modifiers_in_method_declarations11375 = new BitSet(new long[]{0x0000000000000010L,0x0000000000040002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_82_in_method_declarations11379 = new BitSet(new long[]{0x0000000000003FF0L,0x0000000000000002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_type_in_method_declarations11383 = new BitSet(new long[]{0x0000000000003FF0L,0x0000000000000002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_method_declaration_in_method_declarations11386 = new BitSet(new long[]{0x0000000000000012L,0x000000000005FFF3L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_67_in_synpred1_cs287 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_member_name_in_synpred2_cs596 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_88_in_synpred2_cs600 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_member_name_in_synpred3_cs617 = new BitSet(new long[]{0x4000000000000000L});
    public static final BitSet FOLLOW_62_in_synpred3_cs621 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_member_name_in_synpred4_cs638 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_DOT_in_synpred4_cs642 = new BitSet(new long[]{0x0000000000000000L,0x0000000000080000L});
    public static final BitSet FOLLOW_83_in_synpred4_cs646 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_83_in_synpred5_cs788 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_brackets_in_synpred5_cs793 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_85_in_synpred6_cs814 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_brackets_in_synpred6_cs818 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_object_creation_expression_in_synpred7_cs856 = new BitSet(new long[]{0x000000000000C000L,0x0000000000400000L});
    public static final BitSet FOLLOW_set_in_synpred7_cs860 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_delegate_creation_expression_in_synpred8_cs923 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifier_in_synpred9_cs1083 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_99_in_synpred9_cs1088 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_88_in_synpred10_cs1366 = new BitSet(new long[]{0x0000000000000010L,0x0000000000040002L,0x000605FFE5DFFFB0L,0x00000000000007F8L});
    public static final BitSet FOLLOW_type_in_synpred10_cs1370 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_RPAREN_in_synpred10_cs1374 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_array_creation_expression_in_synpred11_cs1664 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_arguments_in_synpred12_cs1764 = new BitSet(new long[]{0x000000000000C000L,0x0000000000400000L});
    public static final BitSet FOLLOW_set_in_synpred12_cs1768 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unbound_type_name_in_synpred13_cs2363 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_generic_dimension_specifier_in_synpred14_cs2436 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_DOT_in_synpred14_cs2440 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifier_in_synpred15_cs2585 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_99_in_synpred15_cs2589 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifier_in_synpred16_cs2641 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_99_in_synpred16_cs2646 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_predefined_type_in_synpred17_cs2747 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_type_name_in_synpred17_cs2751 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_rank_specifiers_in_synpred17_cs2755 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_predefined_type_in_synpred18_cs2783 = new BitSet(new long[]{0x0000000000000000L,0x0000003000000000L});
    public static final BitSet FOLLOW_type_name_in_synpred18_cs2787 = new BitSet(new long[]{0x0000000000000000L,0x0000003000000000L});
    public static final BitSet FOLLOW_100_in_synpred18_cs2792 = new BitSet(new long[]{0x0000000000000002L,0x0000001000000000L});
    public static final BitSet FOLLOW_101_in_synpred18_cs2797 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unary_expression_in_synpred19_cs3002 = new BitSet(new long[]{0x0000000000020000L,0x000FF80000000004L});
    public static final BitSet FOLLOW_assignment_operator_in_synpred19_cs3006 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_cast_expression_in_synpred20_cs3071 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_anonymous_function_signature_in_synpred21_cs3305 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_131_in_synpred21_cs3309 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_query_expression_in_synpred22_cs3321 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_132_in_synpred23_cs3782 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_89_in_synpred24_cs4330 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000002L,0x00060400E5DFFFB0L,0x0000000000000408L});
    public static final BitSet FOLLOW_identifier_in_synpred24_cs4334 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_66_in_synpred24_cs4338 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_member_name_in_synpred25_cs4910 = new BitSet(new long[]{0x4000000000000000L});
    public static final BitSet FOLLOW_62_in_synpred25_cs4914 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_member_name_in_synpred26_cs5829 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_88_in_synpred26_cs5833 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_member_name_in_synpred27_cs5856 = new BitSet(new long[]{0x4000000000000000L});
    public static final BitSet FOLLOW_62_in_synpred27_cs5860 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_member_name_in_synpred28_cs6355 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_88_in_synpred28_cs6359 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_member_name_in_synpred29_cs6376 = new BitSet(new long[]{0x4000000000000000L});
    public static final BitSet FOLLOW_62_in_synpred29_cs6380 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_member_name_in_synpred30_cs6397 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_DOT_in_synpred30_cs6401 = new BitSet(new long[]{0x0000000000000000L,0x0000000000080000L});
    public static final BitSet FOLLOW_83_in_synpred30_cs6405 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_arguments_in_synpred31_cs6995 = new BitSet(new long[]{0x000000000000C000L,0x0000000000400000L});
    public static final BitSet FOLLOW_set_in_synpred31_cs6999 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifier_in_synpred32_cs7054 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_99_in_synpred32_cs7059 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declaration_statement_in_synpred33_cs7148 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifier_in_synpred34_cs7160 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_90_in_synpred34_cs7164 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_177_in_synpred35_cs7418 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_178_in_synpred36_cs7430 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_180_in_synpred37_cs7612 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_local_variable_declaration_in_synpred38_cs7880 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_local_variable_declaration_in_synpred39_cs8330 = new BitSet(new long[]{0x0000000000000002L});

}