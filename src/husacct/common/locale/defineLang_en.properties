#
#Ruletypes
#
#2.
VisibilityConvention Visibility Convention
VisibilityConventionException Visibility Convention Exception
NamingConvention Naming Convention
NamingConventionException Naming Convention Exception
#3.
IsNotAllowedToUse Is Not Allowed To Use
IsAllowedToUse Is Allowed To Use
IsOnlyAllowedToUse Is Only Allowed To Use
IsOnlyModuleAllowedToUse Is Only Module Allowed To Use
MustUse Must Use
BackCall Back Call
SkipCall Skip Call
#4.
LoopsInModule Loops In Module
LoopsInModuleException Loops In Module Exception
#
#Violationtypes
#
package Package
class Class
InvocMethod Invocation of a Method
InvocConstructor Invocation of a Constructor
AccessPropertyOrField Access to a property or field
ExtendsConcrete Extending a concrete class
ExtendsAbstract Extending a abstract class
ExtendsLibrary Extends a class in a used library
Implements Implementing a interface
Declaration Declaration
Annotation Annotation
Import Import
Exception Exception
#
#Standards
#
Id Id
RuleType Rule type
ToModule To module
Enabled Enabled
Exceptions Exceptions
Off Off
On On
FromModule From module
#
#Names
#
SubSystem SubSystem
Layer Layer
Component Component
ExternalLibrary ExternalLibrary
#
#Buttons
#
Add Add
Remove Remove
Edit Edit
NewModule New module
RemoveModule Remove module
MoveUp Move up
MoveDown Move down
Save Save
Cancel Cancel
#
#Popups
#
RemoveConfirm Are you sure you want to remove the selected module?
UpdatingRules Updating rules applied table
ParentModule Parent module
#
#Titles
#
RemovePopupTitle Remove?
WrongSelectionTitle Wrong selection!
ModulePropertiesTitle Module Properties
AssignedSoftwareUnitsTitle Software Units Assigned
NotAnalysedYetTitle Not yet analysed!
WrongInputTitle Wrong Input!

AppliedRuleTitle New Applied Rule
ExceptionRuleTitle New exception rule
EditExceptionRuleTitle Edit exception rule
SoftwareUnitTitle New Software Unit
Rules Rules
#
#Module Properties
#
ModuleName Module name
Description Description
ModuleDescription Module description
ModuleType Module type
ModuleHierachy Module Hierarchy

#
#Exception Properties
#
AddException Add exception
RemoveException Remove exception
CreateException Create

#
#Software Unit Properties
#
SelectSoftwareDefinition Select software definition
SoftwareUnitName Software unit name
Type Type

#
#Default messages
#
NameOfTheModule The name of the module
DescriptionOfTheModule A short description of the module
FacadeAccessible Enable this checkbox if you want that this module is only accessible via an interface.
NoArchitectureName Architecture name cannot be empty
IdleMessage Idle
DefaultTitle HUSACCT
ApplicationTitle  - Define Architecture
#
#Warnings
#

#
#Errors
#
MissingValue Please enter a value!
Error Error
ModuleSelectionError Please select a module
RuleSelecionError Please select a rule
NotAnalysedYet Please analyse an application first! \nYou can do this by filling in the application details

#
#ConventionErrors
#
ConventionError Rule Convention Error
RuleTypeAlreadySet Only 1 rule of this type is allowed for each module!
IsOnlyAllowedToUseAlreadyFromThisToSelected "Is Only Allowed To Use rule" already defined from selected "from module" to selected "to module"
IsOnlyModuleAllowedToUseAlreadyFromThisToSelected "Is Only Module Allowed To Use" rule already defined from selected "from module" to selected "to module"
IsAllowedToUseAlreadyFromThisToSelected "Is Only Module Allowed To Use" rule already defined from selected "from module" to selected "to module"
MustUseAlreadyFromThisToSelected "Must use" rule already defined from selected "from module" to selected "to module"
IsNotAllowedToUseAlreadyFromThisToSelected "Is not allowed to use" rule already defined from selected "from module" to selected "to module"

IsOnlyAllowedToUseAlreadyFromThisToOther "Is Only Allowed To Use" rule already defined from selected "from module" to other module then selected "to module"
IsAllowedToUseAlreadyFromThisToOther "Is Allowed To Use" rule already defined from selected "from module" to other module then selected "to module"
MustUseAlreadyFromThisToOther "Must use" rule already defined from selected "from module" to other module then selected "to module"

IsOnlyModuleAllowedToUseAlreadyFromOtherToSelected "Is Only Module Allowed To Use" rule already defined to selected "to module" from module
IsAllowedToUseAlreadyFromOtherToSelected "Is Allowed To Use" rule already defined to selected "to module" from module
MustUseAlreadyFromOtherToSelected "Must Use" rule already defined to selected "to module" from module