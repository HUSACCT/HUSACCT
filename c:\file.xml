<?xml version="1.0" encoding="UTF-8"?>
<Test12345678910><Packages><Package><UniqueName>invocmethod.a</UniqueName><Name>a</Name><BelongsToPackage>invocmethod</BelongsToPackage></Package><Package><UniqueName>cycles</UniqueName><Name>cycles</Name><BelongsToPackage></BelongsToPackage></Package><Package><UniqueName>invocmethod.b</UniqueName><Name>b</Name><BelongsToPackage>invocmethod</BelongsToPackage></Package><Package><UniqueName>localvariables.b</UniqueName><Name>b</Name><BelongsToPackage>localvariables</BelongsToPackage></Package><Package><UniqueName>exception</UniqueName><Name>exception</Name><BelongsToPackage></BelongsToPackage></Package><Package><UniqueName>attrdeclaration</UniqueName><Name>attrdeclaration</Name><BelongsToPackage></BelongsToPackage></Package><Package><UniqueName>indirect</UniqueName><Name>indirect</Name><BelongsToPackage></BelongsToPackage></Package><Package><UniqueName>indirect.a</UniqueName><Name>a</Name><BelongsToPackage>indirect</BelongsToPackage></Package><Package><UniqueName>annotation</UniqueName><Name>annotation</Name><BelongsToPackage></BelongsToPackage></Package><Package><UniqueName>accessfield</UniqueName><Name>accessfield</Name><BelongsToPackage></BelongsToPackage></Package><Package><UniqueName>loops</UniqueName><Name>loops</Name><BelongsToPackage></BelongsToPackage></Package><Package><UniqueName>extendsconcrete.a</UniqueName><Name>a</Name><BelongsToPackage>extendsconcrete</BelongsToPackage></Package><Package><UniqueName>loops.b</UniqueName><Name>b</Name><BelongsToPackage>loops</BelongsToPackage></Package><Package><UniqueName>extendsconcrete.b</UniqueName><Name>b</Name><BelongsToPackage>extendsconcrete</BelongsToPackage></Package><Package><UniqueName>loops.a</UniqueName><Name>a</Name><BelongsToPackage>loops</BelongsToPackage></Package><Package><UniqueName>indirect.b</UniqueName><Name>b</Name><BelongsToPackage>indirect</BelongsToPackage></Package><Package><UniqueName>localvariables</UniqueName><Name>localvariables</Name><BelongsToPackage></BelongsToPackage></Package><Package><UniqueName>invocconstructor.b</UniqueName><Name>b</Name><BelongsToPackage>invocconstructor</BelongsToPackage></Package><Package><UniqueName>invocconstructor.a</UniqueName><Name>a</Name><BelongsToPackage>invocconstructor</BelongsToPackage></Package><Package><UniqueName>parameters.a</UniqueName><Name>a</Name><BelongsToPackage>parameters</BelongsToPackage></Package><Package><UniqueName>invocconstructor</UniqueName><Name>invocconstructor</Name><BelongsToPackage></BelongsToPackage></Package><Package><UniqueName>implement</UniqueName><Name>implement</Name><BelongsToPackage></BelongsToPackage></Package><Package><UniqueName>extendsabstract.b</UniqueName><Name>b</Name><BelongsToPackage>extendsabstract</BelongsToPackage></Package><Package><UniqueName>parameters.b</UniqueName><Name>b</Name><BelongsToPackage>parameters</BelongsToPackage></Package><Package><UniqueName>parameters</UniqueName><Name>parameters</Name><BelongsToPackage></BelongsToPackage></Package><Package><UniqueName>extendsabstract.a</UniqueName><Name>a</Name><BelongsToPackage>extendsabstract</BelongsToPackage></Package><Package><UniqueName>exception.b</UniqueName><Name>b</Name><BelongsToPackage>exception</BelongsToPackage></Package><Package><UniqueName>exception.a</UniqueName><Name>a</Name><BelongsToPackage>exception</BelongsToPackage></Package><Package><UniqueName>implement.a</UniqueName><Name>a</Name><BelongsToPackage>implement</BelongsToPackage></Package><Package><UniqueName>implement.b</UniqueName><Name>b</Name><BelongsToPackage>implement</BelongsToPackage></Package><Package><UniqueName>invocmethod</UniqueName><Name>invocmethod</Name><BelongsToPackage></BelongsToPackage></Package><Package><UniqueName>cycles.a</UniqueName><Name>a</Name><BelongsToPackage>cycles</BelongsToPackage></Package><Package><UniqueName>cycles.b</UniqueName><Name>b</Name><BelongsToPackage>cycles</BelongsToPackage></Package><Package><UniqueName>extendsabstract</UniqueName><Name>extendsabstract</Name><BelongsToPackage></BelongsToPackage></Package><Package><UniqueName>enumeration.b</UniqueName><Name>b</Name><BelongsToPackage>enumeration</BelongsToPackage></Package><Package><UniqueName>enumeration.a</UniqueName><Name>a</Name><BelongsToPackage>enumeration</BelongsToPackage></Package><Package><UniqueName>extendsconcrete</UniqueName><Name>extendsconcrete</Name><BelongsToPackage></BelongsToPackage></Package><Package><UniqueName>attrdeclaration.a</UniqueName><Name>a</Name><BelongsToPackage>attrdeclaration</BelongsToPackage></Package><Package><UniqueName>annotation.b</UniqueName><Name>b</Name><BelongsToPackage>annotation</BelongsToPackage></Package><Package><UniqueName>attrdeclaration.b</UniqueName><Name>b</Name><BelongsToPackage>attrdeclaration</BelongsToPackage></Package><Package><UniqueName>annotation.a</UniqueName><Name>a</Name><BelongsToPackage>annotation</BelongsToPackage></Package><Package><UniqueName>localvariables.a</UniqueName><Name>a</Name><BelongsToPackage>localvariables</BelongsToPackage></Package><Package><UniqueName>enumeration</UniqueName><Name>enumeration</Name><BelongsToPackage></BelongsToPackage></Package><Package><UniqueName>accessfield.a</UniqueName><Name>a</Name><BelongsToPackage>accessfield</BelongsToPackage></Package><Package><UniqueName>accessfield.b</UniqueName><Name>b</Name><BelongsToPackage>accessfield</BelongsToPackage></Package></Packages><Classes><Class><UniqueName>parameters.b.OtherPackageC</UniqueName><Name>OtherPackageC</Name><BelongsToPackage>parameters.b</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>attrdeclaration.b.OtherPackageB</UniqueName><Name>OtherPackageB</Name><BelongsToPackage>attrdeclaration.b</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>parameters.b.OtherPackageB</UniqueName><Name>OtherPackageB</Name><BelongsToPackage>parameters.b</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>invocconstructor.a.SamePackage</UniqueName><Name>SamePackage</Name><BelongsToPackage>invocconstructor.a</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>attrdeclaration.b.OtherPackageA</UniqueName><Name>OtherPackageA</Name><BelongsToPackage>attrdeclaration.b</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>extendsconcrete.a.SamePackage</UniqueName><Name>SamePackage</Name><BelongsToPackage>extendsconcrete.a</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>localvariables.b.OtherPackageA</UniqueName><Name>OtherPackageA</Name><BelongsToPackage>localvariables.b</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>parameters.b.OtherPackageA</UniqueName><Name>OtherPackageA</Name><BelongsToPackage>parameters.b</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>localvariables.b.OtherPackageB</UniqueName><Name>OtherPackageB</Name><BelongsToPackage>localvariables.b</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>localvariables.b.OtherPackageC</UniqueName><Name>OtherPackageC</Name><BelongsToPackage>localvariables.b</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>attrdeclaration.b.OtherPackageC</UniqueName><Name>OtherPackageC</Name><BelongsToPackage>attrdeclaration.b</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>localvariables.a.TheType</UniqueName><Name>TheType</Name><BelongsToPackage>localvariables.a</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>annotation.b.OtherPackageB</UniqueName><Name>OtherPackageB</Name><BelongsToPackage>annotation.b</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>indirect.a.SamePackage</UniqueName><Name>SamePackage</Name><BelongsToPackage>indirect.a</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>annotation.b.OtherPackageA</UniqueName><Name>OtherPackageA</Name><BelongsToPackage>annotation.b</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>implement.b.OtherPackageC</UniqueName><Name>OtherPackageC</Name><BelongsToPackage>implement.b</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>implement.b.OtherPackageB</UniqueName><Name>OtherPackageB</Name><BelongsToPackage>implement.b</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>annotation.b.OtherPackageC</UniqueName><Name>OtherPackageC</Name><BelongsToPackage>annotation.b</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>implement.b.OtherPackageA</UniqueName><Name>OtherPackageA</Name><BelongsToPackage>implement.b</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>enumeration.a.SamePackage</UniqueName><Name>SamePackage</Name><BelongsToPackage>enumeration.a</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>parameters.a.SamePackage</UniqueName><Name>SamePackage</Name><BelongsToPackage>parameters.a</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>extendsabstract.a.SamePackage</UniqueName><Name>SamePackage</Name><BelongsToPackage>extendsabstract.a</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>attrdeclaration.a.SamePackage</UniqueName><Name>SamePackage</Name><BelongsToPackage>attrdeclaration.a</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>accessfield.a.TheOwner</UniqueName><Name>TheOwner</Name><BelongsToPackage>accessfield.a</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>indirect.b.OtherPackageC</UniqueName><Name>OtherPackageC</Name><BelongsToPackage>indirect.b</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>indirect.b.OtherPackageB</UniqueName><Name>OtherPackageB</Name><BelongsToPackage>indirect.b</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>parameters.a.TheType</UniqueName><Name>TheType</Name><BelongsToPackage>parameters.a</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>extendsconcrete.b.OtherPackageA</UniqueName><Name>OtherPackageA</Name><BelongsToPackage>extendsconcrete.b</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>extendsabstract.a.AbstractClass</UniqueName><Name>AbstractClass</Name><BelongsToPackage>extendsabstract.a</BelongsToPackage><IsAbstract>true</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>extendsconcrete.a.ConcreteClass</UniqueName><Name>ConcreteClass</Name><BelongsToPackage>extendsconcrete.a</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>invocmethod.b.OtherPackageB</UniqueName><Name>OtherPackageB</Name><BelongsToPackage>invocmethod.b</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>invocmethod.b.OtherPackageC</UniqueName><Name>OtherPackageC</Name><BelongsToPackage>invocmethod.b</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>invocmethod.b.OtherPackageD</UniqueName><Name>OtherPackageD</Name><BelongsToPackage>invocmethod.b</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>invocmethod.b.OtherPackageE</UniqueName><Name>OtherPackageE</Name><BelongsToPackage>invocmethod.b</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>invocmethod.b.OtherPackageF</UniqueName><Name>OtherPackageF</Name><BelongsToPackage>invocmethod.b</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>invocconstructor.b.OtherPackageB</UniqueName><Name>OtherPackageB</Name><BelongsToPackage>invocconstructor.b</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>invocconstructor.b.OtherPackageA</UniqueName><Name>OtherPackageA</Name><BelongsToPackage>invocconstructor.b</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>invocconstructor.b.OtherPackageC</UniqueName><Name>OtherPackageC</Name><BelongsToPackage>invocconstructor.b</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>extendsconcrete.b.OtherPackageC</UniqueName><Name>OtherPackageC</Name><BelongsToPackage>extendsconcrete.b</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>extendsconcrete.b.OtherPackageB</UniqueName><Name>OtherPackageB</Name><BelongsToPackage>extendsconcrete.b</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>exception.a.TheException</UniqueName><Name>TheException</Name><BelongsToPackage>exception.a</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>invocmethod.b.OtherPackageA</UniqueName><Name>OtherPackageA</Name><BelongsToPackage>invocmethod.b</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>accessfield.b.OtherPackageA</UniqueName><Name>OtherPackageA</Name><BelongsToPackage>accessfield.b</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>extendsabstract.b.OtherPackageC</UniqueName><Name>OtherPackageC</Name><BelongsToPackage>extendsabstract.b</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>extendsabstract.b.OtherPackageA</UniqueName><Name>OtherPackageA</Name><BelongsToPackage>extendsabstract.b</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>extendsabstract.b.OtherPackageB</UniqueName><Name>OtherPackageB</Name><BelongsToPackage>extendsabstract.b</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>accessfield.b.OtherPackageC</UniqueName><Name>OtherPackageC</Name><BelongsToPackage>accessfield.b</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>accessfield.b.OtherPackageB</UniqueName><Name>OtherPackageB</Name><BelongsToPackage>accessfield.b</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>loops.b.OtherPackageC</UniqueName><Name>OtherPackageC</Name><BelongsToPackage>loops.b</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>enumeration.b.OtherPackageB</UniqueName><Name>OtherPackageB</Name><BelongsToPackage>enumeration.b</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>enumeration.b.OtherPackageA</UniqueName><Name>OtherPackageA</Name><BelongsToPackage>enumeration.b</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>loops.b.OtherPackageA</UniqueName><Name>OtherPackageA</Name><BelongsToPackage>loops.b</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>loops.b.OtherPackageB</UniqueName><Name>OtherPackageB</Name><BelongsToPackage>loops.b</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>enumeration.b.OtherPackageC</UniqueName><Name>OtherPackageC</Name><BelongsToPackage>enumeration.b</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>exception.b.OtherPackageA</UniqueName><Name>OtherPackageA</Name><BelongsToPackage>exception.b</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>localvariables.Test</UniqueName><Name>Test</Name><BelongsToPackage>localvariables</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>annotation.a.SamePackage</UniqueName><Name>SamePackage</Name><BelongsToPackage>annotation.a</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>exception.b.OtherPackageB</UniqueName><Name>OtherPackageB</Name><BelongsToPackage>exception.b</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>exception.b.OtherPackageC</UniqueName><Name>OtherPackageC</Name><BelongsToPackage>exception.b</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>exception.b.OtherPackageD</UniqueName><Name>OtherPackageD</Name><BelongsToPackage>exception.b</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>implement.a.SamePackage</UniqueName><Name>SamePackage</Name><BelongsToPackage>implement.a</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>exception.b.OtherPackageF</UniqueName><Name>OtherPackageF</Name><BelongsToPackage>exception.b</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>invocconstructor.a.TheType</UniqueName><Name>TheType</Name><BelongsToPackage>invocconstructor.a</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>exception.b.OtherPackageG</UniqueName><Name>OtherPackageG</Name><BelongsToPackage>exception.b</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>exception.b.OtherPackageH</UniqueName><Name>OtherPackageH</Name><BelongsToPackage>exception.b</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>exception.b.OtherPackageI</UniqueName><Name>OtherPackageI</Name><BelongsToPackage>exception.b</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>exception.b.OtherPackageJ</UniqueName><Name>OtherPackageJ</Name><BelongsToPackage>exception.b</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>invocmethod.a.TheType</UniqueName><Name>TheType</Name><BelongsToPackage>invocmethod.a</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>indirect.b.OterPackageA</UniqueName><Name>OterPackageA</Name><BelongsToPackage>indirect.b</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>cycles.b.OtherPackage</UniqueName><Name>OtherPackage</Name><BelongsToPackage>cycles.b</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>accessfield.a.SamePackageB</UniqueName><Name>SamePackageB</Name><BelongsToPackage>accessfield.a</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>accessfield.a.SamePackageA</UniqueName><Name>SamePackageA</Name><BelongsToPackage>accessfield.a</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>attrdeclaration.a.TheType</UniqueName><Name>TheType</Name><BelongsToPackage>attrdeclaration.a</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>invocmethod.a.SamePackageA</UniqueName><Name>SamePackageA</Name><BelongsToPackage>invocmethod.a</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>exception.a.SamePackageC</UniqueName><Name>SamePackageC</Name><BelongsToPackage>exception.a</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>invocmethod.a.SamePackageB</UniqueName><Name>SamePackageB</Name><BelongsToPackage>invocmethod.a</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>exception.a.SamePackageB</UniqueName><Name>SamePackageB</Name><BelongsToPackage>exception.a</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>cycles.a.SamePackage</UniqueName><Name>SamePackage</Name><BelongsToPackage>cycles.a</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>exception.a.SamePackageA</UniqueName><Name>SamePackageA</Name><BelongsToPackage>exception.a</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>loops.a.TheType</UniqueName><Name>TheType</Name><BelongsToPackage>loops.a</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>loops.a.SamePackage</UniqueName><Name>SamePackage</Name><BelongsToPackage>loops.a</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class><Class><UniqueName>localvariables.a.SamePackage</UniqueName><Name>SamePackage</Name><BelongsToPackage>localvariables.a</BelongsToPackage><IsAbstract>false</IsAbstract><IsInnerClass>false</IsInnerClass></Class></Classes><Methods><Method><UniqueName>localvariables.b.OtherPackageB.theMethod()</UniqueName><Name>theMethod</Name><accessControlQualifier>public</accessControlQualifier><signature>()</signature><declaredReturnType></declaredReturnType></Method><Method><UniqueName>accessfield.b.OtherPackageB.OtherPackageB()</UniqueName><Name>OtherPackageB</Name><accessControlQualifier>public</accessControlQualifier><signature>()</signature><declaredReturnType></declaredReturnType></Method><Method><UniqueName>invocmethod.b.OtherPackageE.OtherPackageE()</UniqueName><Name>OtherPackageE</Name><accessControlQualifier>public</accessControlQualifier><signature>()</signature><declaredReturnType></declaredReturnType></Method><Method><UniqueName>exception.b.OtherPackageD.doSomething()</UniqueName><Name>doSomething</Name><accessControlQualifier>public</accessControlQualifier><signature>()</signature><declaredReturnType></declaredReturnType></Method><Method><UniqueName>invocmethod.b.OtherPackageD.OtherPackageD()</UniqueName><Name>OtherPackageD</Name><accessControlQualifier>public</accessControlQualifier><signature>()</signature><declaredReturnType></declaredReturnType></Method><Method><UniqueName>accessfield.b.OtherPackageC.OtherPackageC()</UniqueName><Name>OtherPackageC</Name><accessControlQualifier>public</accessControlQualifier><signature>()</signature><declaredReturnType></declaredReturnType></Method><Method><UniqueName>loops.b.OtherPackageC.doLoop()</UniqueName><Name>doLoop</Name><accessControlQualifier>public</accessControlQualifier><signature>()</signature><declaredReturnType></declaredReturnType></Method><Method><UniqueName>exception.a.SamePackageB.doSomething()</UniqueName><Name>doSomething</Name><accessControlQualifier>public</accessControlQualifier><signature>()</signature><declaredReturnType></declaredReturnType></Method><Method><UniqueName>invocmethod.a.SamePackageB.SamePackageB()</UniqueName><Name>SamePackageB</Name><accessControlQualifier>public</accessControlQualifier><signature>()</signature><declaredReturnType></declaredReturnType></Method><Method><UniqueName>invocmethod.b.OtherPackageA.OtherPackageA()</UniqueName><Name>OtherPackageA</Name><accessControlQualifier>public</accessControlQualifier><signature>()</signature><declaredReturnType></declaredReturnType></Method><Method><UniqueName>parameters.b.OtherPackageC.theMethod(parameters.a.TheType)</UniqueName><Name>theMethod</Name><accessControlQualifier>public</accessControlQualifier><signature>(parameters.a.TheType)</signature><declaredReturnType></declaredReturnType></Method><Method><UniqueName>parameters.b.OtherPackageA.theMethod(TheType)</UniqueName><Name>theMethod</Name><accessControlQualifier>public</accessControlQualifier><signature>(TheType)</signature><declaredReturnType></declaredReturnType></Method><Method><UniqueName>loops.b.OtherPackageB.doLoop()</UniqueName><Name>doLoop</Name><accessControlQualifier>public</accessControlQualifier><signature>()</signature><declaredReturnType></declaredReturnType></Method><Method><UniqueName>accessfield.a.SamePackageA.SamePackageA()</UniqueName><Name>SamePackageA</Name><accessControlQualifier>public</accessControlQualifier><signature>()</signature><declaredReturnType></declaredReturnType></Method><Method><UniqueName>invocmethod.b.OtherPackageF.OtherPackageF()</UniqueName><Name>OtherPackageF</Name><accessControlQualifier>public</accessControlQualifier><signature>()</signature><declaredReturnType></declaredReturnType></Method><Method><UniqueName>accessfield.a.SamePackageB.SamePackageB()</UniqueName><Name>SamePackageB</Name><accessControlQualifier>public</accessControlQualifier><signature>()</signature><declaredReturnType></declaredReturnType></Method><Method><UniqueName>loops.b.OtherPackageA.doLoop()</UniqueName><Name>doLoop</Name><accessControlQualifier>public</accessControlQualifier><signature>()</signature><declaredReturnType></declaredReturnType></Method><Method><UniqueName>exception.b.OtherPackageB.doSomething()</UniqueName><Name>doSomething</Name><accessControlQualifier>public</accessControlQualifier><signature>()</signature><declaredReturnType></declaredReturnType></Method><Method><UniqueName>exception.a.SamePackageC.doSomething()</UniqueName><Name>doSomething</Name><accessControlQualifier>public</accessControlQualifier><signature>()</signature><declaredReturnType></declaredReturnType></Method><Method><UniqueName>exception.b.OtherPackageG.doSomething()</UniqueName><Name>doSomething</Name><accessControlQualifier>public</accessControlQualifier><signature>()</signature><declaredReturnType></declaredReturnType></Method><Method><UniqueName>exception.b.OtherPackageJ.doSomething()</UniqueName><Name>doSomething</Name><accessControlQualifier>public</accessControlQualifier><signature>()</signature><declaredReturnType></declaredReturnType></Method><Method><UniqueName>invocmethod.a.TheType.theMethod()</UniqueName><Name>theMethod</Name><accessControlQualifier>public</accessControlQualifier><signature>()</signature><declaredReturnType></declaredReturnType></Method><Method><UniqueName>localvariables.b.OtherPackageC.theMethod()</UniqueName><Name>theMethod</Name><accessControlQualifier>public</accessControlQualifier><signature>()</signature><declaredReturnType></declaredReturnType></Method><Method><UniqueName>parameters.a.SamePackage.theMethod(TheType)</UniqueName><Name>theMethod</Name><accessControlQualifier>public</accessControlQualifier><signature>(TheType)</signature><declaredReturnType></declaredReturnType></Method><Method><UniqueName>exception.b.OtherPackageH.doSomething()</UniqueName><Name>doSomething</Name><accessControlQualifier>public</accessControlQualifier><signature>()</signature><declaredReturnType></declaredReturnType></Method><Method><UniqueName>exception.a.SamePackageA.doSomething()</UniqueName><Name>doSomething</Name><accessControlQualifier>public</accessControlQualifier><signature>()</signature><declaredReturnType></declaredReturnType></Method><Method><UniqueName>exception.b.OtherPackageA.doSomething()</UniqueName><Name>doSomething</Name><accessControlQualifier>public</accessControlQualifier><signature>()</signature><declaredReturnType></declaredReturnType></Method><Method><UniqueName>parameters.b.OtherPackageB.theMethod(TheType)</UniqueName><Name>theMethod</Name><accessControlQualifier>public</accessControlQualifier><signature>(TheType)</signature><declaredReturnType></declaredReturnType></Method><Method><UniqueName>localvariables.a.SamePackage.theMethod()</UniqueName><Name>theMethod</Name><accessControlQualifier>public</accessControlQualifier><signature>()</signature><declaredReturnType></declaredReturnType></Method><Method><UniqueName>exception.b.OtherPackageF.doSomething()</UniqueName><Name>doSomething</Name><accessControlQualifier>public</accessControlQualifier><signature>()</signature><declaredReturnType></declaredReturnType></Method><Method><UniqueName>invocmethod.b.OtherPackageC.OtherPackageC()</UniqueName><Name>OtherPackageC</Name><accessControlQualifier>public</accessControlQualifier><signature>()</signature><declaredReturnType></declaredReturnType></Method><Method><UniqueName>exception.b.OtherPackageI.doSomething()</UniqueName><Name>doSomething</Name><accessControlQualifier>public</accessControlQualifier><signature>()</signature><declaredReturnType></declaredReturnType></Method><Method><UniqueName>invocmethod.a.SamePackageA.SamePackageA()</UniqueName><Name>SamePackageA</Name><accessControlQualifier>public</accessControlQualifier><signature>()</signature><declaredReturnType></declaredReturnType></Method><Method><UniqueName>loops.a.SamePackage.doLoop()</UniqueName><Name>doLoop</Name><accessControlQualifier>public</accessControlQualifier><signature>()</signature><declaredReturnType></declaredReturnType></Method><Method><UniqueName>attrdeclaration.a.TheType.TheType()</UniqueName><Name>TheType</Name><accessControlQualifier>public</accessControlQualifier><signature>()</signature><declaredReturnType></declaredReturnType></Method><Method><UniqueName>invocmethod.b.OtherPackageB.OtherPackageB()</UniqueName><Name>OtherPackageB</Name><accessControlQualifier>public</accessControlQualifier><signature>()</signature><declaredReturnType></declaredReturnType></Method><Method><UniqueName>accessfield.b.OtherPackageA.OtherPackageA()</UniqueName><Name>OtherPackageA</Name><accessControlQualifier>public</accessControlQualifier><signature>()</signature><declaredReturnType></declaredReturnType></Method><Method><UniqueName>exception.b.OtherPackageC.doSomething()</UniqueName><Name>doSomething</Name><accessControlQualifier>public</accessControlQualifier><signature>()</signature><declaredReturnType></declaredReturnType></Method><Method><UniqueName>localvariables.b.OtherPackageA.theMethod()</UniqueName><Name>theMethod</Name><accessControlQualifier>public</accessControlQualifier><signature>()</signature><declaredReturnType></declaredReturnType></Method></Methods><Variables><Variable><UniqueName>attrdeclaration.a.SamePackage.declaration</UniqueName><Name>declaration</Name><BelongsToClass>attrdeclaration.a.SamePackage</BelongsToClass><declareType>attrdeclaration.a.TheType</declareType></Variable><Variable><UniqueName>attrdeclaration.b.OtherPackageC.declaration</UniqueName><Name>declaration</Name><BelongsToClass>attrdeclaration.b.OtherPackageC</BelongsToClass><declareType>attrdeclaration.a.TheType</declareType></Variable><Variable><UniqueName>annotation.b.OtherPackageB.AnnotationInterface</UniqueName><Name>AnnotationInterface</Name><BelongsToClass>annotation.b.OtherPackageB</BelongsToClass><declareType>annotation.a.AnnotationInterface</declareType></Variable><Variable><UniqueName>annotation.b.OtherPackageC.annotatedAttribute</UniqueName><Name>annotatedAttribute</Name><BelongsToClass>annotation.b.OtherPackageC</BelongsToClass><declareType>String</declareType></Variable><Variable><UniqueName>annotation.b.OtherPackageA.annotatedAttribute</UniqueName><Name>annotatedAttribute</Name><BelongsToClass>annotation.b.OtherPackageA</BelongsToClass><declareType>String</declareType></Variable><Variable><UniqueName>loops.b.OtherPackageA.doLoop().type</UniqueName><Name>type</Name><BelongsToClass>loops.b.OtherPackageA</BelongsToClass><declareType>QUALIFIED_TYPE_IDENT</declareType></Variable><Variable><UniqueName>loops.a.SamePackage.doLoop().type</UniqueName><Name>type</Name><BelongsToClass>loops.a.SamePackage</BelongsToClass><declareType>QUALIFIED_TYPE_IDENT</declareType></Variable><Variable><UniqueName>invocmethod.a.SamePackageB.ref</UniqueName><Name>ref</Name><BelongsToClass>invocmethod.a.SamePackageB</BelongsToClass><declareType>invocmethod.a.TheType</declareType></Variable><Variable><UniqueName>OtherPackageA().s</UniqueName><Name>s</Name><BelongsToClass>accessfield.b.OtherPackageA</BelongsToClass><declareType>String</declareType></Variable><Variable><UniqueName>attrdeclaration.b.OtherPackageB.declaration</UniqueName><Name>declaration</Name><BelongsToClass>attrdeclaration.b.OtherPackageB</BelongsToClass><declareType>attrdeclaration.a.TheType</declareType></Variable><Variable><UniqueName>annotation.b.OtherPackageC.AnnotationInterface</UniqueName><Name>AnnotationInterface</Name><BelongsToClass>annotation.b.OtherPackageC</BelongsToClass><declareType>annotation.a.AnnotationInterface</declareType></Variable><Variable><UniqueName>invocconstructor.b.OtherPackageC.theType</UniqueName><Name>theType</Name><BelongsToClass>invocconstructor.b.OtherPackageC</BelongsToClass><declareType>invocconstructor.a.TheType</declareType></Variable><Variable><UniqueName>enumeration.a.SamePackage.value</UniqueName><Name>value</Name><BelongsToClass>enumeration.a.SamePackage</BelongsToClass><declareType>TheEnum</declareType></Variable><Variable><UniqueName>invocmethod.b.OtherPackageE.ref</UniqueName><Name>ref</Name><BelongsToClass>invocmethod.b.OtherPackageE</BelongsToClass><declareType>invocmethod.a.TheType</declareType></Variable><Variable><UniqueName>attrdeclaration.b.OtherPackageA.declaration</UniqueName><Name>declaration</Name><BelongsToClass>attrdeclaration.b.OtherPackageA</BelongsToClass><declareType>attrdeclaration.a.TheType</declareType></Variable><Variable><UniqueName>annotation.b.OtherPackageB.annotatedAttribute</UniqueName><Name>annotatedAttribute</Name><BelongsToClass>annotation.b.OtherPackageB</BelongsToClass><declareType>String</declareType></Variable><Variable><UniqueName>enumeration.b.OtherPackageB.value</UniqueName><Name>value</Name><BelongsToClass>enumeration.b.OtherPackageB</BelongsToClass><declareType>TheEnum</declareType></Variable><Variable><UniqueName>annotation.b.OtherPackageA.AnnotationInterface</UniqueName><Name>AnnotationInterface</Name><BelongsToClass>annotation.b.OtherPackageA</BelongsToClass><declareType>annotation.a.AnnotationInterface</declareType></Variable><Variable><UniqueName>parameters.a.SamePackage.theMethod(TheType).param</UniqueName><Name>param</Name><BelongsToClass>parameters.a.SamePackage</BelongsToClass><declareType>parameters.a.TheType</declareType></Variable><Variable><UniqueName>SamePackageA().s</UniqueName><Name>s</Name><BelongsToClass>accessfield.a.SamePackageA</BelongsToClass><declareType>String</declareType></Variable><Variable><UniqueName>parameters.b.OtherPackageC.theMethod(parameters.a.TheType).param</UniqueName><Name>param</Name><BelongsToClass>parameters.b.OtherPackageC</BelongsToClass><declareType>parameters.a.TheType</declareType></Variable><Variable><UniqueName>OtherPackageC().s</UniqueName><Name>s</Name><BelongsToClass>accessfield.b.OtherPackageC</BelongsToClass><declareType>String</declareType></Variable><Variable><UniqueName>invocmethod.b.OtherPackageD.ref</UniqueName><Name>ref</Name><BelongsToClass>invocmethod.b.OtherPackageD</BelongsToClass><declareType>invocmethod.a.TheType</declareType></Variable><Variable><UniqueName>invocconstructor.b.OtherPackageB.theType</UniqueName><Name>theType</Name><BelongsToClass>invocconstructor.b.OtherPackageB</BelongsToClass><declareType>invocconstructor.a.TheType</declareType></Variable><Variable><UniqueName>OtherPackageB().s</UniqueName><Name>s</Name><BelongsToClass>accessfield.b.OtherPackageB</BelongsToClass><declareType>String</declareType></Variable><Variable><UniqueName>accessfield.a.TheOwner.theString</UniqueName><Name>theString</Name><BelongsToClass>accessfield.a.TheOwner</BelongsToClass><declareType>String</declareType></Variable><Variable><UniqueName>enumeration.b.OtherPackageA.value</UniqueName><Name>value</Name><BelongsToClass>enumeration.b.OtherPackageA</BelongsToClass><declareType>enumeration.a.TheEnum</declareType></Variable><Variable><UniqueName>invocconstructor.a.SamePackage.theType</UniqueName><Name>theType</Name><BelongsToClass>invocconstructor.a.SamePackage</BelongsToClass><declareType>invocconstructor.a.TheType</declareType></Variable><Variable><UniqueName>cycles.b.OtherPackage.theCycleConnector</UniqueName><Name>theCycleConnector</Name><BelongsToClass>cycles.b.OtherPackage</BelongsToClass><declareType>cycles.a.TheInterface</declareType></Variable><Variable><UniqueName>invocmethod.b.OtherPackageF.ref</UniqueName><Name>ref</Name><BelongsToClass>invocmethod.b.OtherPackageF</BelongsToClass><declareType>invocmethod.a.TheType</declareType></Variable><Variable><UniqueName>loops.b.OtherPackageC.doLoop().type</UniqueName><Name>type</Name><BelongsToClass>loops.b.OtherPackageC</BelongsToClass><declareType>QUALIFIED_TYPE_IDENT</declareType></Variable><Variable><UniqueName>invocconstructor.b.OtherPackageA.theType</UniqueName><Name>theType</Name><BelongsToClass>invocconstructor.b.OtherPackageA</BelongsToClass><declareType>invocconstructor.a.TheType</declareType></Variable><Variable><UniqueName>theMethod().localvariable</UniqueName><Name>localvariable</Name><BelongsToClass>localvariables.b.OtherPackageC</BelongsToClass><declareType>localvariables.a.TheType</declareType></Variable><Variable><UniqueName>parameters.b.OtherPackageB.theMethod(TheType).param</UniqueName><Name>param</Name><BelongsToClass>parameters.b.OtherPackageB</BelongsToClass><declareType>parameters.a.TheType</declareType></Variable><Variable><UniqueName>annotation.a.SamePackage.AnnotationInterface</UniqueName><Name>AnnotationInterface</Name><BelongsToClass>annotation.a.SamePackage</BelongsToClass><declareType>annotation.a.AnnotationInterface</declareType></Variable><Variable><UniqueName>parameters.b.OtherPackageA.theMethod(TheType).param</UniqueName><Name>param</Name><BelongsToClass>parameters.b.OtherPackageA</BelongsToClass><declareType>parameters.a.TheType</declareType></Variable><Variable><UniqueName>enumeration.b.OtherPackageC.value</UniqueName><Name>value</Name><BelongsToClass>enumeration.b.OtherPackageC</BelongsToClass><declareType>enumeration.a.TheEnum</declareType></Variable><Variable><UniqueName>annotation.a.SamePackage.annotatedAttribute</UniqueName><Name>annotatedAttribute</Name><BelongsToClass>annotation.a.SamePackage</BelongsToClass><declareType>String</declareType></Variable><Variable><UniqueName>accessfield.a.SamePackageA.owner</UniqueName><Name>owner</Name><BelongsToClass>accessfield.a.SamePackageA</BelongsToClass><declareType>accessfield.a.TheOwner</declareType></Variable><Variable><UniqueName>loops.b.OtherPackageB.doLoop().type</UniqueName><Name>type</Name><BelongsToClass>loops.b.OtherPackageB</BelongsToClass><declareType>QUALIFIED_TYPE_IDENT</declareType></Variable><Variable><UniqueName>SamePackageB().s</UniqueName><Name>s</Name><BelongsToClass>accessfield.a.SamePackageB</BelongsToClass><declareType>String</declareType></Variable></Variables><Associations><Association><From>accessfield.b.OtherPackageA</From><To>accessfield.a.TheOwner</To><Type>Import</Type><linenumber>3</linenumber></Association><Association><From>accessfield.b.OtherPackageB</From><To>accessfield.a</To><Type>Import</Type><linenumber>3</linenumber></Association><Association><From>annotation.b.OtherPackageA</From><To>annotation.a.AnnotationInterface</To><Type>Import</Type><linenumber>3</linenumber></Association><Association><From>annotation.b.OtherPackageB</From><To>annotation.a</To><Type>Import</Type><linenumber>3</linenumber></Association><Association><From>annotation.b.OtherPackageC</From><To>annotation.a.AnnotationInterface</To><Type>Import</Type><linenumber>3</linenumber></Association><Association><From>attrdeclaration.b.OtherPackageA</From><To>attrdeclaration.a.TheType</To><Type>Import</Type><linenumber>3</linenumber></Association><Association><From>attrdeclaration.b.OtherPackageB</From><To>attrdeclaration.a</To><Type>Import</Type><linenumber>3</linenumber></Association><Association><From>cycles.b.OtherPackage</From><To>cycles.a.TheInterface</To><Type>Import</Type><linenumber>3</linenumber></Association><Association><From>enumeration.b.OtherPackageA</From><To>enumeration.a.TheEnum</To><Type>Import</Type><linenumber>3</linenumber></Association><Association><From>enumeration.b.OtherPackageB</From><To>enumeration.a</To><Type>Import</Type><linenumber>3</linenumber></Association><Association><From>exception.b.OtherPackageA</From><To>exception.a.TheException</To><Type>Import</Type><linenumber>3</linenumber></Association><Association><From>exception.b.OtherPackageB</From><To>exception.a</To><Type>Import</Type><linenumber>3</linenumber></Association><Association><From>exception.b.OtherPackageD</From><To>exception.a.TheException</To><Type>Import</Type><linenumber>3</linenumber></Association><Association><From>exception.b.OtherPackageF</From><To>exception.a</To><Type>Import</Type><linenumber>3</linenumber></Association><Association><From>exception.b.OtherPackageH</From><To>exception.a.TheException</To><Type>Import</Type><linenumber>3</linenumber></Association><Association><From>exception.b.OtherPackageI</From><To>exception.a</To><Type>Import</Type><linenumber>3</linenumber></Association><Association><From>extendsabstract.b.OtherPackageA</From><To>extendsabstract.a.AbstractClass</To><Type>Import</Type><linenumber>3</linenumber></Association><Association><From>extendsabstract.b.OtherPackageB</From><To>extendsabstract.a</To><Type>Import</Type><linenumber>3</linenumber></Association><Association><From>extendsconcrete.b.OtherPackageA</From><To>extendsconcrete.a.ConcreteClass</To><Type>Import</Type><linenumber>3</linenumber></Association><Association><From>extendsconcrete.b.OtherPackageB</From><To>extendsconcrete.a</To><Type>Import</Type><linenumber>3</linenumber></Association><Association><From>implement.b.OtherPackageA</From><To>implement.a.TheInterface</To><Type>Import</Type><linenumber>3</linenumber></Association><Association><From>implement.b.OtherPackageB</From><To>implement.a</To><Type>Import</Type><linenumber>3</linenumber></Association><Association><From>indirect.b.OterPackageA</From><To>indirect.a.SamePackage</To><Type>Import</Type><linenumber>3</linenumber></Association><Association><From>indirect.b.OtherPackageB</From><To>indirect.a</To><Type>Import</Type><linenumber>3</linenumber></Association><Association><From>invocconstructor.b.OtherPackageA</From><To>invocconstructor.a.TheType</To><Type>Import</Type><linenumber>3</linenumber></Association><Association><From>invocconstructor.b.OtherPackageB</From><To>invocconstructor.a</To><Type>Import</Type><linenumber>3</linenumber></Association><Association><From>invocmethod.b.OtherPackageA</From><To>invocmethod.a.TheType</To><Type>Import</Type><linenumber>3</linenumber></Association><Association><From>invocmethod.b.OtherPackageB</From><To>invocmethod.a</To><Type>Import</Type><linenumber>3</linenumber></Association><Association><From>invocmethod.b.OtherPackageD</From><To>invocmethod.a.TheType</To><Type>Import</Type><linenumber>3</linenumber></Association><Association><From>invocmethod.b.OtherPackageE</From><To>invocmethod.a</To><Type>Import</Type><linenumber>3</linenumber></Association><Association><From>localvariables.b.OtherPackageA</From><To>localvariables.a.TheType</To><Type>Import</Type><linenumber>3</linenumber></Association><Association><From>localvariables.b.OtherPackageB</From><To>localvariables.a</To><Type>Import</Type><linenumber>3</linenumber></Association><Association><From>loops.b.OtherPackageA</From><To>loops.a.TheType</To><Type>Import</Type><linenumber>3</linenumber></Association><Association><From>loops.b.OtherPackageB</From><To>loops.a</To><Type>Import</Type><linenumber>3</linenumber></Association><Association><From>parameters.b.OtherPackageA</From><To>parameters.a.TheType</To><Type>Import</Type><linenumber>3</linenumber></Association><Association><From>parameters.b.OtherPackageB</From><To>parameters.a</To><Type>Import</Type><linenumber>3</linenumber></Association><Association><From>accessfield.a.SamePackageA</From><To>accessfield.a.TheOwner</To><Type>InvocConstructor</Type><linenumber>5</linenumber></Association><Association><From>accessfield.a.SamePackageA</From><To>accessfield.a.TheOwner</To><Type>Declaration</Type><linenumber>5</linenumber></Association><Association><From>accessfield.a.SamePackageA</From><To>accessfield.a.TheOwner</To><Type>AccessPropertyOrField</Type><linenumber>8</linenumber></Association><Association><From>accessfield.a.SamePackageA</From><To>String</To><Type>Declaration</Type><linenumber>8</linenumber></Association><Association><From>accessfield.a.SamePackageB</From><To>accessfield.a.TheOwner</To><Type>AccessPropertyOrField</Type><linenumber>6</linenumber></Association><Association><From>accessfield.a.SamePackageB</From><To>accessfield.a.TheOwner</To><Type>InvocConstructor</Type><linenumber>6</linenumber></Association><Association><From>accessfield.a.SamePackageB</From><To>String</To><Type>Declaration</Type><linenumber>6</linenumber></Association><Association><From>accessfield.a.TheOwner</From><To>String</To><Type>Declaration</Type><linenumber>5</linenumber></Association><Association><From>accessfield.b.OtherPackageA</From><To>accessfield.a.TheOwner</To><Type>AccessPropertyOrField</Type><linenumber>8</linenumber></Association><Association><From>accessfield.b.OtherPackageA</From><To>accessfield.a.TheOwner</To><Type>InvocConstructor</Type><linenumber>8</linenumber></Association><Association><From>accessfield.b.OtherPackageA</From><To>String</To><Type>Declaration</Type><linenumber>8</linenumber></Association><Association><From>accessfield.b.OtherPackageB</From><To>accessfield.a.TheOwner</To><Type>AccessPropertyOrField</Type><linenumber>8</linenumber></Association><Association><From>accessfield.b.OtherPackageB</From><To>accessfield.a.TheOwner</To><Type>InvocConstructor</Type><linenumber>8</linenumber></Association><Association><From>accessfield.b.OtherPackageB</From><To>String</To><Type>Declaration</Type><linenumber>8</linenumber></Association><Association><From>accessfield.b.OtherPackageC</From><To>accessfield.a.TheOwner</To><Type>AccessPropertyOrField</Type><linenumber>6</linenumber></Association><Association><From>accessfield.b.OtherPackageC</From><To>accessfield.a.TheOwneraccessfield.a.TheOwner</To><Type>InvocConstructor</Type><linenumber>6</linenumber></Association><Association><From>accessfield.b.OtherPackageC</From><To>String</To><Type>Declaration</Type><linenumber>6</linenumber></Association><Association><From>annotation.a.SamePackage</From><To>annotation.a.AnnotationInterface</To><Type>Annotation</Type><linenumber>5</linenumber></Association><Association><From>annotation.a.SamePackage</From><To>String</To><Type>Declaration</Type><linenumber>6</linenumber></Association><Association><From>annotation.b.OtherPackageA</From><To>annotation.a.AnnotationInterface</To><Type>Annotation</Type><linenumber>7</linenumber></Association><Association><From>annotation.b.OtherPackageA</From><To>String</To><Type>Declaration</Type><linenumber>8</linenumber></Association><Association><From>annotation.b.OtherPackageB</From><To>annotation.a.AnnotationInterface</To><Type>Annotation</Type><linenumber>7</linenumber></Association><Association><From>annotation.b.OtherPackageB</From><To>String</To><Type>Declaration</Type><linenumber>8</linenumber></Association><Association><From>annotation.b.OtherPackageC</From><To>annotation.a.AnnotationInterface</To><Type>Annotation</Type><linenumber>7</linenumber></Association><Association><From>annotation.b.OtherPackageC</From><To>String</To><Type>Declaration</Type><linenumber>8</linenumber></Association><Association><From>attrdeclaration.a.SamePackage</From><To>attrdeclaration.a.TheType</To><Type>Declaration</Type><linenumber>5</linenumber></Association><Association><From>attrdeclaration.b.OtherPackageA</From><To>attrdeclaration.a.TheType</To><Type>Declaration</Type><linenumber>7</linenumber></Association><Association><From>attrdeclaration.b.OtherPackageB</From><To>attrdeclaration.a.TheType</To><Type>Declaration</Type><linenumber>7</linenumber></Association><Association><From>attrdeclaration.b.OtherPackageC</From><To>attrdeclaration.a.TheType</To><Type>Declaration</Type><linenumber>5</linenumber></Association><Association><From>cycles.a.SamePackage</From><To>cycles.a.TheInterface</To><Type>Implements</Type><linenumber>3</linenumber></Association><Association><From>cycles.b.OtherPackage</From><To>cycles.a.SamePackage</To><Type>ExtendsConcrete</Type><linenumber>5</linenumber></Association><Association><From>cycles.b.OtherPackage</From><To>cycles.a.TheInterface</To><Type>Declaration</Type><linenumber>7</linenumber></Association><Association><From>enumeration.a.SamePackage</From><To>TheEnum</To><Type>Declaration</Type><linenumber>5</linenumber></Association><Association><From>enumeration.b.OtherPackageA</From><To>enumeration.a.TheEnum</To><Type>AccessPropertyOrField</Type><linenumber>7</linenumber></Association><Association><From>enumeration.b.OtherPackageA</From><To>enumeration.a.TheEnum</To><Type>Declaration</Type><linenumber>7</linenumber></Association><Association><From>enumeration.b.OtherPackageB</From><To>TheEnum</To><Type>Declaration</Type><linenumber>7</linenumber></Association><Association><From>enumeration.b.OtherPackageC</From><To>enumeration.a.TheEnum</To><Type>Declaration</Type><linenumber>5</linenumber></Association><Association><From>exception.a.SamePackageA</From><To>exception.a.TheException</To><Type>Exception</Type><linenumber>5</linenumber></Association><Association><From>exception.a.SamePackageB</From><To>exception.a.TheException</To><Type>Exception</Type><linenumber>5</linenumber></Association><Association><From>exception.a.SamePackageB</From><To>exception.a.TheException</To><Type>Exception</Type><linenumber>7</linenumber></Association><Association><From>exception.a.SamePackageC</From><To>exception.a.TheException</To><Type>Exception</Type><linenumber>8</linenumber></Association><Association><From>exception.a.TheException</From><To>RuntimeException</To><Type>Extends</Type><linenumber>3</linenumber></Association><Association><From>exception.b.OtherPackageA</From><To>exception.a.TheException</To><Type>Exception</Type><linenumber>7</linenumber></Association><Association><From>exception.b.OtherPackageB</From><To>exception.a.TheException</To><Type>Exception</Type><linenumber>7</linenumber></Association><Association><From>exception.b.OtherPackageC</From><To>exception.a.TheException</To><Type>Exception</Type><linenumber>5</linenumber></Association><Association><From>exception.b.OtherPackageD</From><To>exception.a.TheException</To><Type>Exception</Type><linenumber>7</linenumber></Association><Association><From>exception.b.OtherPackageD</From><To>exception.a.TheException</To><Type>Exception</Type><linenumber>8</linenumber></Association><Association><From>exception.b.OtherPackageF</From><To>exception.a.TheException</To><Type>Exception</Type><linenumber>7</linenumber></Association><Association><From>exception.b.OtherPackageF</From><To>exception.a.TheException</To><Type>Exception</Type><linenumber>8</linenumber></Association><Association><From>exception.b.OtherPackageG</From><To>exception.a.TheException</To><Type>Exception</Type><linenumber>5</linenumber></Association><Association><From>exception.b.OtherPackageG</From><To>exception.a.TheException</To><Type>Exception</Type><linenumber>6</linenumber></Association><Association><From>exception.b.OtherPackageH</From><To>exception.a.TheException</To><Type>Exception</Type><linenumber>10</linenumber></Association><Association><From>exception.b.OtherPackageI</From><To>exception.a.TheException</To><Type>Exception</Type><linenumber>10</linenumber></Association><Association><From>exception.b.OtherPackageJ</From><To>exception.a.TheException</To><Type>Exception</Type><linenumber>8</linenumber></Association><Association><From>extendsabstract.a.SamePackage</From><To>extendsabstract.a.AbstractClass</To><Type>ExtendsAbstract</Type><linenumber>3</linenumber></Association><Association><From>extendsabstract.b.OtherPackageA</From><To>extendsabstract.a.AbstractClass</To><Type>ExtendsAbstract</Type><linenumber>5</linenumber></Association><Association><From>extendsabstract.b.OtherPackageB</From><To>extendsabstract.a.AbstractClass</To><Type>ExtendsAbstract</Type><linenumber>5</linenumber></Association><Association><From>extendsabstract.b.OtherPackageC</From><To>extendsabstract.a.AbstractClass</To><Type>ExtendsAbstract</Type><linenumber>3</linenumber></Association><Association><From>extendsconcrete.a.SamePackage</From><To>extendsconcrete.a.ConcreteClass</To><Type>ExtendsConcrete</Type><linenumber>3</linenumber></Association><Association><From>extendsconcrete.b.OtherPackageA</From><To>extendsconcrete.a.ConcreteClass</To><Type>ExtendsConcrete</Type><linenumber>5</linenumber></Association><Association><From>extendsconcrete.b.OtherPackageB</From><To>extendsconcrete.a.ConcreteClass</To><Type>ExtendsConcrete</Type><linenumber>5</linenumber></Association><Association><From>extendsconcrete.b.OtherPackageC</From><To>extendsconcrete.a.ConcreteClass</To><Type>ExtendsConcrete</Type><linenumber>3</linenumber></Association><Association><From>implement.a.SamePackage</From><To>implement.a.TheInterface</To><Type>Implements</Type><linenumber>3</linenumber></Association><Association><From>implement.b.OtherPackageA</From><To>implement.a.TheInterface</To><Type>Implements</Type><linenumber>5</linenumber></Association><Association><From>implement.b.OtherPackageB</From><To>implement.a.TheInterface</To><Type>Implements</Type><linenumber>5</linenumber></Association><Association><From>implement.b.OtherPackageC</From><To>implement.a.TheInterface</To><Type>Implements</Type><linenumber>3</linenumber></Association><Association><From>indirect.a.SamePackage</From><To>indirect.a.TheInterface</To><Type>Implements</Type><linenumber>3</linenumber></Association><Association><From>indirect.b.OterPackageA</From><To>indirect.a.SamePackage</To><Type>ExtendsConcrete</Type><linenumber>5</linenumber></Association><Association><From>indirect.b.OtherPackageB</From><To>indirect.a.SamePackage</To><Type>ExtendsConcrete</Type><linenumber>5</linenumber></Association><Association><From>indirect.b.OtherPackageC</From><To>indirect.a.SamePackage</To><Type>ExtendsConcrete</Type><linenumber>3</linenumber></Association><Association><From>invocconstructor.a.SamePackage</From><To>invocconstructor.a.TheType</To><Type>InvocConstructor</Type><linenumber>5</linenumber></Association><Association><From>invocconstructor.a.SamePackage</From><To>invocconstructor.a.TheType</To><Type>Declaration</Type><linenumber>5</linenumber></Association><Association><From>invocconstructor.b.OtherPackageA</From><To>invocconstructor.a.TheType</To><Type>InvocConstructor</Type><linenumber>7</linenumber></Association><Association><From>invocconstructor.b.OtherPackageA</From><To>invocconstructor.a.TheType</To><Type>Declaration</Type><linenumber>7</linenumber></Association><Association><From>invocconstructor.b.OtherPackageB</From><To>invocconstructor.a.TheType</To><Type>InvocConstructor</Type><linenumber>7</linenumber></Association><Association><From>invocconstructor.b.OtherPackageB</From><To>invocconstructor.a.TheType</To><Type>Declaration</Type><linenumber>7</linenumber></Association><Association><From>invocconstructor.b.OtherPackageC</From><To>invocconstructor.a.TheType</To><Type>InvocConstructor</Type><linenumber>5</linenumber></Association><Association><From>invocconstructor.b.OtherPackageC</From><To>invocconstructor.a.TheType</To><Type>Declaration</Type><linenumber>5</linenumber></Association><Association><From>invocmethod.a.SamePackageA</From><To>invocmethod.a.TheType</To><Type>InvocConstructor</Type><linenumber>7</linenumber></Association><Association><From>invocmethod.a.SamePackageA</From><To>invocmethod.a.TheType</To><Type>InvocMethod</Type><linenumber>7</linenumber></Association><Association><From>invocmethod.a.SamePackageB</From><To>invocmethod.a.TheType</To><Type>InvocConstructor</Type><linenumber>5</linenumber></Association><Association><From>invocmethod.a.SamePackageB</From><To>invocmethod.a.TheType</To><Type>Declaration</Type><linenumber>5</linenumber></Association><Association><From>invocmethod.a.SamePackageB</From><To>invocmethod.a.TheType</To><Type>InvocMethod</Type><linenumber>8</linenumber></Association><Association><From>invocmethod.b.OtherPackageA</From><To>invocmethod.a.TheType</To><Type>InvocConstructor</Type><linenumber>9</linenumber></Association><Association><From>invocmethod.b.OtherPackageA</From><To>invocmethod.a.TheType</To><Type>InvocMethod</Type><linenumber>9</linenumber></Association><Association><From>invocmethod.b.OtherPackageB</From><To>invocmethod.a.TheType</To><Type>InvocConstructor</Type><linenumber>9</linenumber></Association><Association><From>invocmethod.b.OtherPackageB</From><To>invocmethod.a.TheType</To><Type>InvocMethod</Type><linenumber>9</linenumber></Association><Association><From>invocmethod.b.OtherPackageC</From><To>invocmethod.a.TheTypeinvocmethod.a.TheType</To><Type>InvocConstructor</Type><linenumber>7</linenumber></Association><Association><From>invocmethod.b.OtherPackageC</From><To>invocmethod.a.TheTypeinvocmethod.a.TheType</To><Type>InvocMethod</Type><linenumber>7</linenumber></Association><Association><From>invocmethod.b.OtherPackageD</From><To>invocmethod.a.TheType</To><Type>InvocConstructor</Type><linenumber>7</linenumber></Association><Association><From>invocmethod.b.OtherPackageD</From><To>invocmethod.a.TheType</To><Type>Declaration</Type><linenumber>7</linenumber></Association><Association><From>invocmethod.b.OtherPackageD</From><To>invocmethod.a.TheType</To><Type>InvocMethod</Type><linenumber>10</linenumber></Association><Association><From>invocmethod.b.OtherPackageE</From><To>invocmethod.a.TheType</To><Type>InvocConstructor</Type><linenumber>7</linenumber></Association><Association><From>invocmethod.b.OtherPackageE</From><To>invocmethod.a.TheType</To><Type>Declaration</Type><linenumber>7</linenumber></Association><Association><From>invocmethod.b.OtherPackageE</From><To>invocmethod.a.TheType</To><Type>InvocMethod</Type><linenumber>10</linenumber></Association><Association><From>invocmethod.b.OtherPackageF</From><To>invocmethod.a.TheType</To><Type>InvocConstructor</Type><linenumber>5</linenumber></Association><Association><From>invocmethod.b.OtherPackageF</From><To>invocmethod.a.TheType</To><Type>Declaration</Type><linenumber>5</linenumber></Association><Association><From>invocmethod.b.OtherPackageF</From><To>invocmethod.a.TheType</To><Type>InvocMethod</Type><linenumber>8</linenumber></Association><Association><From>localvariables.a.SamePackage</From><To>localvariables.a.TheType</To><Type>Declaration</Type><linenumber>6</linenumber></Association><Association><From>localvariables.b.OtherPackageA</From><To>localvariables.a.TheType</To><Type>Declaration</Type><linenumber>8</linenumber></Association><Association><From>localvariables.b.OtherPackageB</From><To>localvariables.a.TheType</To><Type>Declaration</Type><linenumber>8</linenumber></Association><Association><From>localvariables.b.OtherPackageC</From><To>localvariables.a.TheType</To><Type>Declaration</Type><linenumber>6</linenumber></Association><Association><From>loops.a.SamePackage</From><To>QUALIFIED_TYPE_IDENT</To><Type>Declaration</Type><linenumber>6</linenumber></Association><Association><From>loops.b.OtherPackageA</From><To>QUALIFIED_TYPE_IDENT</To><Type>Declaration</Type><linenumber>8</linenumber></Association><Association><From>loops.b.OtherPackageB</From><To>QUALIFIED_TYPE_IDENT</To><Type>Declaration</Type><linenumber>8</linenumber></Association><Association><From>loops.b.OtherPackageC</From><To>QUALIFIED_TYPE_IDENT</To><Type>Declaration</Type><linenumber>6</linenumber></Association><Association><From>parameters.a.SamePackage</From><To>parameters.a.TheType</To><Type>Declaration</Type><linenumber>5</linenumber></Association><Association><From>parameters.b.OtherPackageA</From><To>parameters.a.TheType</To><Type>Declaration</Type><linenumber>7</linenumber></Association><Association><From>parameters.b.OtherPackageB</From><To>parameters.a.TheType</To><Type>Declaration</Type><linenumber>7</linenumber></Association><Association><From>parameters.b.OtherPackageC</From><To>parameters.a.TheType</To><Type>Declaration</Type><linenumber>5</linenumber></Association></Associations></Test12345678910>
